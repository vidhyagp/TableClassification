<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE pdf2xml SYSTEM "pdf2xml.dtd">

<pdf2xml>
<page number="1" position="absolute" top="0" left="0" height="1188" width="918">
	<fontspec id="0" size="24" family="Times" color="#000000"/>
	<fontspec id="1" size="15" family="Times" color="#000000"/>
	<fontspec id="2" size="12" family="Times" color="#000000"/>
	<fontspec id="3" size="11" family="Times" color="#000000"/>
	<fontspec id="4" size="7" family="Times" color="#000000"/>
	<fontspec id="5" size="6" family="Times" color="#000000"/>
	<fontspec id="6" size="8" family="Times" color="#000000"/>
	<fontspec id="7" size="10" family="Times" color="#000000"/>
	<fontspec id="8" size="9" family="Times" color="#000000"/>
<text top="108" left="135" width="645" height="25" font="0"><b>Towards Energy-Efﬁcient Database Cluster Design</b></text>
<text top="175" left="195" width="87" height="17" font="1">Willis Lang</text>
<text top="193" left="161" width="154" height="14" font="2">University of Wisconsin</text>
<text top="215" left="159" width="157" height="17" font="1">wlang@cs.wisc.edu</text>
<text top="175" left="372" width="170" height="17" font="1">Stavros Harizopoulos</text>
<text top="193" left="426" width="63" height="14" font="2">Nou Data</text>
<text top="213" left="368" width="179" height="17" font="1">stavros@noudata.com</text>
<text top="175" left="611" width="132" height="17" font="1">Jignesh M. Patel</text>
<text top="193" left="600" width="154" height="14" font="2">University of Wisconsin</text>
<text top="215" left="593" width="167" height="17" font="1">jignesh@cs.wisc.edu</text>
<text top="241" left="289" width="118" height="17" font="1">Mehul A. Shah</text>
<text top="259" left="316" width="63" height="14" font="2">Nou Data</text>
<text top="279" left="262" width="171" height="17" font="1">mehul@noudata.com</text>
<text top="241" left="486" width="162" height="17" font="1">Dimitris Tsirogiannis</text>
<text top="259" left="516" width="101" height="14" font="2">Microsoft Corp.</text>
<text top="281" left="474" width="187" height="17" font="1">dimitsir@microsoft.com</text>
<text top="321" left="81" width="97" height="16" font="1">ABSTRACT</text>
<text top="346" left="81" width="359" height="12" font="3">Energy is a growing component of the operational cost for many</text>
<text top="361" left="79" width="363" height="12" font="3">“big data” deployments, and hence has become increasingly im-</text>
<text top="377" left="81" width="359" height="12" font="3">portant for practitioners of large-scale data analysis who require</text>
<text top="393" left="81" width="359" height="12" font="3">scale-out clusters or parallel DBMS appliances. Although a number</text>
<text top="409" left="81" width="360" height="12" font="3">of recent studies have investigated the energy efﬁciency of DBMSs,</text>
<text top="424" left="81" width="359" height="12" font="3">none of these studies have looked at the architectural design space of</text>
<text top="440" left="81" width="359" height="12" font="3">energy-efﬁcient parallel DBMS clusters. There are many challenges</text>
<text top="456" left="81" width="359" height="12" font="3">to increasing the energy efﬁciency of a DBMS cluster, including</text>
<text top="471" left="81" width="361" height="12" font="3">dealing with the inherent scaling inefﬁciency of parallel data pro-</text>
<text top="487" left="81" width="359" height="12" font="3">cessing, and choosing the appropriate energy-efﬁcient hardware. In</text>
<text top="503" left="81" width="359" height="12" font="3">this paper, we experimentally examine and analyze a number of key</text>
<text top="518" left="81" width="359" height="12" font="3">parameters related to these challenges for designing energy-efﬁcient</text>
<text top="534" left="81" width="361" height="12" font="3">database clusters. We explore the cluster design space using empiri-</text>
<text top="550" left="81" width="359" height="12" font="3">cal results and propose a model that considers the key bottlenecks</text>
<text top="565" left="81" width="359" height="12" font="3">to energy efﬁciency in a parallel DBMS. This paper represents a</text>
<text top="581" left="81" width="359" height="12" font="3">key ﬁrst step in designing energy-efﬁcient database clusters, which</text>
<text top="597" left="81" width="359" height="12" font="3">is increasingly important given the trend toward parallel database</text>
<text top="613" left="81" width="60" height="12" font="3">appliances.</text>
<text top="653" left="81" width="13" height="16" font="1">1.</text>
<text top="653" left="112" width="143" height="16" font="1">INTRODUCTION</text>
<text top="676" left="94" width="352" height="12" font="3">In recent years, energy efﬁciency has become an important database</text>
<text top="692" left="81" width="359" height="12" font="3">research topic since the cost of powering clusters is a big component</text>
<text top="708" left="81" width="359" height="12" font="3">of the total operational cost [13, 15, 19]. As “big data” becomes</text>
<text top="723" left="81" width="361" height="12" font="3">the norm in various industries, the use of clusters to analyze ever-</text>
<text top="739" left="81" width="359" height="12" font="3">increasing volumes of data will continue to increase. In turn, this</text>
<text top="755" left="81" width="359" height="12" font="3">trend will drive up the need for designing energy-efﬁcient data</text>
<text top="770" left="81" width="359" height="12" font="3">processing clusters. The focus of this paper is on designing such</text>
<text top="786" left="81" width="342" height="12" font="3">energy-efﬁcient clusters for database analytic query processing.</text>
<text top="802" left="94" width="347" height="12" font="3">One important problem regarding the energy efﬁciency of database</text>
<text top="817" left="81" width="359" height="12" font="3">clusters surrounds the classical problem of non-linear scalability in</text>
<text top="833" left="81" width="359" height="12" font="3">parallel data processing [12]. Non-linear scalability refers to the</text>
<text top="849" left="81" width="359" height="12" font="3">inability of a parallel system to proportionally increase performance</text>
<text top="864" left="81" width="360" height="12" font="3">as the computational resources/nodes are increased. More recently,</text>
<text top="880" left="81" width="359" height="12" font="3">it was shown that modern parallel DBMSs are still subject to these</text>
<text top="896" left="81" width="359" height="12" font="3">scalability pitfalls that affect their performance and increase their</text>
<text top="912" left="81" width="151" height="12" font="3">total operating cost [25, 31].</text>
<text top="504" left="650" width="2" height="10" font="4"> </text>
<text top="360" left="596" width="12" height="9" font="5">8N </text>
<text top="356" left="563" width="17" height="9" font="5">10N </text>
<text top="350" left="538" width="17" height="9" font="5">12N </text>
<text top="368" left="518" width="17" height="9" font="5">14N </text>
<text top="335" left="503" width="17" height="9" font="5">16N </text>
<text top="477" left="491" width="11" height="9" font="5">0.0</text>
<text top="464" left="491" width="11" height="9" font="5">0.1</text>
<text top="451" left="491" width="11" height="9" font="5">0.2</text>
<text top="438" left="491" width="11" height="9" font="5">0.3</text>
<text top="425" left="491" width="11" height="9" font="5">0.4</text>
<text top="412" left="491" width="11" height="9" font="5">0.5</text>
<text top="399" left="491" width="11" height="9" font="5">0.6</text>
<text top="386" left="491" width="11" height="9" font="5">0.7</text>
<text top="373" left="491" width="11" height="9" font="5">0.8</text>
<text top="360" left="491" width="11" height="9" font="5">0.9</text>
<text top="347" left="491" width="11" height="9" font="5">1.0</text>
<text top="489" left="629" width="16" height="9" font="5">0.50</text>
<text top="489" left="566" width="16" height="9" font="5">0.75</text>
<text top="489" left="503" width="16" height="9" font="5">1.00</text>
<text top="479" left="483" width="0" height="11" font="6">No</text>
<text top="467" left="483" width="0" height="11" font="6">rmaliz</text>
<text top="440" left="483" width="0" height="11" font="6">ed</text>
<text top="429" left="483" width="0" height="11" font="6"> En</text>
<text top="416" left="483" width="0" height="11" font="6">er</text>
<text top="407" left="483" width="0" height="11" font="6">gy</text>
<text top="397" left="483" width="0" height="11" font="6"> C</text>
<text top="389" left="483" width="0" height="11" font="6">on</text>
<text top="378" left="483" width="0" height="11" font="6">sump</text>
<text top="354" left="483" width="0" height="11" font="6">tion</text>
<text top="336" left="483" width="0" height="11" font="6"> </text>
<text top="499" left="512" width="111" height="11" font="6">Normalized Performance </text>
<text top="322" left="511" width="106" height="13" font="7">Varying Cluster Sizes </text>
<text top="504" left="831" width="2" height="10" font="4"> </text>
<text top="335" left="675" width="26" height="9" font="5">8B,0W </text>
<text top="372" left="686" width="26" height="9" font="5">7B,1W </text>
<text top="383" left="698" width="26" height="9" font="5">6B,2W </text>
<text top="395" left="714" width="26" height="9" font="5">5B,3W </text>
<text top="406" left="734" width="26" height="9" font="5">4B,4W </text>
<text top="417" left="761" width="26" height="9" font="5">3B,5W </text>
<text top="427" left="796" width="26" height="9" font="5">2B,6W </text>
<text top="478" left="668" width="11" height="9" font="5">0.0</text>
<text top="465" left="668" width="11" height="9" font="5">0.1</text>
<text top="452" left="668" width="11" height="9" font="5">0.2</text>
<text top="439" left="668" width="11" height="9" font="5">0.3</text>
<text top="426" left="668" width="11" height="9" font="5">0.4</text>
<text top="413" left="668" width="11" height="9" font="5">0.5</text>
<text top="400" left="668" width="11" height="9" font="5">0.6</text>
<text top="387" left="668" width="11" height="9" font="5">0.7</text>
<text top="374" left="668" width="11" height="9" font="5">0.8</text>
<text top="360" left="668" width="11" height="9" font="5">0.9</text>
<text top="347" left="668" width="11" height="9" font="5">1.0</text>
<text top="490" left="810" width="16" height="9" font="5">0.70</text>
<text top="490" left="766" width="16" height="9" font="5">0.80</text>
<text top="490" left="723" width="16" height="9" font="5">0.90</text>
<text top="490" left="679" width="16" height="9" font="5">1.00</text>
<text top="482" left="663" width="0" height="11" font="6">No</text>
<text top="470" left="663" width="0" height="11" font="6">rmaliz</text>
<text top="443" left="663" width="0" height="11" font="6">ed</text>
<text top="432" left="663" width="0" height="11" font="6"> En</text>
<text top="419" left="663" width="0" height="11" font="6">er</text>
<text top="410" left="663" width="0" height="11" font="6">gy</text>
<text top="400" left="663" width="0" height="11" font="6"> C</text>
<text top="392" left="663" width="0" height="11" font="6">on</text>
<text top="381" left="663" width="0" height="11" font="6">sump</text>
<text top="357" left="663" width="0" height="11" font="6">tion</text>
<text top="339" left="663" width="0" height="11" font="6"> </text>
<text top="499" left="687" width="111" height="11" font="6">Normalized Performance </text>
<text top="322" left="686" width="121" height="13" font="7">Varying Cluster Designs </text>
<text top="518" left="561" width="15" height="12" font="3">(a)</text>
<text top="518" left="733" width="16" height="12" font="3">(b)</text>
<text top="536" left="475" width="359" height="12" font="3">Figure 1: (a) Empirical energy consumption and performance</text>
<text top="551" left="475" width="361" height="12" font="3">results for Vertica running TPC-H Q12 (at scale factor of 1000).</text>
<text top="567" left="475" width="361" height="12" font="3">The dotted line indicates trading an X% decrease in perfor-</text>
<text top="583" left="475" width="361" height="12" font="3">mance for an X% decrease in energy consumed so that the En-</text>
<text top="598" left="475" width="359" height="12" font="3">ergy Delay Product (EDP= energy × delay) metric is constant</text>
<text top="614" left="475" width="361" height="12" font="3">relative to the 16 node cluster. (b) Modeled performance and en-</text>
<text top="630" left="475" width="359" height="12" font="3">ergy efﬁciency of an 8 node cluster made of various traditional</text>
<text top="646" left="475" width="359" height="12" font="3">Beefy nodes and low-power Wimpy nodes when performing a</text>
<text top="661" left="475" width="361" height="12" font="3">parallel hash join on our custom parallel execution engine P-</text>
<text top="677" left="475" width="361" height="12" font="3">store. Wimpy nodes only scan and ﬁlter the data before shuf-</text>
<text top="693" left="475" width="359" height="12" font="3">ﬂing it to the Beefy nodes for further processing. A constant</text>
<text top="708" left="475" width="361" height="12" font="3">EDP relative to the all Beefy cluster is shown by the dotted line.</text>
<text top="735" left="475" width="22" height="16" font="1">1.1</text>
<text top="735" left="516" width="186" height="16" font="1">Illustrative Experiments</text>
<text top="757" left="489" width="345" height="12" font="3">First, we present two results that show how varying the cluster size</text>
<text top="773" left="475" width="359" height="12" font="3">and changing the cluster design can allow us to trade performance</text>
<text top="789" left="475" width="329" height="12" font="3">for reduced energy consumption for a single query workload.</text>
<text top="804" left="489" width="346" height="12" font="3">In this paper, we studied the effect of this undesirable scalability</text>
<text top="820" left="475" width="359" height="12" font="3">phenomenon on the energy efﬁciency of parallel data processing</text>
<text top="836" left="475" width="359" height="12" font="3">clusters using a number of parallel DBMSs, including Vertica and</text>
<text top="851" left="475" width="359" height="12" font="3">HadoopDB. Our ﬁrst result is shown in Figure 1(a) for TPC-H</text>
<text top="867" left="475" width="359" height="12" font="3">Q12 (at scale factor 1000) for Vertica. In this ﬁgure, we show</text>
<text top="883" left="475" width="359" height="12" font="3">the relative change, compared to a 16 node cluster, in the energy</text>
<text top="898" left="475" width="272" height="12" font="3">consumed by the cluster and the query performance</text>
<text top="896" left="747" width="4" height="8" font="5">1</text>
<text top="898" left="756" width="78" height="12" font="3">as we decrease</text>
<text top="914" left="475" width="359" height="12" font="3">the cluster size two nodes at a time (please see Section 3.1 for more</text>
<text top="930" left="475" width="359" height="12" font="3">details). Next, we discuss three key insights that can be drawn from</text>
<text top="946" left="475" width="288" height="12" font="3">Figure 1(a), which also shape the theme of this paper.</text>
<text top="961" left="489" width="345" height="12" font="3">First, this result shows the classic sub-linear parallel speedup</text>
<text top="977" left="475" width="359" height="12" font="3">phenomenon; namely, given a ﬁxed problem size, increasing the</text>
<text top="993" left="475" width="358" height="12" font="3">computing resources by a factor of X provides less than an X</text>
<text top="1008" left="475" width="359" height="12" font="3">times increase in performance [12]. Or, conversely, decreasing the</text>
<text top="1024" left="475" width="359" height="12" font="3">resources to 1/X, results in a relative performance greater than</text>
<text top="1039" left="475" width="359" height="12" font="3">1/X. We can observe this phenomenon in Figure 1(a) because</text>
<text top="1064" left="477" width="4" height="8" font="5">1</text>
<text top="1068" left="482" width="285" height="11" font="8">Here performance is the inverse of the query response time.</text>
</page>
<page number="2" position="absolute" top="0" left="0" height="1188" width="918">
<text top="87" left="81" width="360" height="12" font="3">reducing the cluster size from 16 nodes (16N) to eight nodes (8N),</text>
<text top="102" left="81" width="359" height="12" font="3">results in a performance ratio greater than 50%. Note that since</text>
<text top="118" left="81" width="359" height="12" font="3">performance is the inverse of the response time, a performance ratio</text>
<text top="134" left="81" width="359" height="12" font="3">greater than 50% at 8N means that the response time at 16N is more</text>
<text top="149" left="81" width="318" height="12" font="3">than half the response time at 8N (i.e., sub-linear speedup).</text>
<text top="165" left="94" width="345" height="12" font="3">Second, as shown by the solid curve in Figure 1(a), the total</text>
<text top="181" left="81" width="359" height="12" font="3">energy required to execute the query decreases as we reduce the</text>
<text top="196" left="81" width="361" height="12" font="3">cluster size from 16N, even though it takes longer to run the query.</text>
<text top="212" left="81" width="359" height="12" font="3">Recall that energy is a product of the average power drawn by the</text>
<text top="228" left="81" width="359" height="12" font="3">cluster and the response time of the query. Due to the sub-linear</text>
<text top="243" left="81" width="359" height="12" font="3">speedup, going from 16N to 8N reduces the performance by only</text>
<text top="259" left="81" width="359" height="12" font="3">36%, but the average power drops by roughly half (since we have</text>
<text top="275" left="81" width="359" height="12" font="3">half the number of nodes). Consequently, the energy consumption</text>
<text top="291" left="81" width="359" height="12" font="3">ratio (relative to the 16N case) for fewer than 16 nodes is less than</text>
<text top="306" left="80" width="17" height="12" font="3">1.0</text>
<text top="306" left="96" width="343" height="12" font="3">. This is an encouraging energy efﬁciency gain, albeit at the cost</text>
<text top="322" left="81" width="180" height="12" font="3">of increased query response time.</text>
<text top="338" left="94" width="345" height="12" font="3">Lastly, in Figure 1(a), the dotted line shows the line where the</text>
<text top="353" left="80" width="122" height="12" font="3">Energy Delay Product</text>
<text top="353" left="206" width="236" height="12" font="3">(EDP) is constant, relative to the 16N case.</text>
<text top="369" left="81" width="360" height="12" font="3">EDP is deﬁned as energy × delay (measured in Joules seconds),</text>
<text top="385" left="81" width="359" height="12" font="3">and is commonly used in the architecture community as a way</text>
<text top="400" left="81" width="318" height="12" font="3">of studying designs that trade-off energy for performance</text>
<text top="398" left="398" width="4" height="8" font="5">2</text>
<text top="400" left="404" width="36" height="12" font="3">. Here</text>
<text top="416" left="79" width="360" height="12" font="3">“energy” refers to the query energy consumption and “delay” refers</text>
<text top="432" left="81" width="359" height="12" font="3">to the query response time. A constant EDP means that we have</text>
<text top="447" left="81" width="361" height="12" font="3">traded x% of performance for an x% drop in energy consumption.</text>
<text top="463" left="81" width="359" height="12" font="3">Preferably, it would be nice to identify design points that lie below</text>
<text top="479" left="81" width="359" height="12" font="3">the EDP curve, as such points represent trading proportionally less</text>
<text top="494" left="81" width="214" height="12" font="3">performance for greater energy savings.</text>
<text top="510" left="94" width="346" height="12" font="3">In Figure 1(a), all the actual data/design points (on the solid line)</text>
<text top="526" left="81" width="359" height="12" font="3">are above the EDP curve. In other words, as we reduce the cluster</text>
<text top="542" left="81" width="359" height="12" font="3">size from 16 nodes to 8 nodes, we are giving up proportionately more</text>
<text top="557" left="81" width="360" height="12" font="3">performance than we are gaining in energy efﬁciency. For example,</text>
<text top="573" left="81" width="359" height="12" font="3">the 10 node conﬁguration (10N) pays a 24% penalty in performance</text>
<text top="589" left="81" width="359" height="12" font="3">for a 16% decrease in energy consumption over the 16N case. Such</text>
<text top="604" left="81" width="359" height="12" font="3">trade-offs may or may not be reasonable depending on the tolerance</text>
<text top="620" left="81" width="359" height="12" font="3">for performance penalties, but the EDP curve makes it clear in which</text>
<text top="636" left="81" width="359" height="12" font="3">directions the trade-offs are skewed. This observation motivates</text>
<text top="651" left="81" width="271" height="12" font="3">the key question that is addressed in this paper:</text>
<text top="652" left="366" width="73" height="12" font="3">What are the</text>
<text top="667" left="81" width="359" height="12" font="3">key factors to consider when we design an energy-efﬁcient DBMS</text>
<text top="683" left="81" width="359" height="12" font="3">cluster so that we can favorably trade less performance for more</text>
<text top="699" left="81" width="253" height="12" font="3">energy savings (i.e., lie below the EDP curve)?</text>
<text top="714" left="94" width="345" height="12" font="3">To understand the reasons why our observed data points lie above</text>
<text top="730" left="81" width="359" height="12" font="3">the EDP curve in Figure 1(a), and to carefully study the conditions</text>
<text top="746" left="81" width="359" height="12" font="3">that can produce design points that lie below the EDP curve, we built</text>
<text top="761" left="81" width="361" height="12" font="3">and modeled a custom parallel data execution kernel called P-store.</text>
<text top="777" left="80" width="359" height="12" font="3">The data that we collected from real parallel DBMSs was used to</text>
<text top="793" left="80" width="359" height="12" font="3">validate the performance and energy model of P-store (see Section 4</text>
<text top="808" left="81" width="359" height="12" font="3">for details). Then, using P-store, we systematically explored both</text>
<text top="824" left="81" width="359" height="12" font="3">the query parameters and the cluster design space parameters to</text>
<text top="840" left="81" width="359" height="12" font="3">examine their impact on performance and energy efﬁciency. We</text>
<text top="855" left="81" width="359" height="12" font="3">also developed an analytical model that allows us to further explore</text>
<text top="871" left="81" width="92" height="12" font="3">the design space.</text>
<text top="887" left="94" width="345" height="12" font="3">One of the interesting insights we found using both P-store and</text>
<text top="902" left="81" width="359" height="12" font="3">our analytical model is that there are query scenarios where certain</text>
<text top="918" left="81" width="359" height="12" font="3">design points lie below the EDP curve. One such result is shown</text>
<text top="934" left="81" width="359" height="12" font="3">in Figure 1(b). Here, we use our analytical model to show the</text>
<text top="950" left="81" width="359" height="12" font="3">energy versus performance trade-off for various eight node cluster</text>
<text top="965" left="81" width="283" height="12" font="3">designs, when performing a join between the TPC-H</text>
<text top="967" left="367" width="49" height="9" font="6">LINEITEM</text>
<text top="965" left="420" width="19" height="12" font="3">and</text>
<text top="981" left="81" width="17" height="12" font="3">the</text>
<text top="983" left="101" width="41" height="9" font="6">ORDERS</text>
<text top="981" left="145" width="294" height="12" font="3">tables (see Section 5 for details). In this ﬁgure, similar</text>
<text top="997" left="81" width="359" height="12" font="3">to Figure 1(a), we plot the relative energy consumed by the system</text>
<text top="1024" left="82" width="4" height="8" font="5">2</text>
<text top="1028" left="87" width="352" height="11" font="8">With the growing viewpoint of considering an entire cluster as a single</text>
<text top="1041" left="81" width="359" height="11" font="8">computer [10], EDP is also a useful way of thinking about the interactions</text>
<text top="1054" left="81" width="361" height="11" font="8">between energy consumption and performance when designing data cen-</text>
<text top="1068" left="81" width="60" height="11" font="8">ters [22, 38].</text>
<text top="87" left="475" width="359" height="12" font="3">and the response time against a reference point of an eight node</text>
<text top="102" left="475" width="359" height="12" font="3">Xeon-based (“Beefy”) cluster. We then gradually replaced these</text>
<text top="118" left="475" width="289" height="12" font="3">nodes with mobile Intel i7 based laptops (“Wimpy”)</text>
<text top="115" left="764" width="4" height="8" font="5">3</text>
<text top="118" left="773" width="61" height="12" font="3">nodes. The</text>
<text top="134" left="475" width="359" height="12" font="3">Wimpy nodes do not have enough memory to build in-memory hash</text>
<text top="149" left="475" width="359" height="12" font="3">tables for the join, and so they only scan and ﬁlter the table data</text>
<text top="165" left="475" width="359" height="12" font="3">before shufﬂing them off to the Beefy nodes (where the actual join</text>
<text top="181" left="475" width="359" height="12" font="3">is performed). As opposed to Figure 1(a), which is an experiment</text>
<text top="196" left="475" width="359" height="12" font="3">done with homogeneous Beefy nodes, Figure 1(b) shows data points</text>
<text top="212" left="475" width="359" height="12" font="3">below the EDP curve. This result is interesting as it shows that it is</text>
<text top="228" left="475" width="359" height="12" font="3">possible to achieve a relatively greater energy savings than response</text>
<text top="243" left="475" width="359" height="12" font="3">time penalty (to lower the EDP) when considering alternative cluster</text>
<text top="259" left="475" width="44" height="12" font="3">designs.</text>
<text top="275" left="489" width="345" height="12" font="3">Energy-efﬁcient cluster design with potentially heterogeneous</text>
<text top="291" left="475" width="361" height="12" font="3">cluster nodes needs to be considered since non-traditional hetero-</text>
<text top="306" left="475" width="359" height="12" font="3">geneous clusters are now showing up as database appliances, such</text>
<text top="322" left="475" width="361" height="12" font="3">as Oracle’s Exadata Database Machine [1]. Thus, to a certain ex-</text>
<text top="338" left="475" width="359" height="12" font="3">tent, commercial systems designers have already started down the</text>
<text top="353" left="475" width="361" height="12" font="3">road to heterogeneous clusters and appliances. Such considera-</text>
<text top="369" left="475" width="359" height="12" font="3">tions may also become important if future hardware (e.g., processor</text>
<text top="385" left="475" width="359" height="12" font="3">and/or memory subsystems) allows systems to dynamically control</text>
<text top="400" left="475" width="359" height="12" font="3">their power/performance trade-offs. Our paper provides a systematic</text>
<text top="416" left="475" width="359" height="12" font="3">study of both the software and the hardware design space parameters</text>
<text top="432" left="475" width="359" height="12" font="3">in an effort to draw conclusions about important design decisions</text>
<text top="447" left="475" width="270" height="12" font="3">when designing energy-efﬁcient database clusters.</text>
<text top="473" left="475" width="22" height="16" font="1">1.2</text>
<text top="473" left="516" width="107" height="16" font="1">Contributions</text>
<text top="496" left="489" width="347" height="12" font="3">The key contributions of this paper are: ﬁrst,we empirically ex-</text>
<text top="512" left="475" width="359" height="12" font="3">amine the interactions between the scalability of parallel DBMSs</text>
<text top="527" left="475" width="360" height="12" font="3">and energy efﬁciency. Using three DBMSs: Vertica, HadoopDB,</text>
<text top="543" left="475" width="359" height="12" font="3">and a custom-built parallel data processing kernel, we explore the</text>
<text top="559" left="475" width="359" height="12" font="3">trade-offs in performance versus energy efﬁciency when performing</text>
<text top="574" left="475" width="359" height="12" font="3">speedup experiments on TPC-H queries (e.g., Figure 1(a)). From</text>
<text top="590" left="475" width="359" height="12" font="3">these results, we identify distinct bottlenecks for performance and</text>
<text top="606" left="475" width="359" height="12" font="3">energy efﬁciency that should be avoided for energy-efﬁcient cluster</text>
<text top="621" left="475" width="38" height="12" font="3">design.</text>
<text top="637" left="489" width="345" height="12" font="3">Second, non-traditional/wimpy low-power server hardware has</text>
<text top="653" left="475" width="359" height="12" font="3">been evaluated for its performance/energy-efﬁciency trade-offs, and</text>
<text top="668" left="475" width="360" height="12" font="3">we leverage these insights along with our own energy-efﬁciency</text>
<text top="684" left="475" width="359" height="12" font="3">micro-benchmarks to explore the design space for parallel DBMS</text>
<text top="700" left="475" width="359" height="12" font="3">clusters. Using P-store, we provide a model that takes into account</text>
<text top="716" left="475" width="359" height="12" font="3">these different server conﬁgurations and the parallel data processing</text>
<text top="731" left="475" width="359" height="12" font="3">bottlenecks, and predicts data processing performance and energy</text>
<text top="747" left="475" width="339" height="12" font="3">efﬁciency for various node conﬁgurations of a database cluster.</text>
<text top="763" left="489" width="345" height="12" font="3">Third, using our model we study the design space for parallel</text>
<text top="778" left="475" width="359" height="12" font="3">DBMS clusters, and illustrate interesting cluster design points, under</text>
<text top="794" left="475" width="360" height="12" font="3">varying query parameters for a typical hash join (e.g., Figure 1(b)).</text>
<text top="810" left="489" width="347" height="12" font="3">Finally, we organize the insights from this study as (initial) guid-</text>
<text top="825" left="475" width="348" height="12" font="3">ing principles for energy-efﬁcient data processing cluster design.</text>
<text top="841" left="489" width="345" height="12" font="3">The remainder of this paper is organized as follows: Section 2</text>
<text top="857" left="475" width="361" height="12" font="3">contains background discussion and related work; Section 3 dis-</text>
<text top="872" left="475" width="359" height="12" font="3">cusses our ﬁndings with Vertica and HadoopDB. In Section 4 we</text>
<text top="888" left="475" width="359" height="12" font="3">present P-store. In Section 5, we model P-store and use the model to</text>
<text top="904" left="475" width="359" height="12" font="3">explore interesting cluster design points. Section 6 summarizes our</text>
<text top="919" left="475" width="359" height="12" font="3">ﬁndings as guiding principles for energy-efﬁcient data processing</text>
<text top="935" left="475" width="334" height="12" font="3">cluster design. We make our concluding remarks in Section 7.</text>
<text top="970" left="475" width="13" height="16" font="1">2.</text>
<text top="970" left="507" width="325" height="16" font="1">BACKGROUND AND RELATED WORK</text>
<text top="993" left="489" width="345" height="12" font="3">With recent improvements in power delivery, cooling and heat</text>
<text top="1009" left="475" width="359" height="12" font="3">extraction, signiﬁcant improvements have been made in improving</text>
<text top="1025" left="475" width="360" height="12" font="3">the energy efﬁciency of large data centers [13]. At the server level,</text>
<text top="1040" left="475" width="359" height="12" font="3">there are two ways to improve efﬁciency. One is to consolidate work</text>
<text top="1064" left="477" width="4" height="8" font="5">3</text>
<text top="1068" left="482" width="345" height="11" font="8">We use the term “wimpy” as in [37], i.e. “slower but [energy] efﬁcient”.</text>
</page>
<page number="3" position="absolute" top="0" left="0" height="1188" width="918">
<text top="83" left="100" width="34" height="11" font="8">DBMS</text>
<text top="83" left="161" width="34" height="11" font="8">Vertica</text>
<text top="83" left="294" width="27" height="11" font="8">RAM</text>
<text top="83" left="348" width="29" height="11" font="8">48GB</text>
<text top="96" left="98" width="37" height="11" font="8"># nodes</text>
<text top="96" left="161" width="12" height="11" font="8">16</text>
<text top="96" left="294" width="27" height="11" font="8">Disks</text>
<text top="96" left="348" width="46" height="11" font="8">8x300GB</text>
<text top="110" left="89" width="56" height="11" font="8">TPC-H size</text>
<text top="110" left="161" width="83" height="11" font="8">1TB (scale 1000)</text>
<text top="110" left="287" width="42" height="11" font="8">Network</text>
<text top="110" left="348" width="29" height="11" font="8">1Gb/s</text>
<text top="124" left="105" width="23" height="11" font="8">CPU</text>
<text top="124" left="161" width="104" height="11" font="8">Intel X5550 2 sockets</text>
<text top="124" left="284" width="48" height="11" font="8">SysPower</text>
<text top="123" left="348" width="44" height="11" font="8">130.03C</text>
<text top="121" left="393" width="31" height="8" font="5">0.2369</text>
<text top="138" left="348" width="83" height="9" font="6">C = CPU utilization</text>
<text top="156" left="165" width="191" height="12" font="3">Table 1: Cluster-V Conﬁguration</text>
<text top="183" left="81" width="360" height="12" font="3">onto few servers and turn off unused servers [23, 24, 27]. However,</text>
<text top="199" left="81" width="359" height="12" font="3">switching servers on and off has direct costs such as increased</text>
<text top="215" left="81" width="359" height="12" font="3">query latency and decreased hardware reliability. Another approach</text>
<text top="230" left="81" width="359" height="12" font="3">is to consolidate the server use for a given task, and improve the</text>
<text top="246" left="81" width="359" height="12" font="3">scheduling and the physical design to use the remaining servers</text>
<text top="262" left="81" width="359" height="12" font="3">for other tasks. In this paper, we tackle the latter issue to explore</text>
<text top="277" left="81" width="166" height="12" font="3">energy-efﬁcient cluster design.</text>
<text top="293" left="94" width="347" height="12" font="3">There has been a growing number of efforts to improve the en-</text>
<text top="309" left="81" width="359" height="12" font="3">ergy efﬁciency of clusters [7–10, 20, 23–25, 27, 32, 34, 36]. We</text>
<text top="324" left="81" width="359" height="12" font="3">have seen holistic redesigns that treat a data center as a single</text>
<text top="340" left="81" width="361" height="12" font="3">computer [9, 10, 32], and approaches that consider workload consol-</text>
<text top="356" left="81" width="359" height="12" font="3">idation techniques in order to meet the power constraints and reduce</text>
<text top="371" left="81" width="361" height="12" font="3">the energy requirements of clusters [7, 23, 24, 27, 34]. In data ana-</text>
<text top="387" left="81" width="359" height="12" font="3">lytics environments, delaying execution of workloads (increasing</text>
<text top="403" left="81" width="361" height="12" font="3">response time) due to energy concerns have been proposed [20, 23].</text>
<text top="419" left="94" width="345" height="12" font="3">A number of studies have also considered the use of low-power</text>
<text top="434" left="80" width="361" height="12" font="3">(“wimpy”) nodes consisting of low-power storage (SSDs) and pro-</text>
<text top="450" left="81" width="361" height="12" font="3">cessors (mobile CPUs) [8, 17, 25, 26, 33, 36]. Primarily, these de-</text>
<text top="466" left="81" width="359" height="12" font="3">signs target computationally “simple” data processing tasks that are</text>
<text top="481" left="81" width="361" height="12" font="3">partitionable, such as key-value workloads [37]. For such work-</text>
<text top="497" left="81" width="359" height="12" font="3">loads, wimpy node clusters are more energy efﬁcient compared to</text>
<text top="513" left="81" width="361" height="12" font="3">traditional clusters built using more power-hungry “beefy” nodes.</text>
<text top="528" left="81" width="359" height="12" font="3">But, for analytical database workloads that often exhibit non-linear</text>
<text top="544" left="81" width="359" height="12" font="3">speedup, and especially when the network is a bottleneck, it was</text>
<text top="560" left="81" width="361" height="12" font="3">shown that such wimpy node clusters often increase the total operat-</text>
<text top="575" left="81" width="360" height="12" font="3">ing costs [25]. Alternatively, servers can be augmented with custom,</text>
<text top="591" left="81" width="361" height="12" font="3">low-power circuitry, like Field-Programmable Gate Arrays [2, 29].</text>
<text top="607" left="81" width="359" height="12" font="3">Such approaches are complementary to our study of heterogeneous</text>
<text top="623" left="81" width="336" height="12" font="3">cluster design, and are an interesting direction for future work.</text>
<text top="638" left="94" width="347" height="12" font="3">Early database research studies speculated that the database soft-</text>
<text top="654" left="80" width="361" height="12" font="3">ware has an important role to play in improving the energy efﬁciency,</text>
<text top="670" left="81" width="359" height="12" font="3">and argued for the redesign of several key components such as the</text>
<text top="685" left="81" width="361" height="12" font="3">query optimizer, the workload manager, the scheduler and the physi-</text>
<text top="701" left="81" width="359" height="12" font="3">cal database design [14, 18, 22]. Many of these suggestions assumed</text>
<text top="717" left="81" width="359" height="12" font="3">that, like cars, computer systems have different optimal performance</text>
<text top="732" left="81" width="361" height="12" font="3">and energy efﬁciency points. However, only preliminary experimen-</text>
<text top="748" left="81" width="245" height="12" font="3">tal data was provided to support these claims.</text>
<text top="764" left="94" width="345" height="12" font="3">Subsequent efforts have studied how alternate database designs</text>
<text top="779" left="81" width="360" height="12" font="3">and conﬁgurations can improve the energy efﬁciency of a DBMS [21,</text>
<text top="795" left="81" width="359" height="12" font="3">35, 38]. Meza et al. [28], have studied the energy efﬁciency of</text>
<text top="811" left="81" width="359" height="12" font="3">a scale-up enterprise decision support system, and showed that</text>
<text top="827" left="81" width="359" height="12" font="3">the most energy-efﬁcient conﬁguration was not always the fastest</text>
<text top="842" left="81" width="359" height="12" font="3">depending on the degree of declustering across disks. Lang et</text>
<text top="858" left="81" width="359" height="12" font="3">al. [24], showed how data replication can be leveraged to reduce</text>
<text top="874" left="81" width="359" height="12" font="3">the number of online cluster nodes in a parallel DBMS. That work</text>
<text top="889" left="81" width="359" height="12" font="3">is complimentary to ours as we could leverage similar replication</text>
<text top="905" left="81" width="360" height="12" font="3">techniques to dynamically augment cluster size. Chen et al. [11],</text>
<text top="921" left="81" width="359" height="12" font="3">considered heterogeneous usage of MapReduce servers through a</text>
<text top="936" left="81" width="359" height="12" font="3">software workload manager. In contrast, we consider heterogeneity</text>
<text top="952" left="81" width="355" height="12" font="3">in the cluster servers as well as the execution paths across servers.</text>
<text top="997" left="81" width="13" height="16" font="1">3.</text>
<text top="997" left="112" width="293" height="16" font="1">PARALLEL DATABASE BEHAVIOR</text>
<text top="1020" left="94" width="345" height="12" font="3">In this section we examine the performance behavior and speedup</text>
<text top="1035" left="81" width="359" height="12" font="3">in shared-nothing DBMS clusters, and examine its effect on energy</text>
<text top="1051" left="81" width="359" height="12" font="3">efﬁciency. We see that bottlenecks that degrade performance, like</text>
<text top="1067" left="81" width="359" height="12" font="3">network bottlenecks, decrease the energy efﬁciency of a cluster</text>
<text top="266" left="650" width="2" height="10" font="4"> </text>
<text top="126" left="614" width="12" height="9" font="5">8N </text>
<text top="128" left="586" width="17" height="9" font="5">10N </text>
<text top="128" left="558" width="17" height="9" font="5">12N </text>
<text top="130" left="529" width="17" height="9" font="5">14N </text>
<text top="130" left="503" width="17" height="9" font="5">16N </text>
<text top="240" left="491" width="11" height="9" font="5">0.0</text>
<text top="220" left="491" width="11" height="9" font="5">0.2</text>
<text top="201" left="491" width="11" height="9" font="5">0.4</text>
<text top="181" left="491" width="11" height="9" font="5">0.6</text>
<text top="162" left="491" width="11" height="9" font="5">0.8</text>
<text top="142" left="491" width="11" height="9" font="5">1.0</text>
<text top="123" left="491" width="11" height="9" font="5">1.2</text>
<text top="103" left="491" width="11" height="9" font="5">1.4</text>
<text top="251" left="629" width="16" height="9" font="5">0.40</text>
<text top="251" left="587" width="16" height="9" font="5">0.60</text>
<text top="251" left="545" width="16" height="9" font="5">0.80</text>
<text top="251" left="503" width="16" height="9" font="5">1.00</text>
<text top="241" left="483" width="0" height="11" font="6">No</text>
<text top="228" left="483" width="0" height="11" font="6">rmaliz</text>
<text top="202" left="483" width="0" height="11" font="6">ed</text>
<text top="191" left="483" width="0" height="11" font="6"> En</text>
<text top="178" left="483" width="0" height="11" font="6">er</text>
<text top="169" left="483" width="0" height="11" font="6">gy</text>
<text top="159" left="483" width="0" height="11" font="6"> C</text>
<text top="151" left="483" width="0" height="11" font="6">on</text>
<text top="139" left="483" width="0" height="11" font="6">sump</text>
<text top="115" left="483" width="0" height="11" font="6">tion</text>
<text top="98" left="483" width="0" height="11" font="6"> </text>
<text top="261" left="512" width="111" height="11" font="6">Normalized Performance </text>
<text top="85" left="511" width="96" height="13" font="7">Vertica - TPC-H Q1 </text>
<text top="266" left="830" width="2" height="10" font="4"> </text>
<text top="127" left="794" width="12" height="9" font="5">8N </text>
<text top="128" left="766" width="17" height="9" font="5">10N </text>
<text top="133" left="732" width="17" height="9" font="5">12N </text>
<text top="135" left="703" width="17" height="9" font="5">14N </text>
<text top="130" left="683" width="17" height="9" font="5">16N </text>
<text top="240" left="671" width="11" height="9" font="5">0.0</text>
<text top="220" left="671" width="11" height="9" font="5">0.2</text>
<text top="201" left="671" width="11" height="9" font="5">0.4</text>
<text top="181" left="671" width="11" height="9" font="5">0.6</text>
<text top="162" left="671" width="11" height="9" font="5">0.8</text>
<text top="142" left="671" width="11" height="9" font="5">1.0</text>
<text top="123" left="671" width="11" height="9" font="5">1.2</text>
<text top="103" left="671" width="11" height="9" font="5">1.4</text>
<text top="251" left="809" width="16" height="9" font="5">0.40</text>
<text top="251" left="767" width="16" height="9" font="5">0.60</text>
<text top="251" left="725" width="16" height="9" font="5">0.80</text>
<text top="251" left="683" width="16" height="9" font="5">1.00</text>
<text top="240" left="663" width="0" height="11" font="6">No</text>
<text top="227" left="663" width="0" height="11" font="6">rmaliz</text>
<text top="201" left="663" width="0" height="11" font="6">ed</text>
<text top="190" left="663" width="0" height="11" font="6"> En</text>
<text top="177" left="663" width="0" height="11" font="6">er</text>
<text top="168" left="663" width="0" height="11" font="6">gy</text>
<text top="158" left="663" width="0" height="11" font="6"> C</text>
<text top="150" left="663" width="0" height="11" font="6">on</text>
<text top="138" left="663" width="0" height="11" font="6">sump</text>
<text top="114" left="663" width="0" height="11" font="6">tion</text>
<text top="97" left="663" width="0" height="11" font="6"> </text>
<text top="261" left="692" width="111" height="11" font="6">Normalized Performance </text>
<text top="85" left="691" width="102" height="13" font="7">Vertica - TPC-H Q21 </text>
<text top="280" left="561" width="15" height="12" font="3">(a)</text>
<text top="280" left="733" width="16" height="12" font="3">(b)</text>
<text top="298" left="475" width="361" height="12" font="3">Figure 2: Vertica TPC-H (a) Q1, (b) Q21 (scale 1000) empiri-</text>
<text top="314" left="475" width="359" height="12" font="3">cal parallel speedup results and its effect on energy efﬁciency</text>
<text top="329" left="475" width="361" height="12" font="3">under various cluster sizes. Cluster details can be found in Ta-</text>
<text top="345" left="475" width="359" height="12" font="3">ble 1. The dotted line indicates trading a proportional decrease</text>
<text top="361" left="475" width="359" height="12" font="3">in performance for a decrease in energy consumed such that</text>
<text top="377" left="475" width="275" height="12" font="3">the EDP (= energy × delay) metric is constant.</text>
<text top="406" left="475" width="361" height="12" font="3">design. We experiment with two off-the-shelf, column-oriented, par-</text>
<text top="422" left="475" width="361" height="12" font="3">allel DBMSs, Vertica [3] and HadoopDB [6] (with Vectorwise [4]).</text>
<text top="437" left="475" width="359" height="12" font="3">Vertica was deployed on cluster-V (see Table 1), and we used queries</text>
<text top="453" left="475" width="263" height="12" font="3">from the TPC-H benchmark at scale factor 1000.</text>
<text top="479" left="475" width="22" height="16" font="1">3.1</text>
<text top="479" left="516" width="55" height="16" font="1">Vertica</text>
<text top="502" left="489" width="345" height="12" font="3">We used Vertica v.4.0.12-0 64 bit RHEL5 running on 16 HP</text>
<text top="518" left="475" width="359" height="12" font="3">ProLiant DL360G6 servers (the cluster conﬁguration is described</text>
<text top="533" left="475" width="359" height="12" font="3">in Table 1), varying the cluster size between 8 and 16 nodes, in 2</text>
<text top="549" left="475" width="361" height="12" font="3">node increments. We only present results with a warm buffer pool.</text>
<text top="565" left="475" width="359" height="12" font="3">Given the use of column-store in Vertica, the working sets for all</text>
<text top="580" left="475" width="306" height="12" font="3">the queries ﬁt in main memory (even in the 8 node case).</text>
<text top="596" left="489" width="345" height="12" font="3">We did not have physical access to our clusters so we used real</text>
<text top="612" left="475" width="359" height="12" font="3">power readings from the iLO2 remote management interface [5] to</text>
<text top="627" left="475" width="359" height="12" font="3">develop server power models based on CPU utilization, following</text>
<text top="643" left="475" width="359" height="12" font="3">an approach that has been used before [34]. Using a single cluster-V</text>
<text top="659" left="475" width="360" height="12" font="3">node, we used a custom parallel hash-join program (see Section 4)</text>
<text top="675" left="475" width="359" height="12" font="3">to generate CPU load, and iLO2 measured the reported power drawn</text>
<text top="690" left="475" width="359" height="12" font="3">by the node usage. We varied the number of concurrent joins to</text>
<text top="706" left="475" width="359" height="12" font="3">control the utilization on the nodes. iLO2 reports measurements</text>
<text top="722" left="475" width="359" height="12" font="3">averaged over a 5 minute window, and we ran the experiments for</text>
<text top="737" left="475" width="359" height="12" font="3">three 5 minute windows for each CPU utilization measurement. The</text>
<text top="753" left="475" width="359" height="12" font="3">power readings at each CPU utilization level were stable, and we use</text>
<text top="769" left="475" width="361" height="12" font="3">the average of the three readings to create our server power models.</text>
<text top="784" left="475" width="361" height="12" font="3">(Our measurements of physically accessible servers, not using iLO2,</text>
<text top="800" left="475" width="359" height="12" font="3">in Section 5 produced similar models.) In the interest of space, we</text>
<text top="816" left="475" width="359" height="12" font="3">omit the measured results but show the derived power models in</text>
<text top="831" left="475" width="361" height="12" font="3">Table 1 as “SysPower”. (In this paper, we explored exponential,</text>
<text top="847" left="475" width="359" height="12" font="3">power, and logarithmic regression models, and picked the one with</text>
<text top="863" left="475" width="55" height="12" font="3">the best R</text>
<text top="860" left="531" width="5" height="8" font="5">2</text>
<text top="863" left="540" width="37" height="12" font="3">value.)</text>
<text top="879" left="489" width="345" height="12" font="3">We employed Vertica’s hash segmentation capability which hash</text>
<text top="894" left="475" width="361" height="12" font="3">partitions a table across the cluster nodes on a user-deﬁned attribute.</text>
<text top="910" left="475" width="101" height="12" font="3">We partitioned the</text>
<text top="912" left="580" width="49" height="9" font="6">LINEITEM</text>
<text top="910" left="629" width="3" height="12" font="3">,</text>
<text top="912" left="636" width="41" height="9" font="6">ORDERS</text>
<text top="910" left="677" width="27" height="12" font="3">, and</text>
<text top="912" left="708" width="57" height="9" font="6">CUSTOMER</text>
<text top="910" left="768" width="65" height="12" font="3">tables using</text>
<text top="926" left="475" width="359" height="12" font="3">the hash segmentation, while all the remaining TPC-H tables were</text>
<text top="941" left="475" width="168" height="12" font="3">replicated on each node. The</text>
<text top="943" left="648" width="41" height="9" font="6">ORDERS</text>
<text top="941" left="694" width="41" height="12" font="3">and the</text>
<text top="943" left="740" width="57" height="9" font="6">CUSTOMER</text>
<text top="941" left="802" width="32" height="12" font="3">tables</text>
<text top="957" left="475" width="109" height="12" font="3">were hashed on the</text>
<text top="959" left="589" width="60" height="9" font="6">O CUSTKEY</text>
<text top="957" left="653" width="20" height="12" font="3">and</text>
<text top="959" left="677" width="59" height="9" font="6">C CUSTKEY</text>
<text top="957" left="741" width="95" height="12" font="3">attributes respec-</text>
<text top="973" left="475" width="359" height="12" font="3">tively, so that a join between these two tables does not require any</text>
<text top="988" left="475" width="306" height="12" font="3">shufﬂing/partitioning of the input tables on-the-ﬂy. The</text>
<text top="990" left="784" width="49" height="9" font="6">LINEITEM</text>
<text top="1004" left="475" width="128" height="12" font="3">table was hashed on the</text>
<text top="1006" left="606" width="67" height="9" font="6">L ORDERKEY</text>
<text top="1004" left="677" width="48" height="12" font="3">attribute.</text>
<text top="1020" left="489" width="345" height="12" font="3">We ran a number of TPC-H queries and present a selection of our</text>
<text top="1035" left="475" width="359" height="12" font="3">results in this section. In Figure 2(a) we show the energy consumed</text>
<text top="1051" left="475" width="359" height="12" font="3">and performance (i.e., the inverse of the query response time) for</text>
<text top="1067" left="475" width="359" height="12" font="3">various cluster sizes running the TPC-H Query 1. This query does</text>
</page>
<page number="4" position="absolute" top="0" left="0" height="1188" width="918">
<text top="87" left="81" width="359" height="12" font="3">not involve any joins and only does simple aggregations on the</text>
<text top="104" left="81" width="49" height="9" font="6">LINEITEM</text>
<text top="102" left="134" width="305" height="12" font="3">table. The data points are shown relative to the largest</text>
<text top="118" left="81" width="359" height="12" font="3">cluster size of 16 nodes, and the “break-even” EDP line is also</text>
<text top="134" left="81" width="360" height="12" font="3">plotted, as was also done earlier in Figure 1(a). Recall from Section 1</text>
<text top="149" left="81" width="359" height="12" font="3">that this dotted line represents data points that trade energy savings</text>
<text top="165" left="81" width="337" height="12" font="3">for a performance penalty such that the EDP remains constant.</text>
<text top="181" left="94" width="347" height="12" font="3">In Figure 2(a), we observe that Vertica’s performance scales lin-</text>
<text top="196" left="81" width="359" height="12" font="3">early, as the 8 node cluster has a performance ratio of about 0.5</text>
<text top="212" left="81" width="361" height="12" font="3">compared to the 16 node case. Consequently, the energy consump-</text>
<text top="228" left="81" width="359" height="12" font="3">tion ratio is fairly constant since the 50% performance degradation</text>
<text top="243" left="81" width="359" height="12" font="3">is offset by a 50% drop in average cluster power. This result is</text>
<text top="259" left="81" width="359" height="12" font="3">important because it shows that a partitionable analytics workload</text>
<text top="275" left="80" width="359" height="12" font="3">(like TPC-H Query 1), exhibits ideal speedup as we allocate more</text>
<text top="291" left="81" width="359" height="12" font="3">nodes to the cluster. Thus the energy consumption will remain</text>
<text top="306" left="81" width="359" height="12" font="3">roughly constant as we change the cluster size. In other words, one</text>
<text top="322" left="81" width="359" height="12" font="3">interesting energy-efﬁcient design point is to simply provision as</text>
<text top="338" left="81" width="359" height="12" font="3">many nodes as possible for this type of query (as there is no change</text>
<text top="353" left="81" width="321" height="12" font="3">in energy consumption, but there is a performance penalty).</text>
<text top="369" left="94" width="345" height="12" font="3">Let us consider a more complex query. Figure 2(b) shows the</text>
<text top="385" left="81" width="359" height="12" font="3">results for TPC-H Query 21, which is a query that involves a join</text>
<text top="400" left="81" width="101" height="12" font="3">across four tables:</text>
<text top="402" left="187" width="48" height="9" font="6">SUPPLIER</text>
<text top="400" left="235" width="3" height="12" font="3">,</text>
<text top="402" left="243" width="49" height="9" font="6">LINEITEM</text>
<text top="400" left="292" width="3" height="12" font="3">,</text>
<text top="402" left="300" width="41" height="9" font="6">ORDERS</text>
<text top="400" left="341" width="27" height="12" font="3">, and</text>
<text top="402" left="372" width="39" height="9" font="6">NATION</text>
<text top="400" left="411" width="29" height="12" font="3">. The</text>
<text top="418" left="81" width="48" height="9" font="6">SUPPLIER</text>
<text top="416" left="132" width="19" height="12" font="3">and</text>
<text top="418" left="155" width="39" height="9" font="6">NATION</text>
<text top="416" left="197" width="243" height="12" font="3">tables were replicated across all the nodes, so</text>
<text top="432" left="81" width="141" height="12" font="3">only the join between the</text>
<text top="434" left="226" width="49" height="9" font="6">LINEITEM</text>
<text top="432" left="279" width="41" height="12" font="3">and the</text>
<text top="434" left="324" width="41" height="9" font="6">ORDERS</text>
<text top="432" left="369" width="70" height="12" font="3">tables on the</text>
<text top="449" left="81" width="57" height="9" font="6">ORDERKEY</text>
<text top="447" left="141" width="208" height="12" font="3">attribute required repartitioning (of the</text>
<text top="449" left="352" width="41" height="9" font="6">ORDERS</text>
<text top="447" left="397" width="43" height="12" font="3">table on</text>
<text top="465" left="81" width="68" height="9" font="6">O ORDERKEY</text>
<text top="463" left="149" width="290" height="12" font="3">). Besides the four table join, Query 21 also contains</text>
<text top="481" left="81" width="38" height="9" font="6">SELECT</text>
<text top="479" left="122" width="94" height="12" font="3">subqueries on the</text>
<text top="481" left="220" width="49" height="9" font="6">LINEITEM</text>
<text top="479" left="273" width="84" height="12" font="3">table within the</text>
<text top="481" left="360" width="37" height="9" font="6">WHERE</text>
<text top="479" left="400" width="37" height="12" font="3">clause.</text>
<text top="494" left="94" width="346" height="12" font="3">Surprisingly, the results for the more complex TPC-H Query</text>
<text top="510" left="81" width="359" height="12" font="3">21 results, shown in Figure 2(b), is similar to that of the simpler</text>
<text top="526" left="80" width="359" height="12" font="3">TPC-H Query 1, which is shown in Figure 2(a). Since both queries</text>
<text top="542" left="81" width="359" height="12" font="3">scale well, the energy consumption is fairly ﬂat in both cases. It</text>
<text top="557" left="81" width="360" height="12" font="3">is interesting to consider why the more complex TPC-H Query 21</text>
<text top="573" left="81" width="314" height="12" font="3">scales well, even though it requires a repartitioning of the</text>
<text top="575" left="398" width="41" height="9" font="6">ORDERS</text>
<text top="589" left="81" width="359" height="12" font="3">table during query processing. The reason for this behavior is that</text>
<text top="604" left="81" width="359" height="12" font="3">the bulk of this query (94.5% of the total query time for eight nodes</text>
<text top="620" left="79" width="361" height="12" font="3">– 8N) is spent doing node local execution. Only 5.5% of the total</text>
<text top="636" left="81" width="214" height="12" font="3">query time is spent repartitioning for the</text>
<text top="638" left="298" width="49" height="9" font="6">LINEITEM</text>
<text top="636" left="351" width="19" height="12" font="3">and</text>
<text top="638" left="373" width="41" height="9" font="6">ORDERS</text>
<text top="636" left="418" width="24" height="12" font="3">join.</text>
<text top="651" left="81" width="359" height="12" font="3">Since the bulk of the query is processed locally on each node, this</text>
<text top="667" left="81" width="359" height="12" font="3">means that increasing the cluster size increases performance nearly</text>
<text top="683" left="81" width="359" height="12" font="3">linearly. Thus, for a query with few bottlenecks, Vertica exhibits</text>
<text top="698" left="81" width="359" height="12" font="3">nearly ideal speedup, and so the energy-efﬁcient cluster design is to</text>
<text top="714" left="81" width="206" height="12" font="3">simply use as many nodes as possible.</text>
<text top="730" left="94" width="345" height="12" font="3">However, we have already seen a complex query where Vertica</text>
<text top="746" left="81" width="44" height="12" font="3">does not</text>
<text top="746" left="128" width="311" height="12" font="3">exhibit ideal speedup. Compare the TPC-H Query 21 result</text>
<text top="761" left="81" width="359" height="12" font="3">to Query 12 (shown in Section 1, Figure 1(a)), which is a much</text>
<text top="777" left="81" width="183" height="12" font="3">simpler two table join between the</text>
<text top="779" left="267" width="41" height="9" font="6">ORDERS</text>
<text top="777" left="312" width="39" height="12" font="3">and the</text>
<text top="779" left="354" width="49" height="9" font="6">LINEITEM</text>
<text top="777" left="407" width="34" height="12" font="3">tables,</text>
<text top="793" left="81" width="359" height="12" font="3">and performs the same repartitioning as Query 21. Compared to</text>
<text top="808" left="81" width="359" height="12" font="3">the 5.5% time spent network bottlenecked during repartitioning</text>
<text top="824" left="81" width="359" height="12" font="3">in Query 21, Query 12 spends 48% of the query time network</text>
<text top="840" left="81" width="359" height="12" font="3">bottlenecked during repartitioning with the eight node cluster. Since</text>
<text top="855" left="81" width="359" height="12" font="3">the proportional amount of total query time spent doing node local</text>
<text top="871" left="81" width="359" height="12" font="3">processing is now dramatically reduced, we see in Figure 1(a), that</text>
<text top="887" left="81" width="359" height="12" font="3">increasing the cluster size does not result in a proportional increase</text>
<text top="902" left="81" width="359" height="12" font="3">in performance. As such, the energy efﬁciency suffers dramatically</text>
<text top="918" left="81" width="269" height="12" font="3">as we increase the cluster size from 8 to 16 nodes.</text>
<text top="934" left="94" width="345" height="12" font="3">Summary: Our Vertica results show that for queries that do</text>
<text top="950" left="81" width="359" height="12" font="3">not involve signiﬁcant time repartitioning (i.e., most of the query</text>
<text top="965" left="81" width="359" height="12" font="3">execution time is spent on local computation at each node), the</text>
<text top="981" left="81" width="359" height="12" font="3">energy consumption vs. performance curves are roughly ﬂat. This</text>
<text top="997" left="81" width="359" height="12" font="3">implies that an interesting point for energy-efﬁcient cluster design</text>
<text top="1012" left="81" width="359" height="12" font="3">is to pick a cluster that is as large as possible, as there is no energy</text>
<text top="1028" left="81" width="359" height="12" font="3">savings when using fewer nodes, but there is an increase in query</text>
<text top="1044" left="81" width="359" height="12" font="3">response time. However, for queries that are bottlenecked, as we</text>
<text top="1059" left="81" width="359" height="12" font="3">saw with TPC-H Q12’s network repartitioning, non-linear speedup</text>
<text top="87" left="475" width="359" height="12" font="3">means that a potential energy-efﬁcient design decision is to reduce</text>
<text top="102" left="475" width="359" height="12" font="3">the cluster size up to the point where the lower performance is</text>
<text top="118" left="475" width="58" height="12" font="3">acceptable</text>
<text top="115" left="533" width="4" height="8" font="5">4</text>
<text top="118" left="538" width="296" height="12" font="3">. Of course, one simple way to mitigate repartitioning</text>
<text top="134" left="475" width="359" height="12" font="3">bottlenecks is to devise energy-aware repartitioning or replication</text>
<text top="149" left="475" width="359" height="12" font="3">strategies. An analysis and comparison to such strategies is beyond</text>
<text top="165" left="475" width="338" height="12" font="3">the scope of this paper, but an interesting target of future work.</text>
<text top="190" left="475" width="22" height="16" font="1">3.2</text>
<text top="190" left="516" width="86" height="16" font="1">HadoopDB</text>
<text top="213" left="489" width="345" height="12" font="3">HadoopDB is an open-source, shared-nothing parallel DBMS</text>
<text top="229" left="475" width="359" height="12" font="3">that uses Hadoop to coordinate independent nodes, with each node</text>
<text top="244" left="475" width="359" height="12" font="3">running Ingres/VectorWise [4, 6]. We used Hadoop ver. 0.19.2 and</text>
<text top="260" left="475" width="359" height="12" font="3">Ingres VectorWise ver. 1.0.0-112. Setup scripts for HadoopDB and</text>
<text top="276" left="475" width="337" height="12" font="3">the TPC-H queries we ran were provided by the authors of [6].</text>
<text top="291" left="489" width="347" height="12" font="3">In HadoopDB, Hadoop acts as a means of communication be-</text>
<text top="307" left="475" width="359" height="12" font="3">tween the individual nodes. However, Hadoop was designed with</text>
<text top="323" left="475" width="361" height="12" font="3">fault tolerance as one of the primary goals and consequently, the per-</text>
<text top="338" left="475" width="359" height="12" font="3">formance of our version of HadoopDB was limited by the Hadoop</text>
<text top="354" left="475" width="359" height="12" font="3">bottleneck. Our evaluation of HadoopDB found that (similar to the</text>
<text top="370" left="475" width="359" height="12" font="3">results in Figure 1(a)) the best performing cluster is not always the</text>
<text top="386" left="475" width="361" height="12" font="3">most energy-efﬁcient. In the interest of space, we omit these results.</text>
<text top="411" left="475" width="22" height="16" font="1">3.3</text>
<text top="411" left="516" width="81" height="16" font="1">Discussion</text>
<text top="433" left="489" width="345" height="12" font="3">From our results with Vertica, we have found that there are queries</text>
<text top="449" left="475" width="361" height="12" font="3">where the highest performing cluster conﬁguration is not the most en-</text>
<text top="465" left="475" width="361" height="12" font="3">ergy efﬁcient (TPC-H Q12, Figure 1(a)) due to a network bottleneck.</text>
<text top="481" left="475" width="360" height="12" font="3">With a commercial DBMS, simpler queries that do not require any</text>
<text top="496" left="475" width="359" height="12" font="3">internode communication scale fairly linearly with increased cluster</text>
<text top="512" left="475" width="361" height="12" font="3">size. We saw this with Query 1 and Query 21 (Figures 2(a,b)). How-</text>
<text top="528" left="475" width="360" height="12" font="3">ever, with communication heavy queries such as Q12 (Figure 1(a)),</text>
<text top="543" left="475" width="359" height="12" font="3">increasing the cluster size simply adds extra network overhead that</text>
<text top="559" left="475" width="361" height="12" font="3">dampens the performance increase and reduces our energy savings.</text>
<text top="575" left="474" width="359" height="12" font="3">Thus, we conclude that optimizing for parallel DBMS performance</text>
<text top="590" left="475" width="359" height="12" font="3">does not always result in the lowest energy consumed per query and</text>
<text top="606" left="475" width="359" height="12" font="3">this is the opposite conclusion from prior work which dealt with</text>
<text top="622" left="475" width="214" height="12" font="3">single server DBMS environments [35].</text>
<text top="637" left="489" width="347" height="12" font="3">With our results, we hypothesize that queries with bottlenecks,</text>
<text top="653" left="475" width="360" height="12" font="3">such as the network or disk, cause node underutilization and thus,</text>
<text top="669" left="475" width="359" height="12" font="3">the bottlenecks decrease the energy efﬁciency as the cluster size</text>
<text top="684" left="475" width="359" height="12" font="3">increases. Since Vertica and HadoopDB are black-box systems, to</text>
<text top="700" left="475" width="361" height="12" font="3">further explore this hypothesis of performance bottlenecks affect-</text>
<text top="716" left="475" width="359" height="12" font="3">ing affecting energy efﬁciency, we built a custom parallel query</text>
<text top="732" left="475" width="359" height="12" font="3">execution engine called P-store. Using P-store we empirically and</text>
<text top="747" left="475" width="359" height="12" font="3">analytically studied various join operations that require varying</text>
<text top="763" left="475" width="183" height="12" font="3">degrees of network repartitioning.</text>
<text top="797" left="475" width="13" height="16" font="1">4.</text>
<text top="797" left="507" width="327" height="16" font="1">ENERGY EFFICIENCY OF A PARAL-</text>
<text top="818" left="507" width="283" height="16" font="1">LEL DATA PROCESSING ENGINE</text>
<text top="841" left="489" width="347" height="12" font="3">From our empirical, off-the-shelf, parallel DBMS observations,</text>
<text top="857" left="475" width="360" height="12" font="3">we concluded that the scalability of the system running a given query</text>
<text top="872" left="475" width="359" height="12" font="3">plays an important role in inﬂuencing the energy efﬁciency of the</text>
<text top="888" left="475" width="359" height="12" font="3">cluster design points. Typically, poor scalability is a consequence of</text>
<text top="904" left="475" width="361" height="12" font="3">bottlenecks in the system. We now describe some of these bottle-</text>
<text top="919" left="475" width="359" height="12" font="3">necks, and then present our custom parallel query execution engine</text>
<text top="935" left="475" width="338" height="12" font="3">P-store that allows us to study these bottlenecks in more detail.</text>
<text top="960" left="475" width="22" height="16" font="1">4.1</text>
<text top="960" left="516" width="89" height="16" font="1">Bottlenecks</text>
<text top="983" left="489" width="345" height="12" font="3">Since there can be a multitude of implementation-speciﬁc issues</text>
<text top="999" left="475" width="359" height="12" font="3">that can affect DBMS scalability, in this paper we are interested</text>
<text top="1014" left="475" width="361" height="12" font="3">only in fundamental bottlenecks that are inherent to the core engine.</text>
<text top="1037" left="477" width="4" height="8" font="5">4</text>
<text top="1041" left="482" width="352" height="11" font="8">Cluster systems often have implicit or explicit minimum performance</text>
<text top="1054" left="475" width="359" height="11" font="8">targets for many workloads. We recognize that determining when such limits</text>
<text top="1068" left="475" width="258" height="11" font="8">are acceptable is a broad and emerging research topic.</text>
</page>
<page number="5" position="absolute" top="0" left="0" height="1188" width="918">
	<fontspec id="9" size="14" family="Times" color="#000000"/>
<text top="289" left="318" width="3" height="11" font="8"> </text>
<text top="111" left="254" width="17" height="10" font="4">4N </text>
<text top="98" left="182" width="17" height="10" font="4">6N </text>
<text top="85" left="124" width="17" height="10" font="4">8N </text>
<text top="259" left="104" width="15" height="10" font="4">0.0</text>
<text top="243" left="104" width="15" height="10" font="4">0.1</text>
<text top="227" left="104" width="15" height="10" font="4">0.2</text>
<text top="211" left="104" width="15" height="10" font="4">0.3</text>
<text top="194" left="104" width="15" height="10" font="4">0.4</text>
<text top="178" left="104" width="15" height="10" font="4">0.5</text>
<text top="162" left="104" width="15" height="10" font="4">0.6</text>
<text top="146" left="104" width="15" height="10" font="4">0.7</text>
<text top="130" left="104" width="15" height="10" font="4">0.8</text>
<text top="114" left="104" width="15" height="10" font="4">0.9</text>
<text top="98" left="104" width="15" height="10" font="4">1.0</text>
<text top="272" left="290" width="21" height="10" font="4">0.50</text>
<text top="272" left="205" width="21" height="10" font="4">0.75</text>
<text top="272" left="120" width="21" height="10" font="4">1.00</text>
<text top="255" left="94" width="0" height="14" font="2">No</text>
<text top="241" left="94" width="0" height="14" font="2">rmaliz</text>
<text top="211" left="94" width="0" height="14" font="2">ed</text>
<text top="199" left="94" width="0" height="14" font="2"> En</text>
<text top="184" left="94" width="0" height="14" font="2">er</text>
<text top="174" left="94" width="0" height="14" font="2">gy</text>
<text top="163" left="94" width="0" height="14" font="2"> C</text>
<text top="154" left="94" width="0" height="14" font="2">on</text>
<text top="141" left="94" width="0" height="14" font="2">sump</text>
<text top="114" left="94" width="0" height="14" font="2">tion</text>
<text top="95" left="94" width="0" height="14" font="2"> </text>
<text top="283" left="133" width="149" height="12" font="7">Normalized Performance </text>
<text top="289" left="573" width="3" height="11" font="8"> </text>
<text top="135" left="514" width="17" height="10" font="4">4N </text>
<text top="102" left="429" width="17" height="10" font="4">6N </text>
<text top="85" left="378" width="17" height="10" font="4">8N </text>
<text top="259" left="358" width="15" height="10" font="4">0.0</text>
<text top="243" left="358" width="15" height="10" font="4">0.1</text>
<text top="227" left="358" width="15" height="10" font="4">0.2</text>
<text top="211" left="358" width="15" height="10" font="4">0.3</text>
<text top="194" left="358" width="15" height="10" font="4">0.4</text>
<text top="178" left="358" width="15" height="10" font="4">0.5</text>
<text top="162" left="358" width="15" height="10" font="4">0.6</text>
<text top="146" left="358" width="15" height="10" font="4">0.7</text>
<text top="130" left="358" width="15" height="10" font="4">0.8</text>
<text top="114" left="358" width="15" height="10" font="4">0.9</text>
<text top="98" left="358" width="15" height="10" font="4">1.0</text>
<text top="272" left="544" width="21" height="10" font="4">0.50</text>
<text top="272" left="459" width="21" height="10" font="4">0.75</text>
<text top="272" left="374" width="21" height="10" font="4">1.00</text>
<text top="256" left="348" width="0" height="14" font="2">No</text>
<text top="242" left="348" width="0" height="14" font="2">rmaliz</text>
<text top="212" left="348" width="0" height="14" font="2">ed</text>
<text top="200" left="348" width="0" height="14" font="2"> En</text>
<text top="185" left="348" width="0" height="14" font="2">er</text>
<text top="175" left="348" width="0" height="14" font="2">gy</text>
<text top="164" left="348" width="0" height="14" font="2"> C</text>
<text top="155" left="348" width="0" height="14" font="2">on</text>
<text top="142" left="348" width="0" height="14" font="2">sump</text>
<text top="115" left="348" width="0" height="14" font="2">tion</text>
<text top="96" left="348" width="0" height="14" font="2"> </text>
<text top="283" left="387" width="149" height="12" font="7">Normalized Performance </text>
<text top="289" left="827" width="3" height="11" font="8"> </text>
<text top="139" left="763" width="17" height="10" font="4">4N </text>
<text top="132" left="680" width="17" height="10" font="4">6N </text>
<text top="87" left="632" width="17" height="10" font="4">8N </text>
<text top="259" left="613" width="15" height="10" font="4">0.0</text>
<text top="243" left="613" width="15" height="10" font="4">0.1</text>
<text top="227" left="613" width="15" height="10" font="4">0.2</text>
<text top="211" left="613" width="15" height="10" font="4">0.3</text>
<text top="195" left="613" width="15" height="10" font="4">0.4</text>
<text top="179" left="613" width="15" height="10" font="4">0.5</text>
<text top="164" left="613" width="15" height="10" font="4">0.6</text>
<text top="148" left="613" width="15" height="10" font="4">0.7</text>
<text top="132" left="613" width="15" height="10" font="4">0.8</text>
<text top="116" left="613" width="15" height="10" font="4">0.9</text>
<text top="100" left="613" width="15" height="10" font="4">1.0</text>
<text top="272" left="799" width="21" height="10" font="4">0.50</text>
<text top="272" left="714" width="21" height="10" font="4">0.75</text>
<text top="272" left="629" width="21" height="10" font="4">1.00</text>
<text top="255" left="602" width="0" height="14" font="2">No</text>
<text top="241" left="602" width="0" height="14" font="2">rmaliz</text>
<text top="211" left="602" width="0" height="14" font="2">ed</text>
<text top="199" left="602" width="0" height="14" font="2"> En</text>
<text top="184" left="602" width="0" height="14" font="2">er</text>
<text top="174" left="602" width="0" height="14" font="2">gy</text>
<text top="163" left="602" width="0" height="14" font="2"> C</text>
<text top="154" left="602" width="0" height="14" font="2">on</text>
<text top="141" left="602" width="0" height="14" font="2">sump</text>
<text top="114" left="602" width="0" height="14" font="2">tion</text>
<text top="95" left="602" width="0" height="14" font="2"> </text>
<text top="283" left="643" width="150" height="12" font="7">Normalized Performance </text>
<text top="300" left="154" width="75" height="12" font="3">(a) One query</text>
<text top="300" left="384" width="146" height="12" font="3">(b) Two concurrent queries</text>
<text top="300" left="649" width="147" height="12" font="3">(c) Four concurrent queries</text>
<text top="318" left="81" width="519" height="12" font="3">Figure 3: A partition incompatible TPC-H Q3 dual shufﬂe (exchange) hash join between</text>
<text top="320" left="604" width="53" height="9" font="6">LINEITEM</text>
<text top="318" left="662" width="22" height="12" font="3">and</text>
<text top="320" left="688" width="44" height="9" font="6">ORDERS</text>
<text top="318" left="736" width="100" height="12" font="3">(scale 1000) in P-</text>
<text top="334" left="81" width="753" height="12" font="3">store. Each subﬁgure (a-c) shows the energy consumption and performance ratios relative to the 8 node cluster reference point. The</text>
<text top="349" left="81" width="373" height="12" font="3">dotted line indicates the points where the EDP metric is constant.</text>
<text top="381" left="81" width="361" height="12" font="3">Since our focus is on analytic SQL queries, we examine core par-</text>
<text top="396" left="81" width="359" height="12" font="3">allel database operators, such as scans, joins, and exchanges. For</text>
<text top="412" left="81" width="359" height="12" font="3">these kinds of queries and operators we identify three categories of</text>
<text top="428" left="81" width="359" height="12" font="3">bottlenecks that can lead to underutilized hardware components in a</text>
<text top="443" left="81" width="110" height="12" font="3">cluster environment.</text>
<text top="459" left="94" width="345" height="12" font="3">Hardware bottleneck (network and disk): Decision support</text>
<text top="475" left="81" width="361" height="12" font="3">queries often require repartitioning during query execution. Repli-</text>
<text top="491" left="81" width="359" height="12" font="3">cation of tables on different partition keys can alleviate the need for</text>
<text top="506" left="81" width="359" height="12" font="3">repartitioning in some cases, but this option is limited to only small</text>
<text top="522" left="81" width="309" height="12" font="3">tables as it is often too expensive to replicate large tables.</text>
<text top="538" left="94" width="346" height="12" font="3">The repartitioning step is often gated by the speed of the network</text>
<text top="553" left="81" width="359" height="12" font="3">interconnect, causing the processor and other resources of a node to</text>
<text top="569" left="81" width="359" height="12" font="3">idle while the node waits for data from the network. Additionally, an</text>
<text top="585" left="81" width="359" height="12" font="3">increase in network trafﬁc on the cluster switches causes interference</text>
<text top="600" left="81" width="359" height="12" font="3">and further delays in communication. Future advances in networking</text>
<text top="616" left="81" width="359" height="12" font="3">technology are expected to be accompanied by advances in CPU</text>
<text top="632" left="81" width="361" height="12" font="3">capabilities, making this performance gap a persistent problem [30].</text>
<text top="647" left="94" width="345" height="12" font="3">The balance between the network and disk subsystems can be</text>
<text top="663" left="81" width="359" height="12" font="3">easily disturbed with varying predicate selectivities which diminish</text>
<text top="679" left="81" width="359" height="12" font="3">the rate at which the storage subsystem can deliver qualiﬁed tuples</text>
<text top="695" left="81" width="359" height="12" font="3">to the network. As a result, underutilized CPU cores waiting to</text>
<text top="710" left="81" width="359" height="12" font="3">process operators at the higher levels of a query plan waste energy.</text>
<text top="726" left="94" width="353" height="12" font="3">Algorithmic bottleneck (broadcast): For certain joins, the cheap-</text>
<text top="742" left="81" width="359" height="12" font="3">est execution plan may be to broadcast a copy of the inner table</text>
<text top="757" left="80" width="359" height="12" font="3">(once all local predicates have been applied) to all the nodes so</text>
<text top="773" left="81" width="359" height="12" font="3">that the join is performed without re-partitioning the (potentially</text>
<text top="789" left="81" width="359" height="12" font="3">larger) outer table. Such a broadcast generally takes the same time</text>
<text top="804" left="81" width="360" height="12" font="3">to complete regardless of the number of participating nodes (e.g.,</text>
<text top="820" left="81" width="359" height="12" font="3">for mGB of qualifying tuples and say 16 nodes, each node needs to</text>
<text top="836" left="81" width="359" height="12" font="3">receive (15m/16)GB of the data, while for 32 nodes this changes</text>
<text top="851" left="81" width="359" height="12" font="3">by a small amount to (31m/32)GB). As a result, scaling out to</text>
<text top="867" left="81" width="359" height="12" font="3">more nodes does not speed up this ﬁrst phase of a join and it reduces</text>
<text top="883" left="81" width="154" height="12" font="3">the cluster energy efﬁciency.</text>
<text top="898" left="94" width="347" height="12" font="3">Data skew: Although partitioning tools try to avoid data skew,</text>
<text top="914" left="81" width="359" height="12" font="3">even a small skew, can cause an imbalance in the utilization of the</text>
<text top="930" left="81" width="359" height="12" font="3">cluster nodes, especially as the system scales. Thus, data skew can</text>
<text top="946" left="81" width="359" height="12" font="3">easily create cluster and server imbalances even in highly tuned</text>
<text top="961" left="81" width="359" height="12" font="3">conﬁgurations. While we recognize data skew as a bottleneck, we</text>
<text top="977" left="81" width="357" height="12" font="3">leave an investigation of this critical issue as a part of future work.</text>
<text top="1013" left="81" width="22" height="16" font="1">4.2</text>
<text top="1013" left="121" width="308" height="16" font="1">P-store: A Custom-built Parallel Engine</text>
<text top="1035" left="94" width="345" height="12" font="3">P-store is built on top of a block-iterator tuple-scan module and</text>
<text top="1051" left="81" width="361" height="12" font="3">a storage engine [16], that has scan, project, and select operators.</text>
<text top="1067" left="80" width="361" height="12" font="3">To this engine, we added network exchange and hash join operators.</text>
<text top="381" left="475" width="360" height="12" font="3">Since energy consumption is a function of average power and time,</text>
<text top="396" left="475" width="359" height="12" font="3">our goal was to make our engine perform at levels comparable to</text>
<text top="412" left="475" width="359" height="12" font="3">commercial systems. Therefore, it was imperative that our exchange</text>
<text top="428" left="475" width="359" height="12" font="3">operator is able to transfer over the network at rates near the limits</text>
<text top="443" left="475" width="359" height="12" font="3">of the physical hardware, and our operators never materialize tuples</text>
<text top="459" left="475" width="355" height="12" font="3">while maximizing utilization through multi-threaded concurrency.</text>
<text top="489" left="475" width="22" height="16" font="1">4.3</text>
<text top="489" left="516" width="98" height="16" font="1">Experiments</text>
<text top="512" left="489" width="347" height="12" font="3">The purpose of these P-store experiments is to stress our “work-</text>
<text top="528" left="475" width="359" height="12" font="3">horse” exchange operator when performing partition-incompatible</text>
<text top="543" left="475" width="359" height="12" font="3">hash joins. By stressing the exchange operator, we wanted to see</text>
<text top="559" left="475" width="359" height="12" font="3">how the hash join operation behaves at different points in the cluster</text>
<text top="575" left="475" width="361" height="12" font="3">design space with respect to performance and energy consumption.</text>
<text top="590" left="489" width="199" height="12" font="3">Our hash join query is between the</text>
<text top="592" left="692" width="49" height="9" font="6">LINEITEM</text>
<text top="590" left="747" width="41" height="12" font="3">and the</text>
<text top="592" left="793" width="41" height="9" font="6">ORDERS</text>
<text top="606" left="475" width="359" height="12" font="3">tables of TPC-H at a scale factor of 1000, similar to the Vertica</text>
<text top="622" left="475" width="359" height="12" font="3">experiments (see Section 3.1). We used eight of the cluster-V nodes</text>
<text top="637" left="475" width="359" height="12" font="3">described in Table 1. By measuring the CPU utilization, the average</text>
<text top="653" left="475" width="359" height="12" font="3">cluster power was found using our empirically derived model from</text>
<text top="669" left="475" width="231" height="12" font="3">the cluster-V column of Table 1, Section 3.</text>
<text top="685" left="489" width="345" height="12" font="3">To explore the bottleneck of partition-incompatible joins, we</text>
<text top="700" left="475" width="103" height="12" font="3">hash partitioned the</text>
<text top="702" left="581" width="49" height="9" font="6">LINEITEM</text>
<text top="700" left="633" width="19" height="12" font="3">and</text>
<text top="702" left="655" width="41" height="9" font="6">ORDERS</text>
<text top="700" left="699" width="74" height="12" font="3">tables on their</text>
<text top="702" left="775" width="59" height="9" font="6">L SHIPDATE</text>
<text top="716" left="475" width="20" height="12" font="3">and</text>
<text top="718" left="499" width="60" height="9" font="6">O CUSTKEY</text>
<text top="716" left="563" width="273" height="12" font="3">attributes respectively, and examined the join be-</text>
<text top="732" left="475" width="359" height="12" font="3">tween these two tables that is necessary for TPC-H Query 3. The</text>
<text top="749" left="475" width="49" height="9" font="6">LINEITEM</text>
<text top="747" left="529" width="132" height="12" font="3">table is projected to the</text>
<text top="749" left="665" width="170" height="9" font="6">L ORDERKEY, L EXTENDEDPRICE,</text>
<text top="765" left="475" width="63" height="9" font="6">L DISCOUNT</text>
<text top="763" left="538" width="28" height="12" font="3">, and</text>
<text top="765" left="571" width="59" height="9" font="6">L SHIPDATE</text>
<text top="763" left="635" width="107" height="12" font="3">columns, while the</text>
<text top="765" left="747" width="41" height="9" font="6">ORDERS</text>
<text top="763" left="793" width="41" height="12" font="3">table is</text>
<text top="779" left="475" width="89" height="12" font="3">projected to the</text>
<text top="781" left="570" width="236" height="9" font="6">O ORDERKEY, O ORDERDATE, O SHIPPRIORITY</text>
<text top="779" left="805" width="29" height="12" font="3">, and</text>
<text top="796" left="475" width="60" height="9" font="6">O CUSTKEY</text>
<text top="794" left="538" width="296" height="12" font="3">columns. To simulate the beneﬁt of a columnar storage</text>
<text top="810" left="475" width="359" height="12" font="3">manager, for both tables, these four column projections (20B) were</text>
<text top="826" left="475" width="359" height="12" font="3">stored as tuples in memory for the scan operator to read. We apply a</text>
<text top="841" left="475" width="359" height="12" font="3">5% selectivity predicate on both the tables using a predicate on the</text>
<text top="859" left="475" width="60" height="9" font="6">O CUSTKEY</text>
<text top="857" left="538" width="65" height="12" font="3">attribute for</text>
<text top="859" left="606" width="41" height="9" font="6">ORDERS</text>
<text top="857" left="651" width="120" height="12" font="3">and a predicate on the</text>
<text top="859" left="775" width="59" height="9" font="6">L SHIPDATE</text>
<text top="873" left="475" width="64" height="12" font="3">attribute for</text>
<text top="875" left="542" width="49" height="9" font="6">LINEITEM</text>
<text top="873" left="592" width="166" height="12" font="3">, as is done in TPC-H Query 3.</text>
<text top="889" left="489" width="346" height="12" font="3">To perform the partition-incompatible join in this TPC-H query</text>
<text top="904" left="475" width="359" height="12" font="3">(Query 3), the hash join operator needs to build a hash table on the</text>
<text top="922" left="475" width="41" height="9" font="6">ORDERS</text>
<text top="920" left="520" width="168" height="12" font="3">table and then probe using the</text>
<text top="922" left="692" width="49" height="9" font="6">LINEITEM</text>
<text top="920" left="745" width="89" height="12" font="3">table. There are</text>
<text top="936" left="475" width="298" height="12" font="3">two ways to do this: (i) repartition both tables on the</text>
<text top="938" left="778" width="57" height="9" font="6">ORDERKEY</text>
<text top="951" left="475" width="314" height="12" font="3">attribute – a dual shufﬂe, and (ii) broadcast the qualifying</text>
<text top="953" left="793" width="41" height="9" font="6">ORDERS</text>
<text top="967" left="475" width="359" height="12" font="3">tuples to all nodes. With these two join methods, we show the effects</text>
<text top="983" left="475" width="359" height="12" font="3">of network and disk bottlenecks as well as algorithmic bottlenecks</text>
<text top="998" left="475" width="152" height="12" font="3">that affect energy efﬁciency.</text>
<text top="1030" left="479" width="33" height="14" font="9">4.3.1</text>
<text top="1030" left="529" width="81" height="14" font="9">Dual Shufﬂe</text>
<text top="1051" left="489" width="345" height="12" font="3">By doing a repartitioning of both tables, our P-store results shows</text>
<text top="1067" left="475" width="359" height="12" font="3">behavior that is similar to that of Vertica running TPC-H Query 12</text>
</page>
<page number="6" position="absolute" top="0" left="0" height="1188" width="918">
	<fontspec id="10" size="9" family="Times" color="#000000"/>
<text top="289" left="318" width="3" height="11" font="8"> </text>
<text top="136" left="252" width="17" height="10" font="4">4N </text>
<text top="135" left="163" width="17" height="10" font="4">6N </text>
<text top="84" left="124" width="17" height="10" font="4">8N </text>
<text top="259" left="104" width="15" height="10" font="4">0.0</text>
<text top="242" left="104" width="15" height="10" font="4">0.1</text>
<text top="226" left="104" width="15" height="10" font="4">0.2</text>
<text top="209" left="104" width="15" height="10" font="4">0.3</text>
<text top="193" left="104" width="15" height="10" font="4">0.4</text>
<text top="176" left="104" width="15" height="10" font="4">0.5</text>
<text top="160" left="104" width="15" height="10" font="4">0.6</text>
<text top="144" left="104" width="15" height="10" font="4">0.7</text>
<text top="127" left="104" width="15" height="10" font="4">0.8</text>
<text top="111" left="104" width="15" height="10" font="4">0.9</text>
<text top="94" left="104" width="15" height="10" font="4">1.0</text>
<text top="272" left="290" width="21" height="10" font="4">0.50</text>
<text top="272" left="205" width="21" height="10" font="4">0.75</text>
<text top="272" left="120" width="21" height="10" font="4">1.00</text>
<text top="252" left="94" width="0" height="14" font="2">No</text>
<text top="238" left="94" width="0" height="14" font="2">rmaliz</text>
<text top="208" left="94" width="0" height="14" font="2">ed</text>
<text top="196" left="94" width="0" height="14" font="2"> En</text>
<text top="181" left="94" width="0" height="14" font="2">er</text>
<text top="171" left="94" width="0" height="14" font="2">gy</text>
<text top="160" left="94" width="0" height="14" font="2"> C</text>
<text top="151" left="94" width="0" height="14" font="2">on</text>
<text top="138" left="94" width="0" height="14" font="2">sump</text>
<text top="111" left="94" width="0" height="14" font="2">tion</text>
<text top="92" left="94" width="0" height="14" font="2"> </text>
<text top="283" left="134" width="150" height="12" font="7">Normalized Performance </text>
<text top="289" left="573" width="3" height="11" font="8"> </text>
<text top="143" left="495" width="17" height="10" font="4">4N </text>
<text top="125" left="420" width="17" height="10" font="4">6N </text>
<text top="84" left="378" width="17" height="10" font="4">8N </text>
<text top="259" left="358" width="15" height="10" font="4">0.0</text>
<text top="242" left="358" width="15" height="10" font="4">0.1</text>
<text top="226" left="358" width="15" height="10" font="4">0.2</text>
<text top="210" left="358" width="15" height="10" font="4">0.3</text>
<text top="194" left="358" width="15" height="10" font="4">0.4</text>
<text top="177" left="358" width="15" height="10" font="4">0.5</text>
<text top="161" left="358" width="15" height="10" font="4">0.6</text>
<text top="145" left="358" width="15" height="10" font="4">0.7</text>
<text top="129" left="358" width="15" height="10" font="4">0.8</text>
<text top="112" left="358" width="15" height="10" font="4">0.9</text>
<text top="96" left="358" width="15" height="10" font="4">1.0</text>
<text top="272" left="544" width="21" height="10" font="4">0.50</text>
<text top="272" left="459" width="21" height="10" font="4">0.75</text>
<text top="272" left="374" width="21" height="10" font="4">1.00</text>
<text top="253" left="348" width="0" height="14" font="2">No</text>
<text top="239" left="348" width="0" height="14" font="2">rmaliz</text>
<text top="209" left="348" width="0" height="14" font="2">ed</text>
<text top="197" left="348" width="0" height="14" font="2"> En</text>
<text top="182" left="348" width="0" height="14" font="2">er</text>
<text top="172" left="348" width="0" height="14" font="2">gy</text>
<text top="161" left="348" width="0" height="14" font="2"> C</text>
<text top="152" left="348" width="0" height="14" font="2">on</text>
<text top="139" left="348" width="0" height="14" font="2">sump</text>
<text top="112" left="348" width="0" height="14" font="2">tion</text>
<text top="93" left="348" width="0" height="14" font="2"> </text>
<text top="283" left="389" width="150" height="12" font="7">Normalized Performance </text>
<text top="289" left="827" width="3" height="11" font="8"> </text>
<text top="141" left="753" width="17" height="10" font="4">4N </text>
<text top="134" left="675" width="17" height="10" font="4">6N </text>
<text top="86" left="632" width="17" height="10" font="4">8N </text>
<text top="259" left="613" width="15" height="10" font="4">0.0</text>
<text top="243" left="613" width="15" height="10" font="4">0.1</text>
<text top="227" left="613" width="15" height="10" font="4">0.2</text>
<text top="211" left="613" width="15" height="10" font="4">0.3</text>
<text top="195" left="613" width="15" height="10" font="4">0.4</text>
<text top="179" left="613" width="15" height="10" font="4">0.5</text>
<text top="163" left="613" width="15" height="10" font="4">0.6</text>
<text top="147" left="613" width="15" height="10" font="4">0.7</text>
<text top="131" left="613" width="15" height="10" font="4">0.8</text>
<text top="115" left="613" width="15" height="10" font="4">0.9</text>
<text top="99" left="613" width="15" height="10" font="4">1.0</text>
<text top="272" left="799" width="21" height="10" font="4">0.50</text>
<text top="272" left="714" width="21" height="10" font="4">0.75</text>
<text top="272" left="629" width="21" height="10" font="4">1.00</text>
<text top="255" left="602" width="0" height="14" font="2">No</text>
<text top="241" left="602" width="0" height="14" font="2">rmaliz</text>
<text top="211" left="602" width="0" height="14" font="2">ed</text>
<text top="199" left="602" width="0" height="14" font="2"> En</text>
<text top="184" left="602" width="0" height="14" font="2">er</text>
<text top="174" left="602" width="0" height="14" font="2">gy</text>
<text top="163" left="602" width="0" height="14" font="2"> C</text>
<text top="154" left="602" width="0" height="14" font="2">on</text>
<text top="141" left="602" width="0" height="14" font="2">sump</text>
<text top="114" left="602" width="0" height="14" font="2">tion</text>
<text top="95" left="602" width="0" height="14" font="2"> </text>
<text top="283" left="643" width="150" height="12" font="7">Normalized Performance </text>
<text top="300" left="154" width="75" height="12" font="3">(a) One query</text>
<text top="300" left="384" width="146" height="12" font="3">(b) Two concurrent queries</text>
<text top="300" left="649" width="147" height="12" font="3">(c) Four concurrent queries</text>
<text top="318" left="81" width="445" height="12" font="3">Figure 4: A partition incompatible TPC-H Q3 broadcast hash join between</text>
<text top="320" left="531" width="53" height="9" font="6">LINEITEM</text>
<text top="318" left="589" width="22" height="12" font="3">and</text>
<text top="320" left="615" width="44" height="9" font="6">ORDERS</text>
<text top="318" left="664" width="170" height="12" font="3">(scale 1000) in P-store. Each</text>
<text top="334" left="81" width="753" height="12" font="3">subﬁgure (a-c) shows the energy consumption and performance ratios relative to the 8 node cluster reference point. The dotted line</text>
<text top="349" left="81" width="309" height="12" font="3">indicates the points where the EDP metric is constant.</text>
<text top="381" left="80" width="199" height="12" font="3">(Figure 1(a)). Using P-store, ﬁrst the</text>
<text top="383" left="283" width="41" height="9" font="6">ORDERS</text>
<text top="381" left="328" width="112" height="12" font="3">table is repartitioned</text>
<text top="396" left="81" width="361" height="12" font="3">and the hash table is built on this table on-the-ﬂy (no disk material-</text>
<text top="412" left="81" width="359" height="12" font="3">ization) as tuples arrive over the network. After all the nodes have</text>
<text top="428" left="81" width="145" height="12" font="3">built their hash tables, the</text>
<text top="430" left="230" width="49" height="9" font="6">LINEITEM</text>
<text top="428" left="283" width="156" height="12" font="3">table is repartitioned and its</text>
<text top="443" left="81" width="208" height="12" font="3">tuples probe the hash tables on-the-ﬂy.</text>
<text top="459" left="94" width="346" height="12" font="3">In Figures 3(a)–(c), we see that poor performance scalability</text>
<text top="475" left="81" width="359" height="12" font="3">due to network bottlenecks can allow us to save energy by using</text>
<text top="491" left="81" width="359" height="12" font="3">fewer nodes. These ﬁgures show the comparison of relative energy</text>
<text top="506" left="81" width="359" height="12" font="3">consumption to relative performance of the hash join with 1, 2, and</text>
<text top="522" left="80" width="359" height="12" font="3">4 independent concurrent joins being performed respectively on 4 to</text>
<text top="538" left="81" width="359" height="12" font="3">8 node clusters. We increased the degree of concurrency to see how</text>
<text top="553" left="81" width="359" height="12" font="3">multiple simultaneous requests for the network resource affected</text>
<text top="569" left="81" width="126" height="12" font="3">the network bottleneck.</text>
<text top="585" left="94" width="346" height="12" font="3">Our results show that 4 nodes (4N) always consumes less energy</text>
<text top="600" left="81" width="359" height="12" font="3">than 8 (8N). Also, as the concurrency level increases, the degree</text>
<text top="616" left="81" width="359" height="12" font="3">of energy savings also increases (i.e., the results move closer to</text>
<text top="632" left="81" width="359" height="12" font="3">the dashed EDP line). In Figure 3(a), halving the cluster size only</text>
<text top="647" left="81" width="359" height="12" font="3">results in a 38% decrease in performance and translates to almost</text>
<text top="663" left="81" width="359" height="12" font="3">20% savings in energy consumption. At a concurrency level of</text>
<text top="679" left="81" width="359" height="12" font="3">two (Figure 3 (b)), the 4-node cluster has a 23% increase in energy</text>
<text top="695" left="81" width="361" height="12" font="3">savings over the 8-node cluster with a 35% penalty in performance.</text>
<text top="710" left="80" width="361" height="12" font="3">With 4 concurrent hash joins running on the cluster (Figure 3 (c)),</text>
<text top="726" left="81" width="359" height="12" font="3">the 4-node cluster saves 24% of the energy consumed by the 8-node</text>
<text top="742" left="81" width="222" height="12" font="3">cluster while losing 33% in performance.</text>
<text top="757" left="94" width="345" height="12" font="3">The reason we see greater energy savings with more concurrent</text>
<text top="773" left="81" width="361" height="12" font="3">queries is because the CPU utilization does not proportionally in-</text>
<text top="789" left="81" width="359" height="12" font="3">crease with the increasing concurrency level. This behavior is due</text>
<text top="804" left="81" width="359" height="12" font="3">to the network being the bottleneck, and so the CPU stalls and idles</text>
<text top="820" left="81" width="286" height="12" font="3">as other hash joins also require the network resource.</text>
<text top="836" left="94" width="345" height="12" font="3">To summarize, these results show that reducing the cluster size</text>
<text top="851" left="81" width="359" height="12" font="3">can save energy, but we pay for it with a proportionally greater loss</text>
<text top="867" left="81" width="359" height="12" font="3">in performance – i.e., these data points lie above the dashed EDP</text>
<text top="883" left="81" width="359" height="12" font="3">line. As we have mentioned previously, ideally we would prefer</text>
<text top="899" left="81" width="359" height="12" font="3">results that lie on or below this dotted curve. The next section shows</text>
<text top="914" left="81" width="330" height="12" font="3">that for broadcast joins, the trade-off is much more attractive.</text>
<text top="951" left="85" width="33" height="14" font="9">4.3.2</text>
<text top="951" left="134" width="67" height="14" font="9">Broadcast</text>
<text top="973" left="94" width="247" height="12" font="3">The broadcast join method scans and ﬁlters the</text>
<text top="975" left="344" width="41" height="9" font="6">ORDERS</text>
<text top="973" left="388" width="51" height="12" font="3">table, and</text>
<text top="988" left="81" width="360" height="12" font="3">then sends the qualifying tuples to all the other nodes. Therefore,</text>
<text top="1004" left="81" width="40" height="12" font="3">the full</text>
<text top="1006" left="124" width="41" height="9" font="6">ORDERS</text>
<text top="1004" left="169" width="217" height="12" font="3">hash table is built by each node and the</text>
<text top="1006" left="390" width="49" height="9" font="6">LINEITEM</text>
<text top="1020" left="81" width="313" height="12" font="3">table does not need to be repartitioned. To keep the full</text>
<text top="1022" left="398" width="41" height="9" font="6">ORDERS</text>
<text top="1035" left="81" width="222" height="12" font="3">hash table in memory, we increased the</text>
<text top="1037" left="307" width="41" height="9" font="6">ORDERS</text>
<text top="1035" left="353" width="87" height="12" font="3">table selectivity</text>
<text top="1051" left="81" width="149" height="12" font="3">from 5% to 1% but held the</text>
<text top="1053" left="233" width="49" height="9" font="6">LINEITEM</text>
<text top="1051" left="286" width="122" height="12" font="3">table selectivity at 5%.</text>
<text top="1067" left="94" width="348" height="12" font="3">The results for this experiment are shown in Figure 4(a)–(c).</text>
<text top="558" left="825" width="3" height="12" font="8"> </text>
<text top="424" left="721" width="52" height="10" font="6">Half Cluster </text>
<text top="418" left="615" width="20" height="10" font="6">75% </text>
<text top="448" left="646" width="52" height="10" font="6">Half Cluster </text>
<text top="432" left="581" width="20" height="10" font="6">75% </text>
<text top="411" left="769" width="52" height="10" font="6">Half Cluster </text>
<text top="385" left="648" width="20" height="10" font="6">75% </text>
<text top="393" left="539" width="50" height="10" font="6">Full Cluster </text>
<text top="526" left="518" width="5" height="10" font="6">0</text>
<text top="501" left="510" width="13" height="10" font="6">0.2</text>
<text top="476" left="510" width="13" height="10" font="6">0.4</text>
<text top="451" left="510" width="13" height="10" font="6">0.6</text>
<text top="426" left="510" width="13" height="10" font="6">0.8</text>
<text top="401" left="518" width="5" height="10" font="6">1</text>
<text top="376" left="510" width="13" height="10" font="6">1.2</text>
<text top="539" left="804" width="13" height="10" font="6">0.4</text>
<text top="539" left="758" width="13" height="10" font="6">0.5</text>
<text top="539" left="712" width="13" height="10" font="6">0.6</text>
<text top="539" left="665" width="13" height="10" font="6">0.7</text>
<text top="539" left="619" width="13" height="10" font="6">0.8</text>
<text top="539" left="573" width="13" height="10" font="6">0.9</text>
<text top="539" left="530" width="5" height="10" font="6">1</text>
<text top="552" left="607" width="131" height="13" font="7">Normalized Performance </text>
<text top="485" left="677" width="96" height="13" font="7">shuffle both tables</text>
<text top="499" left="677" width="109" height="13" font="7">broadcast small table</text>
<text top="513" left="677" width="144" height="13" font="7">prepartitioned (no network)</text>
<text top="542" left="500" width="0" height="13" font="7">N</text>
<text top="534" left="500" width="0" height="13" font="7">o</text>
<text top="527" left="500" width="0" height="13" font="7">rma</text>
<text top="507" left="500" width="0" height="13" font="7">liz</text>
<text top="496" left="500" width="0" height="13" font="7">ed</text>
<text top="483" left="500" width="0" height="13" font="7"> En</text>
<text top="467" left="500" width="0" height="13" font="7">ergy </text>
<text top="442" left="500" width="0" height="13" font="7">Con</text>
<text top="422" left="500" width="0" height="13" font="7">su</text>
<text top="410" left="500" width="0" height="13" font="7">mp</text>
<text top="394" left="500" width="0" height="13" font="7">tion</text>
<text top="373" left="500" width="0" height="13" font="7"> </text>
<text top="471" left="544" width="219" height="12" font="10"><b>Energy savings of half cluster over full cluster </b></text>
<text top="485" left="544" width="94" height="12" font="8">18% energy savings </text>
<text top="499" left="544" width="94" height="12" font="8">26% energy savings </text>
<text top="513" left="544" width="90" height="12" font="8">Mostly unchanged </text>
<text top="575" left="475" width="361" height="12" font="3">Figure 5: Network and algorithmic bottlenecks cause non-</text>
<text top="590" left="475" width="359" height="12" font="3">linear scalability in the partition-incompatible joins which</text>
<text top="606" left="475" width="359" height="12" font="3">mean smaller cluster designs consume less energy than larger</text>
<text top="622" left="475" width="361" height="12" font="3">designs. If the query is perfectly partitioned with ideal scalabil-</text>
<text top="637" left="475" width="359" height="12" font="3">ity (Vertica TPC-H Q1, Figure 2(a)), changing the number of</text>
<text top="653" left="475" width="348" height="12" font="3">nodes only affects performance and not energy consumption.</text>
<text top="687" left="475" width="359" height="12" font="3">From these ﬁgures, we observe that the data points now lie on the</text>
<text top="703" left="475" width="359" height="12" font="3">EDP line, indicating that we proportionally trade an X% decrease in</text>
<text top="719" left="475" width="359" height="12" font="3">performance for an X% decrease in energy consumption compared</text>
<text top="734" left="475" width="359" height="12" font="3">to the 8 node case (8N). Similar to the dual shufﬂe cases, here we</text>
<text top="750" left="475" width="269" height="12" font="3">also used various concurrency levels – 1, 2, and 4.</text>
<text top="766" left="489" width="347" height="12" font="3">In Figure 4(a), with one join running, the performance only de-</text>
<text top="782" left="475" width="361" height="12" font="3">creases by 32% when we halve the cluster size from 8 to 4 nodes.</text>
<text top="797" left="475" width="359" height="12" font="3">With 2 and 4 concurrent joins, the performance decreases by around</text>
<text top="813" left="475" width="359" height="12" font="3">30% in Figures 4(b,c) when halving the cluster size. This drop in</text>
<text top="829" left="475" width="360" height="12" font="3">performance causes the 4 node cluster to always save between 25%</text>
<text top="844" left="475" width="358" height="12" font="3">to 30% in energy consumption compared to the full 8 node cluster.</text>
<text top="860" left="489" width="345" height="12" font="3">Compared to the dual shufﬂe join (see Figure 3), the broadcast</text>
<text top="876" left="475" width="359" height="12" font="3">join saves more energy when using 4 nodes rather than 8 nodes</text>
<text top="891" left="475" width="359" height="12" font="3">(data points lie closer to the EDP line in Figure 4). This means that</text>
<text top="907" left="475" width="359" height="12" font="3">the broadcast join suffers a higher degree of non-linear scalability</text>
<text top="923" left="475" width="314" height="12" font="3">than the dual shufﬂe join. This is because broadcasting the</text>
<text top="925" left="793" width="41" height="9" font="6">ORDERS</text>
<text top="938" left="475" width="359" height="12" font="3">table does not get faster with 8 nodes since every node must receive</text>
<text top="954" left="475" width="349" height="12" font="3">roughly the entire table (7/8) over the network (see Section 4.1).</text>
<text top="981" left="475" width="22" height="16" font="1">4.4</text>
<text top="981" left="516" width="81" height="16" font="1">Discussion</text>
<text top="1004" left="489" width="345" height="12" font="3">Figure 5 summarizes our ﬁndings. The energy consumption of the</text>
<text top="1020" left="475" width="359" height="12" font="3">system, when running a 2-way join under different query execution</text>
<text top="1035" left="475" width="361" height="12" font="3">plans, can vary signiﬁcantly under different cluster conﬁgurations.</text>
<text top="1051" left="475" width="361" height="12" font="3">Due to sub-linear performance speedup, when the join is not parti-</text>
<text top="1067" left="475" width="360" height="12" font="3">tion compatible (“shufﬂe both tables” and “broadcast small table”),</text>
</page>
<page number="7" position="absolute" top="0" left="0" height="1188" width="918">
<text top="82" left="94" width="37" height="11" font="8">System</text>
<text top="82" left="180" width="103" height="11" font="8">CPU (cores/threads)</text>
<text top="82" left="300" width="29" height="11" font="8">RAM</text>
<text top="82" left="348" width="78" height="11" font="8">Idle Power (W)</text>
<text top="97" left="94" width="70" height="11" font="8">Workstation A</text>
<text top="97" left="227" width="56" height="11" font="8">i7 920 (4/8)</text>
<text top="97" left="300" width="29" height="11" font="8">12GB</text>
<text top="97" left="403" width="23" height="11" font="8">93W</text>
<text top="110" left="94" width="69" height="11" font="8">Workstation B</text>
<text top="110" left="231" width="52" height="11" font="8">Xeon (4/4)</text>
<text top="110" left="300" width="29" height="11" font="8">24GB</text>
<text top="110" left="403" width="23" height="11" font="8">69W</text>
<text top="124" left="94" width="40" height="11" font="8">Desktop</text>
<text top="124" left="230" width="53" height="11" font="8">Atom (2/4)</text>
<text top="124" left="306" width="23" height="11" font="8">4GB</text>
<text top="124" left="403" width="23" height="11" font="8">28W</text>
<text top="137" left="94" width="45" height="11" font="8">Laptop A</text>
<text top="137" left="202" width="82" height="11" font="8">Core 2 Duo (2/2)</text>
<text top="137" left="306" width="23" height="11" font="8">4GB</text>
<text top="137" left="344" width="81" height="11" font="8">12W (screen off)</text>
<text top="150" left="94" width="45" height="11" font="8">Laptop B</text>
<text top="150" left="218" width="66" height="11" font="8">i7 620m (2/4)</text>
<text top="150" left="306" width="23" height="11" font="8">8GB</text>
<text top="150" left="344" width="81" height="11" font="8">11W (screen off)</text>
<text top="180" left="104" width="308" height="12" font="3">Table 2: Hardware conﬁguration of different systems.</text>
<text top="205" left="81" width="360" height="12" font="3">halving the cluster size does not result in doubling the response time,</text>
<text top="220" left="81" width="361" height="12" font="3">and this is one reason why the energy consumption at the “Half Clus-</text>
<text top="236" left="81" width="360" height="12" font="3">ter” conﬁguration is lower than at “Full Cluster” point. Furthermore,</text>
<text top="252" left="80" width="359" height="12" font="3">we can see that when we use half of the cluster nodes instead of the</text>
<text top="267" left="81" width="359" height="12" font="3">full cluster, the broadcast join method saves more energy and suffers</text>
<text top="283" left="81" width="360" height="12" font="3">less performance penalty than the dual shufﬂe join. This is because,</text>
<text top="299" left="81" width="359" height="12" font="3">for the broadcast join approach, the hash join build phase does not</text>
<text top="314" left="81" width="359" height="12" font="3">get faster with more nodes and so 4 nodes is much more efﬁcient</text>
<text top="330" left="81" width="359" height="12" font="3">than 8 nodes. We can put this result in perspective by comparing</text>
<text top="346" left="81" width="359" height="12" font="3">these results to the partitioned TPC-H Q1 result from Vertica, where</text>
<text top="362" left="81" width="321" height="12" font="3">the energy consumption is ﬂat regardless of the cluster size.</text>
<text top="394" left="81" width="13" height="16" font="1">5.</text>
<text top="394" left="112" width="189" height="16" font="1">ON CLUSTER DESIGN</text>
<text top="417" left="94" width="347" height="12" font="3">Our empirical results using two off-the-shelf DBMSs and a cus-</text>
<text top="433" left="81" width="359" height="12" font="3">tom parallel query execution kernel have shown that a number of key</text>
<text top="448" left="81" width="359" height="12" font="3">bottlenecks cause sub-linear speedup. These diminishing returns</text>
<text top="464" left="81" width="359" height="12" font="3">in performance, when additional cluster nodes are added, are a key</text>
<text top="480" left="81" width="361" height="12" font="3">reason why the energy consumption typically drops when we re-</text>
<text top="496" left="81" width="359" height="12" font="3">duce the cluster size. Observing this reoccurring pattern of “smaller</text>
<text top="511" left="81" width="359" height="12" font="3">clusters can save energy” suggests that the presence of performance</text>
<text top="527" left="81" width="257" height="12" font="3">bottlenecks is a key factor for energy efﬁciency.</text>
<text top="543" left="94" width="345" height="12" font="3">However, we have thus far ignored the other factor for total system</text>
<text top="558" left="81" width="359" height="12" font="3">energy consumption: namely, the power characteristics of a single</text>
<text top="574" left="81" width="359" height="12" font="3">node. As we demonstrate in this section, the hardware conﬁguration</text>
<text top="590" left="80" width="359" height="12" font="3">(and performance capability) of each individual node also plays</text>
<text top="605" left="81" width="359" height="12" font="3">a signiﬁcant role in improving the energy efﬁciency of parallel</text>
<text top="621" left="81" width="359" height="12" font="3">DBMSs, and needs to be considered for energy-efﬁcient cluster</text>
<text top="637" left="81" width="360" height="12" font="3">design. By comparing some representative hardware conﬁgurations,</text>
<text top="652" left="80" width="359" height="12" font="3">we found one of our “Wimpy” laptop conﬁgurations yielded the</text>
<text top="668" left="81" width="360" height="12" font="3">lowest energy consumption in single node experiments. As such,</text>
<text top="684" left="80" width="359" height="12" font="3">we ask the question: Given what we now know about performance</text>
<text top="700" left="81" width="361" height="12" font="3">bottlenecks and energy efﬁciency, what if we introduced these so-</text>
<text top="715" left="81" width="301" height="12" font="3">called “Wimpy” nodes into a parallel database cluster?</text>
<text top="731" left="94" width="347" height="12" font="3">In the remainder of this paper, we explore how query parameters,</text>
<text top="747" left="81" width="359" height="12" font="3">performance bottlenecks, and cluster design are the key factors that</text>
<text top="762" left="80" width="361" height="12" font="3">we should consider if we were to construct an energy-efﬁcient clus-</text>
<text top="778" left="81" width="359" height="12" font="3">ter from scratch. We ﬁrst show that Wimpy nodes consume less</text>
<text top="794" left="81" width="359" height="12" font="3">energy per query than “Beefy” nodes (Section 5.1). Then, using</text>
<text top="809" left="81" width="359" height="12" font="3">P-store we ran parallel hash joins on heterogeneous cluster designs</text>
<text top="825" left="80" width="361" height="12" font="3">(Section 5.2), and used these results to generate and validate a perfor-</text>
<text top="841" left="81" width="359" height="12" font="3">mance/energy consumption model (Sections 5.3). Finally, using this</text>
<text top="856" left="81" width="359" height="12" font="3">model, we explore the effects of some important query and cluster</text>
<text top="872" left="81" width="359" height="12" font="3">parameters (Section 5.4) to produce insights about the characteristics</text>
<text top="888" left="81" width="306" height="12" font="3">of the energy-efﬁcient cluster design space (Section 5.5).</text>
<text top="912" left="81" width="22" height="16" font="1">5.1</text>
<text top="912" left="121" width="291" height="16" font="1">Energy Efﬁciency of Individual Nodes</text>
<text top="935" left="94" width="345" height="12" font="3">In this section we demonstrate that non-server, low-power nodes</text>
<text top="951" left="81" width="359" height="12" font="3">consume signiﬁcantly lower amounts of energy to perform the same</text>
<text top="966" left="81" width="359" height="12" font="3">task as a traditional “Beefy” server nodes. For the rest of the results</text>
<text top="982" left="81" width="359" height="12" font="3">in this paper, we had physical access to the nodes/servers so we</text>
<text top="998" left="81" width="361" height="12" font="3">measured power directly from the outlet using a WattsUp Pro meter.</text>
<text top="1013" left="80" width="359" height="12" font="3">The meter provided a 1Hz sampling frequency with a measurement</text>
<text top="1029" left="81" width="116" height="12" font="3">accuracy of +/- 1.5%.</text>
<text top="1027" left="201" width="4" height="8" font="5">5</text>
<text top="1051" left="82" width="4" height="8" font="5">5</text>
<text top="1054" left="87" width="352" height="11" font="8">We observed that the server CPU utilization/power models from these</text>
<text top="1068" left="81" width="288" height="11" font="8">measurements validate our iLO2-based approach in Table 1.</text>
<text top="246" left="825" width="2" height="10" font="4"> </text>
<text top="109" left="726" width="31" height="9" font="5">Desktop </text>
<text top="131" left="778" width="34" height="9" font="5">Laptop A </text>
<text top="148" left="637" width="33" height="9" font="5">Laptop B </text>
<text top="142" left="549" width="53" height="9" font="5">Workstation A </text>
<text top="93" left="572" width="53" height="9" font="5">Workstation B </text>
<text top="215" left="517" width="5" height="11" font="6">0</text>
<text top="194" left="507" width="16" height="11" font="6">300</text>
<text top="172" left="507" width="16" height="11" font="6">600</text>
<text top="151" left="507" width="16" height="11" font="6">900</text>
<text top="130" left="501" width="21" height="11" font="6">1200</text>
<text top="109" left="501" width="21" height="11" font="6">1500</text>
<text top="88" left="501" width="21" height="11" font="6">1800</text>
<text top="229" left="530" width="5" height="11" font="6">0</text>
<text top="229" left="583" width="11" height="11" font="6">10</text>
<text top="229" left="640" width="11" height="11" font="6">20</text>
<text top="229" left="696" width="11" height="11" font="6">30</text>
<text top="229" left="752" width="11" height="11" font="6">40</text>
<text top="229" left="808" width="11" height="11" font="6">50</text>
<text top="190" left="496" width="0" height="11" font="6">En</text>
<text top="179" left="496" width="0" height="11" font="6">er</text>
<text top="170" left="496" width="0" height="11" font="6">gy</text>
<text top="160" left="496" width="0" height="11" font="6"> Con</text>
<text top="141" left="496" width="0" height="11" font="6">su</text>
<text top="132" left="496" width="0" height="11" font="6">med</text>
<text top="113" left="496" width="0" height="11" font="6"> (</text>
<text top="107" left="496" width="0" height="11" font="6">J)</text>
<text top="101" left="496" width="0" height="11" font="6"> </text>
<text top="241" left="644" width="80" height="11" font="6">Response Time (s) </text>
<text top="149" left="685" width="102" height="10" font="4">Lowest amount of energy </text>
<text top="163" left="685" width="98" height="10" font="4">to perform the hash join </text>
<text top="254" left="489" width="326" height="12" font="3">Figure 6: A hashjoin: 0.1M and 20M tuple (100B) tables.</text>
<text top="292" left="489" width="345" height="12" font="3">We studied ﬁve systems with different power and performance</text>
<text top="307" left="475" width="359" height="12" font="3">characteristics, ranging from low-power, ultra-mobile laptops to</text>
<text top="323" left="475" width="361" height="12" font="3">high-end workstations. Laptops are optimized for power consump-</text>
<text top="339" left="475" width="361" height="12" font="3">tion and are typically equipped with mobile CPUs and SSDs, whereas</text>
<text top="354" left="475" width="361" height="12" font="3">high-end workstations are optimized for performance. The conﬁgu-</text>
<text top="370" left="475" width="320" height="12" font="3">ration and power consumption details are shown in Table 2.</text>
<text top="386" left="489" width="347" height="12" font="3">To assess the energy efﬁciency of these systems, we used an in-</text>
<text top="401" left="475" width="359" height="12" font="3">memory database workload. This workload executes a basic hash</text>
<text top="417" left="475" width="359" height="12" font="3">join operation, and is designed to stress modern CPUs (the hash</text>
<text top="433" left="475" width="359" height="12" font="3">join code is cache-conscious and multi-threaded). Our hash join is</text>
<text top="449" left="475" width="359" height="12" font="3">between a 10MB table (100K cardinality, and 100 byte tuples) and</text>
<text top="464" left="475" width="277" height="12" font="3">a 2GB table (20M cardinality, and 100 byte tuples).</text>
<text top="480" left="489" width="345" height="12" font="3">Figure 6 plots the energy consumed versus the hash join response</text>
<text top="496" left="475" width="359" height="12" font="3">time for the different conﬁgurations. From this ﬁgure, we observe</text>
<text top="511" left="475" width="359" height="12" font="3">that the Laptop B system consumes the lowest energy for processing</text>
<text top="527" left="475" width="359" height="12" font="3">this in-memory hash join. As expected, the high-end workstations</text>
<text top="543" left="475" width="360" height="12" font="3">exhibit the best performance (lowest response time). However,</text>
<text top="558" left="475" width="359" height="12" font="3">the workstations are not the best when we consider the energy</text>
<text top="574" left="475" width="359" height="12" font="3">consumption. The energy consumption of Laptop B is 800 Joules</text>
<text top="590" left="475" width="361" height="12" font="3">while the energy consumption of Workstation A is near 1300 Joules,</text>
<text top="605" left="475" width="359" height="12" font="3">even though it takes signiﬁcantly longer to perform the in-memory</text>
<text top="621" left="475" width="359" height="12" font="3">join on the laptop. As this experiment suggests, low-power systems</text>
<text top="637" left="475" width="359" height="12" font="3">can reduce the average power that they draw more than they reduce</text>
<text top="653" left="475" width="359" height="12" font="3">performance, thereby reducing the energy consumption of running</text>
<text top="668" left="475" width="360" height="12" font="3">a database query. Since “Laptop B” consumed the least energy,</text>
<text top="684" left="475" width="359" height="12" font="3">we use it to represent a “Wimpy” server node when considering</text>
<text top="700" left="475" width="254" height="12" font="3">architectural designs of heterogeneous clusters.</text>
<text top="715" left="489" width="347" height="12" font="3">Combining these results with the scalability and bottleneck obser-</text>
<text top="731" left="475" width="359" height="12" font="3">vations (from Section 4.2), next we explore energy-efﬁcient cluster</text>
<text top="747" left="475" width="361" height="12" font="3">design points, starting with experimental evidence of potential de-</text>
<text top="762" left="475" width="100" height="12" font="3">sign opportunities.</text>
<text top="793" left="475" width="22" height="16" font="1">5.2</text>
<text top="793" left="516" width="238" height="16" font="1">Heterogeneous Clusters Design</text>
<text top="816" left="489" width="345" height="12" font="3">We prototyped two different four node clusters and measured the</text>
<text top="831" left="475" width="359" height="12" font="3">energy efﬁciency for dual shufﬂe hash joins (see Section 4.3), using</text>
<text top="847" left="475" width="359" height="12" font="3">P-store. Each cluster node has a 1Gbs network card and is connected</text>
<text top="863" left="475" width="359" height="12" font="3">through a 10/100/1000 SMCGS5 switch. Node power was measured</text>
<text top="879" left="475" width="359" height="12" font="3">using the WattsUp power meters as described in Section 5.1. The</text>
<text top="894" left="475" width="194" height="12" font="3">cluster speciﬁcations are as follows.</text>
<text top="910" left="489" width="345" height="12" font="3">Beefy Cluster: This cluster has four HP ProLiant SE326M1R2</text>
<text top="926" left="475" width="359" height="12" font="3">servers with dual low-power quad-core Nehalem-class Xeon L5630</text>
<text top="941" left="475" width="359" height="12" font="3">processors. Each node also has 32GB of memory and dual Crucial</text>
<text top="957" left="475" width="359" height="12" font="3">C300 256GB SSDs (only one was used for data storage). During</text>
<text top="973" left="475" width="283" height="12" font="3">our experiments, the average node power was 154W.</text>
<text top="988" left="489" width="345" height="12" font="3">2 Beefy/2 Wimpy: This cluster has two “beefy” nodes from the</text>
<text top="1004" left="475" width="359" height="12" font="3">Beefy cluster above, and two Laptop Bs (from Section 5.1), with</text>
<text top="1020" left="475" width="361" height="12" font="3">i7 620m CPUs, 8GB of memory, and a Crucial C300 256GB SSD.</text>
<text top="1035" left="475" width="326" height="12" font="3">During our experiments, the average laptop power was 37W.</text>
<text top="1051" left="489" width="345" height="12" font="3">Before we continue with the experimental results, there are two</text>
<text top="1067" left="475" width="361" height="12" font="3">important notes to make. First, P-store does not support out-of-</text>
</page>
<page number="8" position="absolute" top="0" left="0" height="1188" width="918">
<text top="87" left="81" width="359" height="12" font="3">memory joins (2-pass joins), and therefore we either run in-memory</text>
<text top="102" left="81" width="359" height="12" font="3">joins across all the nodes (homogeneous execution), or we only</text>
<text top="118" left="81" width="359" height="12" font="3">perform the join on the nodes that have enough memory while the</text>
<text top="134" left="81" width="361" height="12" font="3">other nodes simply scan and ﬁlter data (heterogeneous execution).</text>
<text top="149" left="81" width="359" height="12" font="3">Since energy is a function of time and average power, in-memory</text>
<text top="165" left="81" width="359" height="12" font="3">join processing dramatically reduces the response time (as well as</text>
<text top="181" left="81" width="359" height="12" font="3">maintains high CPU utilization) and hence provides a substantial</text>
<text top="196" left="81" width="359" height="12" font="3">decrease in energy consumption per query. Second, our network has</text>
<text top="212" left="81" width="359" height="12" font="3">a peak capacity of 1Gbps, and therefore is typically the bottleneck</text>
<text top="228" left="81" width="359" height="12" font="3">for non-selective (where a high percentage of input tuples satisfy</text>
<text top="243" left="81" width="359" height="12" font="3">the selection predicates) queries. While a faster network could be</text>
<text top="259" left="81" width="359" height="12" font="3">used, as we discussed in Section 4.1, the network-CPU performance</text>
<text top="275" left="81" width="227" height="12" font="3">gap is likely to persist into the near future.</text>
<text top="291" left="94" width="345" height="12" font="3">Using P-store, we ran the same hash join necessary for TPC-H</text>
<text top="306" left="81" width="88" height="12" font="3">Q3 between the</text>
<text top="308" left="172" width="49" height="9" font="6">LINEITEM</text>
<text top="306" left="226" width="41" height="12" font="3">and the</text>
<text top="308" left="271" width="41" height="9" font="6">ORDERS</text>
<text top="306" left="316" width="123" height="12" font="3">tables (as was done in</text>
<text top="322" left="81" width="359" height="12" font="3">the experiment described in Section 4.3), but with a scale factor</text>
<text top="338" left="81" width="281" height="12" font="3">of 400. The working sets (after projection) for the</text>
<text top="340" left="366" width="49" height="9" font="6">LINEITEM</text>
<text top="338" left="420" width="20" height="12" font="3">and</text>
<text top="353" left="81" width="17" height="12" font="3">the</text>
<text top="355" left="101" width="41" height="9" font="6">ORDERS</text>
<text top="353" left="146" width="293" height="12" font="3">tables are 48GB and 12GB respectively. We warmed</text>
<text top="369" left="81" width="361" height="12" font="3">our memory cache with as much of the working set as possible.</text>
<text top="385" left="80" width="359" height="12" font="3">The hash join is partition-incompatible on both the tables just as in</text>
<text top="400" left="81" width="359" height="12" font="3">Section 4.3 (i.e., dual shufﬂe is needed). We varied the selectivity</text>
<text top="416" left="81" width="34" height="12" font="3">on the</text>
<text top="418" left="119" width="49" height="9" font="6">LINEITEM</text>
<text top="416" left="172" width="222" height="12" font="3">table to 1%, 10%, 50%, and 100%. The</text>
<text top="418" left="398" width="41" height="9" font="6">ORDERS</text>
<text top="432" left="81" width="359" height="12" font="3">table had a selectivity of 1% and 10%. This gave us 8 different hash</text>
<text top="447" left="81" width="84" height="12" font="3">join workloads.</text>
<text top="463" left="94" width="345" height="12" font="3">The Beefy cluster can run all of the 8 hash join workloads by ﬁrst</text>
<text top="479" left="81" width="75" height="12" font="3">repartitioning</text>
<text top="481" left="160" width="41" height="9" font="6">ORDERS</text>
<text top="479" left="205" width="84" height="12" font="3">on the join key</text>
<text top="481" left="294" width="68" height="9" font="6">O ORDERKEY</text>
<text top="479" left="362" width="77" height="12" font="3">, and building</text>
<text top="494" left="81" width="359" height="12" font="3">the hash table on each node as tuples arrive over the network. The</text>
<text top="512" left="81" width="49" height="9" font="6">LINEITEM</text>
<text top="510" left="134" width="182" height="12" font="3">table is then repartitioned on the</text>
<text top="512" left="321" width="67" height="9" font="6">L ORDERKEY</text>
<text top="510" left="392" width="49" height="12" font="3">attribute,</text>
<text top="526" left="81" width="359" height="12" font="3">and each node probes their hash table on-the-ﬂy as tuples arrive</text>
<text top="542" left="81" width="359" height="12" font="3">over the network. The beefy nodes have enough memory to cache</text>
<text top="557" left="81" width="314" height="12" font="3">the working set and build the in-memory hash table for the</text>
<text top="559" left="398" width="41" height="9" font="6">ORDERS</text>
<text top="573" left="81" width="164" height="12" font="3">table for both the 1% and 10%</text>
<text top="575" left="248" width="41" height="9" font="6">ORDERS</text>
<text top="573" left="293" width="96" height="12" font="3">selectivity values.</text>
<text top="589" left="94" width="346" height="12" font="3">The hash join parameters cause the need for the 2 Beefy/2 Wimpy</text>
<text top="604" left="81" width="361" height="12" font="3">cluster to alternate between homogeneous and heterogeneous execu-</text>
<text top="620" left="81" width="359" height="12" font="3">tion. The wimpy nodes only have 8GB of memory, and hence can</text>
<text top="636" left="81" width="108" height="12" font="3">only cache the 3GB</text>
<text top="638" left="192" width="41" height="9" font="6">ORDERS</text>
<text top="636" left="237" width="203" height="12" font="3">table partition and some of the 12GB</text>
<text top="653" left="81" width="49" height="9" font="6">LINEITEM</text>
<text top="651" left="133" width="306" height="12" font="3">table partition. Thus, for the 2 Beefy/2 Wimpy cluster, a</text>
<text top="667" left="80" width="95" height="12" font="3">1% selectivity on</text>
<text top="669" left="178" width="41" height="9" font="6">ORDERS</text>
<text top="667" left="223" width="216" height="12" font="3">allows the hash table to ﬁt in the laptop</text>
<text top="683" left="81" width="359" height="12" font="3">memory, and we can execute the join in the same way as the Beefy</text>
<text top="698" left="81" width="359" height="12" font="3">cluster – homogeneous execution. However, if the selectivity on</text>
<text top="716" left="81" width="41" height="9" font="6">ORDERS</text>
<text top="714" left="126" width="316" height="12" font="3">is low (i.e., the predicate matches ≥ 10% of the input tu-</text>
<text top="730" left="81" width="359" height="12" font="3">ples), then we can only leverage the wimpy nodes to scan and ﬁlter</text>
<text top="746" left="81" width="359" height="12" font="3">their partitions, and have them send all the qualifying data to the</text>
<text top="761" left="81" width="359" height="12" font="3">beefy nodes where the actual hash tables are built – heterogeneous</text>
<text top="777" left="81" width="51" height="12" font="3">execution</text>
<text top="777" left="132" width="254" height="12" font="3">. Similarly, the wimpy nodes scan and ﬁlter the</text>
<text top="779" left="390" width="49" height="9" font="6">LINEITEM</text>
<text top="793" left="80" width="308" height="12" font="3">(probe) tuples and repartition the data to the beefy nodes.</text>
<text top="808" left="94" width="345" height="12" font="3">Therefore, in our study, we consider two “wimpy” aspects of our</text>
<text top="824" left="81" width="361" height="12" font="3">mobile nodes: (1) their lower power and performance due to low-</text>
<text top="840" left="81" width="359" height="12" font="3">end CPUs, and (2) their lower memory capacity which constrains</text>
<text top="856" left="81" width="252" height="12" font="3">the execution strategies for evaluating a query.</text>
<text top="889" left="85" width="33" height="14" font="9">5.2.1</text>
<text top="889" left="134" width="303" height="14" font="9">Small Hash Tables – Homogeneous Execution</text>
<text top="910" left="94" width="346" height="12" font="3">Homogeneous parallel execution of a hash join requires a highly</text>
<text top="926" left="81" width="213" height="12" font="3">selective predicate that produces a small</text>
<text top="928" left="297" width="41" height="9" font="6">ORDERS</text>
<text top="926" left="341" width="98" height="12" font="3">hash table that can</text>
<text top="941" left="81" width="359" height="12" font="3">be stored in memory on all the nodes. We measured the response</text>
<text top="957" left="81" width="359" height="12" font="3">time (seconds) and the energy consumed (Joules) of both our cluster</text>
<text top="973" left="81" width="361" height="12" font="3">designs when running the hash join where the selectivity of the predi-</text>
<text top="988" left="81" width="56" height="12" font="3">cate on the</text>
<text top="990" left="139" width="41" height="9" font="6">ORDERS</text>
<text top="988" left="183" width="256" height="12" font="3">table was 1%. Figure 7 (a) shows the comparison</text>
<text top="1004" left="81" width="359" height="12" font="3">of the all Beefy (AB) cluster to the 2 Beefy/2 Wimpy (BW) cluster</text>
<text top="1020" left="80" width="92" height="12" font="3">when we vary the</text>
<text top="1022" left="175" width="49" height="9" font="6">LINEITEM</text>
<text top="1020" left="227" width="212" height="12" font="3">table selectivity (L1,L10,L50,L100) for</text>
<text top="1035" left="81" width="118" height="12" font="3">a 1% selectivity on the</text>
<text top="1037" left="202" width="41" height="9" font="6">ORDERS</text>
<text top="1035" left="246" width="195" height="12" font="3">table (O1). We notice that for the 1%</text>
<text top="1051" left="81" width="48" height="12" font="3">and 10%</text>
<text top="1053" left="132" width="49" height="9" font="6">LINEITEM</text>
<text top="1051" left="185" width="255" height="12" font="3">selectivity cases (the circle and square markers</text>
<text top="1067" left="81" width="359" height="12" font="3">respectively), the AB cluster consumed less energy than the BW</text>
<text top="278" left="834" width="2" height="11" font="6"> </text>
<text top="92" left="755" width="51" height="10" font="4">AB-O1/L100 </text>
<text top="149" left="646" width="46" height="10" font="4">AB-O1/L50 </text>
<text top="208" left="536" width="46" height="10" font="4">AB-O1/L10 </text>
<text top="237" left="541" width="41" height="10" font="4">AB-O1/L1 </text>
<text top="147" left="779" width="54" height="10" font="4">BW-O1/L100 </text>
<text top="196" left="659" width="49" height="10" font="4">BW-O1/L50 </text>
<text top="210" left="622" width="49" height="10" font="4">BW-O1/L10 </text>
<text top="224" left="587" width="44" height="10" font="4">BW-O1/L1 </text>
<text top="241" left="506" width="6" height="12" font="8">0</text>
<text top="201" left="499" width="12" height="12" font="8">25</text>
<text top="161" left="499" width="12" height="12" font="8">50</text>
<text top="121" left="499" width="12" height="12" font="8">75</text>
<text top="81" left="493" width="18" height="12" font="8">100</text>
<text top="256" left="520" width="6" height="12" font="8">0</text>
<text top="256" left="601" width="12" height="12" font="8">50</text>
<text top="256" left="683" width="18" height="12" font="8">100</text>
<text top="256" left="768" width="18" height="12" font="8">150</text>
<text top="254" left="488" width="0" height="12" font="8">En</text>
<text top="242" left="488" width="0" height="12" font="8">er</text>
<text top="232" left="488" width="0" height="12" font="8">gy</text>
<text top="221" left="488" width="0" height="12" font="8"> Con</text>
<text top="199" left="488" width="0" height="12" font="8">su</text>
<text top="188" left="488" width="0" height="12" font="8">med</text>
<text top="166" left="488" width="0" height="12" font="8"> b</text>
<text top="157" left="488" width="0" height="12" font="8">y </text>
<text top="149" left="488" width="0" height="12" font="8">Sy</text>
<text top="139" left="488" width="0" height="12" font="8">st</text>
<text top="130" left="488" width="0" height="12" font="8">em</text>
<text top="115" left="488" width="0" height="12" font="8"> (</text>
<text top="109" left="488" width="0" height="12" font="8">kJ)</text>
<text top="96" left="488" width="0" height="12" font="8"> </text>
<text top="273" left="606" width="112" height="12" font="8">Join Response Time (s) </text>
<text top="293" left="574" width="160" height="12" font="3">(a) all nodes build hash tables</text>
<text top="513" left="834" width="2" height="11" font="6"> </text>
<text top="332" left="685" width="56" height="10" font="4">AB-O10/L100 </text>
<text top="404" left="600" width="51" height="10" font="4">AB-O10/L50 </text>
<text top="436" left="534" width="51" height="10" font="4">AB-O10/L10 </text>
<text top="468" left="526" width="44" height="10" font="4">AB-010/L1 </text>
<text top="344" left="762" width="59" height="10" font="4">BW-O10/L100 </text>
<text top="407" left="663" width="54" height="10" font="4">BW-O10/L50 </text>
<text top="457" left="568" width="54" height="10" font="4">BW-O10/L10 </text>
<text top="437" left="610" width="49" height="10" font="4">BW-O10/L1 </text>
<text top="476" left="506" width="6" height="12" font="8">0</text>
<text top="444" left="499" width="12" height="12" font="8">25</text>
<text top="412" left="499" width="12" height="12" font="8">50</text>
<text top="380" left="499" width="12" height="12" font="8">75</text>
<text top="348" left="493" width="18" height="12" font="8">100</text>
<text top="317" left="493" width="18" height="12" font="8">125</text>
<text top="491" left="520" width="6" height="12" font="8">0</text>
<text top="491" left="566" width="12" height="12" font="8">50</text>
<text top="491" left="612" width="18" height="12" font="8">100</text>
<text top="491" left="662" width="18" height="12" font="8">150</text>
<text top="491" left="711" width="18" height="12" font="8">200</text>
<text top="491" left="760" width="18" height="12" font="8">250</text>
<text top="491" left="810" width="18" height="12" font="8">300</text>
<text top="489" left="488" width="0" height="12" font="8">En</text>
<text top="476" left="488" width="0" height="12" font="8">er</text>
<text top="466" left="488" width="0" height="12" font="8">gy</text>
<text top="455" left="488" width="0" height="12" font="8"> Con</text>
<text top="434" left="488" width="0" height="12" font="8">su</text>
<text top="423" left="488" width="0" height="12" font="8">med</text>
<text top="401" left="488" width="0" height="12" font="8"> b</text>
<text top="392" left="488" width="0" height="12" font="8">y </text>
<text top="384" left="488" width="0" height="12" font="8">Sy</text>
<text top="373" left="488" width="0" height="12" font="8">st</text>
<text top="365" left="488" width="0" height="12" font="8">em</text>
<text top="349" left="488" width="0" height="12" font="8"> (</text>
<text top="343" left="488" width="0" height="12" font="8">kJ)</text>
<text top="330" left="488" width="0" height="12" font="8"> </text>
<text top="508" left="606" width="112" height="12" font="8">Join Response Time (s) </text>
<text top="528" left="485" width="338" height="12" font="3">(b) beefy nodes build hash tables, wimpy nodes scan/ﬁlter data</text>
<text top="549" left="475" width="280" height="12" font="3">Figure 7: P-store dual-shufﬂe hash join between</text>
<text top="551" left="759" width="53" height="9" font="6">LINEITEM</text>
<text top="549" left="817" width="18" height="12" font="3">(L)</text>
<text top="565" left="475" width="22" height="12" font="3">and</text>
<text top="567" left="501" width="44" height="9" font="6">ORDERS</text>
<text top="565" left="548" width="286" height="12" font="3">(O) tables at various selectivities (e.g., O10 means</text>
<text top="581" left="474" width="129" height="12" font="3">10% selectivity on the</text>
<text top="583" left="607" width="44" height="9" font="6">ORDERS</text>
<text top="581" left="655" width="181" height="12" font="3">table). Empirical hash join en-</text>
<text top="596" left="475" width="359" height="12" font="3">ergy efﬁciency of the all Beefy (AB) versus the 2 Beefy/2 Wimpy</text>
<text top="612" left="475" width="82" height="12" font="3">clusters (BW).</text>
<text top="640" left="475" width="164" height="12" font="3">cluster. However, for the 50%</text>
<text top="642" left="642" width="49" height="9" font="6">LINEITEM</text>
<text top="640" left="695" width="141" height="12" font="3">selectivity case (triangle),</text>
<text top="655" left="475" width="359" height="12" font="3">the BW cluster saves 43% of the energy consumed over the AB</text>
<text top="671" left="475" width="97" height="12" font="3">cluster. When the</text>
<text top="673" left="576" width="49" height="9" font="6">LINEITEM</text>
<text top="671" left="629" width="205" height="12" font="3">table has no predicate (diamond), the</text>
<text top="687" left="475" width="354" height="12" font="3">BW cluster saves 56% of the energy consumed by the AB cluster.</text>
<text top="702" left="489" width="345" height="12" font="3">Here we illustrate one of the bottlenecks we discussed above in</text>
<text top="718" left="475" width="260" height="12" font="3">Section 4: namely the network/disk. With 100%</text>
<text top="720" left="738" width="49" height="9" font="6">LINEITEM</text>
<text top="718" left="791" width="45" height="12" font="3">selectiv-</text>
<text top="734" left="475" width="359" height="12" font="3">ity, the bottleneck is network bandwidth: the bottleneck response</text>
<text top="750" left="475" width="359" height="12" font="3">time of the AB cluster is 155s, while the response time of the BW</text>
<text top="765" left="475" width="142" height="12" font="3">cluster is 168s. With 1%</text>
<text top="767" left="622" width="49" height="9" font="6">LINEITEM</text>
<text top="765" left="676" width="158" height="12" font="3">selectivity, we are bound by</text>
<text top="781" left="475" width="359" height="12" font="3">the scan/ﬁlter limits of the wimpy, mobile nodes: the AB cluster</text>
<text top="797" left="475" width="347" height="12" font="3">ﬁnishes executing this join in 8s while the BW cluster takes 50s.</text>
<text top="826" left="479" width="33" height="14" font="9">5.2.2</text>
<text top="826" left="529" width="305" height="14" font="9">Large Hash Tables – Heterogeneous Execution</text>
<text top="847" left="489" width="345" height="12" font="3">As mentioned above, in the cases where the hash tables are larger</text>
<text top="863" left="475" width="359" height="12" font="3">than the available memory in the wimpy, mobile nodes, the wimpy</text>
<text top="879" left="475" width="359" height="12" font="3">nodes of the mixed node cluster simply scan and ﬁlter the data for</text>
<text top="894" left="475" width="359" height="12" font="3">the Beefy nodes. Figure 7 (b) shows the comparison of the AB</text>
<text top="910" left="475" width="359" height="12" font="3">cluster to the BW cluster in terms of energy efﬁciency, similar to</text>
<text top="926" left="475" width="257" height="12" font="3">Figure 7 (a). Like our previous result for the 1%</text>
<text top="928" left="735" width="41" height="9" font="6">ORDERS</text>
<text top="926" left="780" width="54" height="12" font="3">selectivity</text>
<text top="941" left="475" width="359" height="12" font="3">case, the BW cluster consumes less energy than the AB cluster</text>
<text top="957" left="475" width="45" height="12" font="3">at a low</text>
<text top="959" left="525" width="49" height="9" font="6">LINEITEM</text>
<text top="957" left="579" width="256" height="12" font="3">selectivity (50% and 100%). The BW cluster</text>
<text top="973" left="475" width="359" height="12" font="3">consumes 7% and 13% less energy than the AB cluster at 50% and</text>
<text top="988" left="474" width="31" height="12" font="3">100%</text>
<text top="990" left="509" width="49" height="9" font="6">LINEITEM</text>
<text top="988" left="562" width="125" height="12" font="3">selectivity respectively.</text>
<text top="1004" left="489" width="345" height="12" font="3">Thus, we see that in both situations, a heterogeneous cluster</text>
<text top="1020" left="475" width="359" height="12" font="3">can offer improved energy efﬁciency at reduced performance. To</text>
<text top="1035" left="475" width="359" height="12" font="3">further explore the full spectrum of available cluster and workload</text>
<text top="1051" left="475" width="359" height="12" font="3">parameters that are important for cluster design, we built a model</text>
<text top="1067" left="475" width="359" height="12" font="3">of P-store’s performance and energy consumption. Our model is</text>
</page>
<page number="9" position="absolute" top="0" left="0" height="1188" width="918">
	<fontspec id="11" size="5" family="Times" color="#000000"/>
<text top="84" left="84" width="7" height="9" font="6">T</text>
<text top="88" left="91" width="14" height="7" font="11">bld</text>
<text top="84" left="109" width="85" height="9" font="6">Build phase time (s)</text>
<text top="84" left="248" width="7" height="9" font="6">T</text>
<text top="88" left="256" width="16" height="7" font="11">prb</text>
<text top="84" left="275" width="86" height="9" font="6">Probe phase time (s)</text>
<text top="96" left="82" width="9" height="9" font="6">E</text>
<text top="100" left="91" width="14" height="7" font="11">bld</text>
<text top="96" left="109" width="94" height="9" font="6">Build phase energy (J)</text>
<text top="96" left="247" width="9" height="9" font="6">E</text>
<text top="100" left="256" width="16" height="7" font="11">prb</text>
<text top="96" left="275" width="95" height="9" font="6">Probe phase energy (J)</text>
<text top="108" left="87" width="9" height="9" font="6">N</text>
<text top="111" left="97" width="8" height="7" font="11">B</text>
<text top="108" left="109" width="60" height="9" font="6"># Beefy nodes</text>
<text top="108" left="251" width="9" height="9" font="6">N</text>
<text top="111" left="260" width="10" height="7" font="11">W</text>
<text top="108" left="275" width="66" height="9" font="6"># Wimpy nodes</text>
<text top="120" left="85" width="11" height="9" font="6">M</text>
<text top="123" left="97" width="8" height="7" font="11">B</text>
<text top="120" left="109" width="107" height="9" font="6">Beefy memory size (MB)</text>
<text top="120" left="249" width="11" height="9" font="6">M</text>
<text top="123" left="260" width="10" height="7" font="11">W</text>
<text top="120" left="275" width="113" height="9" font="6">Wimpy memory size (MB)</text>
<text top="132" left="99" width="108" height="10" font="6">I Disk bandwidth (MB/s)</text>
<text top="132" left="264" width="127" height="10" font="6">L Network bandwidth (MB/s)</text>
<text top="144" left="86" width="155" height="10" font="6">Bld Hash join build table size (MB)</text>
<text top="144" left="251" width="158" height="10" font="6">P rb Hash join probe table size (MB)</text>
<text top="156" left="84" width="7" height="9" font="6">S</text>
<text top="159" left="91" width="14" height="7" font="11">bld</text>
<text top="156" left="109" width="147" height="9" font="6">Build table predicate selectivity S</text>
<text top="159" left="256" width="16" height="7" font="11">prb</text>
<text top="156" left="275" width="134" height="9" font="6">Probe table predicate selectivity</text>
<text top="168" left="129" width="9" height="9" font="6">R</text>
<text top="172" left="138" width="25" height="7" font="11">W bld</text>
<text top="168" left="167" width="239" height="9" font="6">Rate at which a Wimpy node builds its hash table (MB/s)</text>
<text top="180" left="132" width="9" height="9" font="6">R</text>
<text top="184" left="141" width="22" height="7" font="11">Bbld</text>
<text top="180" left="167" width="233" height="9" font="6">Rate at which a Beefy node builds its hash table (MB/s)</text>
<text top="192" left="130" width="8" height="9" font="6">U</text>
<text top="196" left="138" width="25" height="7" font="11">W bld</text>
<text top="192" left="167" width="219" height="9" font="6">Wimpy node CPU bandwidth during the build phase</text>
<text top="204" left="133" width="8" height="9" font="6">U</text>
<text top="208" left="141" width="22" height="7" font="11">Bbld</text>
<text top="204" left="167" width="213" height="9" font="6">Beefy node CPU bandwidth during the build phase</text>
<text top="216" left="128" width="9" height="9" font="6">R</text>
<text top="220" left="137" width="26" height="7" font="11">W prb</text>
<text top="216" left="167" width="250" height="9" font="6">Rate at which the Wimpy node probes its hash table (MB/s)</text>
<text top="228" left="130" width="9" height="9" font="6">R</text>
<text top="232" left="139" width="24" height="7" font="11">Bprb</text>
<text top="228" left="167" width="244" height="9" font="6">Rate at which the Beefy node probes its hash table (MB/s)</text>
<text top="240" left="128" width="8" height="9" font="6">U</text>
<text top="244" left="137" width="26" height="7" font="11">W prb</text>
<text top="240" left="167" width="222" height="9" font="6">Wimpy node CPU bandwidth during the probe phase</text>
<text top="252" left="131" width="8" height="9" font="6">U</text>
<text top="256" left="139" width="24" height="7" font="11">Bprb</text>
<text top="252" left="167" width="216" height="9" font="6">Beefy node CPU bandwidth during the probe phase</text>
<text top="264" left="107" width="9" height="9" font="6">C</text>
<text top="267" left="115" width="8" height="7" font="11">B</text>
<text top="264" left="127" width="255" height="10" font="6">= 5037 Maximum CPU bandwidth of a Beefy node (MB/s)</text>
<text top="276" left="104" width="9" height="9" font="6">C</text>
<text top="279" left="112" width="10" height="7" font="11">W</text>
<text top="276" left="127" width="261" height="10" font="6">= 1129 Maximum CPU bandwidth of a Wimpy node (MB/s)</text>
<text top="288" left="108" width="9" height="9" font="6">G</text>
<text top="291" left="117" width="8" height="7" font="11">B</text>
<text top="288" left="130" width="219" height="10" font="6">= 0.25 Beefy CPU utilization constants for P-store</text>
<text top="300" left="105" width="9" height="9" font="6">G</text>
<text top="303" left="115" width="10" height="7" font="11">W</text>
<text top="300" left="130" width="224" height="10" font="6">= 0.13 Wimpy CPU utilization constants for P-store</text>
<text top="313" left="86" width="6" height="9" font="6">f</text>
<text top="317" left="92" width="8" height="7" font="11">B</text>
<text top="313" left="101" width="111" height="9" font="6">(c) = 130.03 × (100c)</text>
<text top="311" left="212" width="29" height="7" font="11">0.2369</text>
<text top="313" left="245" width="165" height="9" font="6">(c=CPU util.) Beefy node power model</text>
<text top="326" left="84" width="6" height="9" font="6">f</text>
<text top="330" left="90" width="10" height="7" font="11">W</text>
<text top="326" left="101" width="111" height="9" font="6">(c) = 10.994 × (100c)</text>
<text top="324" left="212" width="29" height="7" font="11">0.2875</text>
<text top="326" left="245" width="171" height="9" font="6">(c=CPU util.) Wimpy node power model</text>
<text top="338" left="92" width="38" height="9" font="6">H = M</text>
<text top="342" left="130" width="10" height="7" font="11">W</text>
<text top="337" left="145" width="68" height="10" font="6">≥ (Bld ∗ Bld</text>
<text top="342" left="213" width="14" height="7" font="11">sel</text>
<text top="338" left="228" width="25" height="9" font="6">)/(N</text>
<text top="342" left="252" width="8" height="7" font="11">B</text>
<text top="338" left="264" width="21" height="9" font="6">+ N</text>
<text top="342" left="285" width="10" height="7" font="11">W</text>
<text top="338" left="297" width="140" height="10" font="6">) Wimpy can build the hash table</text>
<text top="359" left="168" width="185" height="12" font="3">Table 3: List of Model Variables</text>
<text top="387" left="80" width="359" height="12" font="3">validated against these results in Figure 7. This model enables us to</text>
<text top="402" left="81" width="359" height="12" font="3">freely explore the cluster and query parameters that are important</text>
<text top="418" left="81" width="97" height="12" font="3">for cluster design.</text>
<text top="445" left="81" width="22" height="16" font="1">5.3</text>
<text top="445" left="121" width="258" height="16" font="1">Modeling P-store and Bottlenecks</text>
<text top="468" left="94" width="345" height="12" font="3">Our model of P-store’s performance and energy consumption</text>
<text top="484" left="81" width="359" height="12" font="3">behavior is aimed at understanding the nature of query parameters</text>
<text top="499" left="81" width="359" height="12" font="3">and scalability bottlenecks affecting performance and system energy</text>
<text top="515" left="81" width="361" height="12" font="3">consumption. The model predicts the performance and energy con-</text>
<text top="531" left="81" width="359" height="12" font="3">sumption of various different ways to execute a hash join. The input</text>
<text top="547" left="81" width="263" height="12" font="3">parameters that we consider are listed in Table 3.</text>
<text top="562" left="94" width="345" height="12" font="3">From Table 3, note that our model makes a few simplifying</text>
<text top="578" left="81" width="359" height="12" font="3">assumptions. First, the disk conﬁguration for both the Wimpy nodes</text>
<text top="594" left="81" width="361" height="12" font="3">and the Beefy nodes are the same and have the same bandwidth.</text>
<text top="609" left="81" width="359" height="12" font="3">Second, the same uniformity assumption has been made about the</text>
<text top="625" left="81" width="359" height="12" font="3">network capability of both node types. These assumptions matched</text>
<text top="641" left="81" width="359" height="12" font="3">our hardware setup, but we can easily extend our model to account</text>
<text top="656" left="81" width="254" height="12" font="3">for separate Wimpy and Beefy I/O bandwidths.</text>
<text top="672" left="94" width="345" height="12" font="3">First, let us look at when the Wimpy nodes can build hash tables</text>
<text top="688" left="81" width="359" height="12" font="3">because they have enough memory to hold the hash tables (i.e., we</text>
<text top="703" left="81" width="359" height="12" font="3">do not have to run a 2-pass hash join). This is the case when H is</text>
<text top="719" left="81" width="97" height="12" font="3">true (see Table 3).</text>
<text top="735" left="94" width="345" height="12" font="3">Homogeneous Execution: In this case, all the nodes execute the</text>
<text top="750" left="81" width="359" height="12" font="3">same operator tree. We can divide the hash join into the build phase</text>
<text top="766" left="81" width="359" height="12" font="3">and the probe phase. During the build phase, we are either bound</text>
<text top="782" left="81" width="359" height="12" font="3">by (1) the effects of the disk bandwidth and the selectivity on the</text>
<text top="798" left="81" width="229" height="12" font="3">build table ; or (2) the network bandwidth:</text>
<text top="833" left="117" width="9" height="9" font="6">R</text>
<text top="837" left="126" width="22" height="7" font="11">Bbld</text>
<text top="833" left="152" width="22" height="9" font="6">= R</text>
<text top="837" left="173" width="25" height="7" font="11">W bld</text>
<text top="833" left="202" width="9" height="9" font="6">=</text>
<text top="818" left="215" width="11" height="5" font="6"></text>
<text top="828" left="215" width="11" height="5" font="6"></text>
<text top="847" left="215" width="11" height="5" font="6"></text>
<text top="820" left="292" width="13" height="9" font="6">IS</text>
<text top="823" left="305" width="14" height="7" font="11">bld</text>
<text top="820" left="333" width="22" height="9" font="6">if IS</text>
<text top="823" left="356" width="14" height="7" font="11">bld</text>
<text top="820" left="374" width="21" height="9" font="6">&lt; L</text>
<text top="831" left="240" width="14" height="9" font="6">(N</text>
<text top="835" left="254" width="8" height="7" font="11">B</text>
<text top="831" left="266" width="21" height="9" font="6">+ N</text>
<text top="835" left="287" width="10" height="7" font="11">W</text>
<text top="831" left="299" width="13" height="9" font="6">)L</text>
<text top="847" left="234" width="14" height="9" font="6">(N</text>
<text top="850" left="248" width="8" height="7" font="11">B</text>
<text top="847" left="260" width="21" height="9" font="6">+ N</text>
<text top="850" left="281" width="10" height="7" font="11">W</text>
<text top="846" left="295" width="23" height="10" font="6">− 1)</text>
<text top="839" left="333" width="41" height="9" font="6">otherwise</text>
<text top="863" left="94" width="120" height="12" font="3">These two variables R</text>
<text top="868" left="214" width="23" height="8" font="5">Bbld</text>
<text top="863" left="241" width="33" height="12" font="3">and R</text>
<text top="868" left="274" width="26" height="8" font="5">W bld</text>
<text top="863" left="305" width="135" height="12" font="3">give us the rates at which</text>
<text top="879" left="81" width="359" height="12" font="3">the build phase is proceeding (in MB/s). We also need to model the</text>
<text top="895" left="81" width="359" height="12" font="3">build phase CPU utilization to determine the power drawn by each</text>
<text top="910" left="81" width="359" height="12" font="3">node type. This is done by determining the amount of data that the</text>
<text top="926" left="81" width="335" height="12" font="3">Beefy CPU and the Wimpy CPU is processing per second, U</text>
<text top="930" left="416" width="23" height="8" font="5">Bbld</text>
<text top="942" left="81" width="32" height="12" font="3">and U</text>
<text top="946" left="112" width="26" height="8" font="5">W bld</text>
<text top="942" left="139" width="300" height="12" font="3">, and then dividing each of these values by the maximum</text>
<text top="957" left="81" width="166" height="12" font="3">measured rates for the CPU, C</text>
<text top="962" left="247" width="8" height="8" font="5">B</text>
<text top="957" left="259" width="33" height="12" font="3">and C</text>
<text top="962" left="292" width="10" height="8" font="5">W</text>
<text top="957" left="308" width="131" height="12" font="3">respectively. Finally, we</text>
<text top="973" left="81" width="359" height="12" font="3">need to add CPU constants that are inherent to P-store, which are</text>
<text top="988" left="81" width="10" height="12" font="3">E</text>
<text top="993" left="91" width="8" height="8" font="5">B</text>
<text top="989" left="105" width="34" height="12" font="3">and E</text>
<text top="993" left="139" width="10" height="8" font="5">W</text>
<text top="989" left="156" width="284" height="12" font="3">for the Beefy and Wimpy nodes respectively. This</text>
<text top="1004" left="81" width="326" height="12" font="3">CPU utilization is the input for our server power functions, f</text>
<text top="1009" left="407" width="8" height="8" font="5">B</text>
<text top="1004" left="420" width="19" height="12" font="3">and</text>
<text top="1020" left="81" width="7" height="12" font="3">f</text>
<text top="1024" left="87" width="10" height="8" font="5">W</text>
<text top="1020" left="100" width="322" height="12" font="3">, for the Beefy and Wimpy nodes respectively (see Table 3).</text>
<text top="1058" left="99" width="8" height="9" font="6">U</text>
<text top="1062" left="107" width="22" height="7" font="11">Bbld</text>
<text top="1058" left="134" width="21" height="9" font="6">= U</text>
<text top="1062" left="154" width="25" height="7" font="11">W bld</text>
<text top="1058" left="183" width="9" height="9" font="6">=</text>
<text top="1044" left="196" width="11" height="5" font="6"></text>
<text top="1053" left="196" width="11" height="5" font="6"></text>
<text top="1072" left="196" width="11" height="5" font="6"></text>
<text top="1045" left="331" width="5" height="9" font="6">I</text>
<text top="1045" left="351" width="22" height="9" font="6">if IS</text>
<text top="1049" left="373" width="14" height="7" font="11">bld</text>
<text top="1045" left="391" width="21" height="9" font="6">&lt; L</text>
<text top="1057" left="221" width="14" height="9" font="6">(N</text>
<text top="1060" left="235" width="8" height="7" font="11">B</text>
<text top="1057" left="247" width="21" height="9" font="6">+ N</text>
<text top="1060" left="268" width="10" height="7" font="11">W</text>
<text top="1057" left="280" width="13" height="9" font="6">)L</text>
<text top="1072" left="215" width="14" height="9" font="6">(N</text>
<text top="1076" left="229" width="8" height="7" font="11">B</text>
<text top="1072" left="241" width="21" height="9" font="6">+ N</text>
<text top="1076" left="262" width="10" height="7" font="11">W</text>
<text top="1071" left="276" width="23" height="10" font="6">− 1)</text>
<text top="1064" left="303" width="19" height="10" font="6">÷ S</text>
<text top="1068" left="323" width="14" height="7" font="11">bld</text>
<text top="1064" left="351" width="41" height="9" font="6">otherwise</text>
<text top="260" left="658" width="2" height="10" font="4"> </text>
<text top="221" left="487" width="17" height="10" font="4">0.00</text>
<text top="191" left="487" width="17" height="10" font="4">0.25</text>
<text top="161" left="487" width="17" height="10" font="4">0.50</text>
<text top="132" left="487" width="17" height="10" font="4">0.75</text>
<text top="102" left="487" width="17" height="10" font="4">1.00</text>
<text top="233" left="520" width="21" height="9" font="4">O 1%,</text>
<text top="244" left="522" width="17" height="9" font="4">L 1%</text>
<text top="233" left="555" width="21" height="9" font="4">O 1%,</text>
<text top="244" left="555" width="22" height="9" font="4">L 10%</text>
<text top="233" left="591" width="21" height="9" font="4">O 1%,</text>
<text top="244" left="591" width="22" height="9" font="4">L 50%</text>
<text top="233" left="626" width="22" height="9" font="4">O 1%,</text>
<text top="244" left="624" width="26" height="9" font="4">L 100%</text>
<text top="221" left="483" width="0" height="10" font="6">N</text>
<text top="214" left="483" width="0" height="10" font="6">o</text>
<text top="209" left="483" width="0" height="10" font="6">rma</text>
<text top="192" left="483" width="0" height="10" font="6">liz</text>
<text top="183" left="483" width="0" height="10" font="6">ed</text>
<text top="173" left="483" width="0" height="10" font="6"> R</text>
<text top="165" left="483" width="0" height="10" font="6">esp</text>
<text top="151" left="483" width="0" height="10" font="6">o</text>
<text top="145" left="483" width="0" height="10" font="6">n</text>
<text top="140" left="483" width="0" height="10" font="6">se </text>
<text top="128" left="483" width="0" height="10" font="6">Time</text>
<text top="107" left="483" width="0" height="10" font="6"> </text>
<text top="255" left="552" width="77" height="10" font="6">Table Selectivities </text>
<text top="90" left="507" width="49" height="10" font="4">Obs RT Ratio</text>
<text top="90" left="575" width="59" height="10" font="4">Model RT Ratio</text>
<text top="260" left="838" width="2" height="10" font="4"> </text>
<text top="221" left="667" width="17" height="10" font="4">0.00</text>
<text top="191" left="667" width="17" height="10" font="4">0.25</text>
<text top="161" left="667" width="17" height="10" font="4">0.50</text>
<text top="132" left="667" width="17" height="10" font="4">0.75</text>
<text top="102" left="667" width="17" height="10" font="4">1.00</text>
<text top="233" left="700" width="21" height="9" font="4">O 1%,</text>
<text top="244" left="702" width="17" height="9" font="4">L 1%</text>
<text top="233" left="735" width="21" height="9" font="4">O 1%,</text>
<text top="244" left="735" width="22" height="9" font="4">L 10%</text>
<text top="233" left="770" width="21" height="9" font="4">O 1%,</text>
<text top="244" left="770" width="22" height="9" font="4">L 50%</text>
<text top="233" left="806" width="22" height="9" font="4">O 1%,</text>
<text top="244" left="803" width="26" height="9" font="4">L 100%</text>
<text top="235" left="662" width="0" height="10" font="6">N</text>
<text top="228" left="662" width="0" height="10" font="6">o</text>
<text top="223" left="662" width="0" height="10" font="6">rm</text>
<text top="211" left="662" width="0" height="10" font="6">al</text>
<text top="203" left="662" width="0" height="10" font="6">iz</text>
<text top="197" left="662" width="0" height="10" font="6">e</text>
<text top="192" left="662" width="0" height="10" font="6">d</text>
<text top="186" left="662" width="0" height="10" font="6"> E</text>
<text top="179" left="662" width="0" height="10" font="6">n</text>
<text top="174" left="662" width="0" height="10" font="6">e</text>
<text top="169" left="662" width="0" height="10" font="6">rgy </text>
<text top="153" left="662" width="0" height="10" font="6">Co</text>
<text top="142" left="662" width="0" height="10" font="6">n</text>
<text top="137" left="662" width="0" height="10" font="6">su</text>
<text top="127" left="662" width="0" height="10" font="6">mp</text>
<text top="113" left="662" width="0" height="10" font="6">tio</text>
<text top="102" left="662" width="0" height="10" font="6">n</text>
<text top="97" left="662" width="0" height="10" font="6"> </text>
<text top="255" left="732" width="77" height="10" font="6">Table Selectivities </text>
<text top="90" left="673" width="66" height="10" font="4">Obs Energy Ratio</text>
<text top="90" left="751" width="76" height="10" font="4">Model Energy Ratio</text>
<text top="274" left="561" width="15" height="12" font="3">(a)</text>
<text top="274" left="733" width="16" height="12" font="3">(b)</text>
<text top="292" left="475" width="359" height="12" font="3">Figure 8: Performance and Energy model validation for the 2</text>
<text top="307" left="475" width="174" height="12" font="3">Beefy/2 Wimpy case with 1%</text>
<text top="309" left="654" width="44" height="9" font="6">ORDERS</text>
<text top="307" left="702" width="132" height="12" font="3">selectivity and varying</text>
<text top="325" left="475" width="53" height="9" font="6">LINEITEM</text>
<text top="323" left="532" width="283" height="12" font="3">selectivity against observed data from Figure 7(a)</text>
<text top="355" left="489" width="345" height="12" font="3">Therefore, we can now calculate the build phase response time</text>
<text top="371" left="475" width="259" height="12" font="3">and the build phase cluster energy consumption.</text>
<text top="399" left="565" width="7" height="9" font="6">T</text>
<text top="403" left="572" width="14" height="7" font="11">bld</text>
<text top="399" left="590" width="9" height="9" font="6">=</text>
<text top="391" left="645" width="42" height="9" font="6">Bld × S</text>
<text top="395" left="687" width="14" height="7" font="11">bld</text>
<text top="407" left="604" width="14" height="9" font="6">(N</text>
<text top="410" left="618" width="8" height="7" font="11">B</text>
<text top="407" left="627" width="9" height="9" font="6">R</text>
<text top="411" left="636" width="22" height="7" font="11">Bbld</text>
<text top="407" left="659" width="33" height="9" font="6">) + (N</text>
<text top="410" left="692" width="10" height="7" font="11">W</text>
<text top="407" left="704" width="9" height="9" font="6">R</text>
<text top="411" left="713" width="25" height="7" font="11">W bld</text>
<text top="407" left="738" width="5" height="9" font="6">)</text>
<text top="430" left="490" width="9" height="9" font="6">E</text>
<text top="434" left="498" width="14" height="7" font="11">bld</text>
<text top="430" left="516" width="20" height="9" font="6">= T</text>
<text top="434" left="536" width="14" height="7" font="11">bld</text>
<text top="430" left="553" width="26" height="10" font="6">× (N</text>
<text top="434" left="580" width="8" height="7" font="11">B</text>
<text top="430" left="588" width="6" height="9" font="6">f</text>
<text top="434" left="594" width="8" height="7" font="11">B</text>
<text top="430" left="603" width="14" height="9" font="6">(G</text>
<text top="434" left="617" width="8" height="7" font="11">B</text>
<text top="430" left="629" width="9" height="9" font="6">+</text>
<text top="423" left="642" width="8" height="9" font="6">U</text>
<text top="426" left="650" width="22" height="7" font="11">Bbld</text>
<text top="438" left="649" width="9" height="9" font="6">C</text>
<text top="442" left="658" width="8" height="7" font="11">B</text>
<text top="430" left="675" width="29" height="9" font="6">) + N</text>
<text top="434" left="704" width="10" height="7" font="11">W</text>
<text top="430" left="715" width="6" height="9" font="6">f</text>
<text top="434" left="721" width="10" height="7" font="11">W</text>
<text top="430" left="733" width="14" height="9" font="6">(G</text>
<text top="434" left="747" width="10" height="7" font="11">W</text>
<text top="430" left="761" width="9" height="9" font="6">+</text>
<text top="423" left="775" width="8" height="9" font="6">U</text>
<text top="426" left="783" width="25" height="7" font="11">W bld</text>
<text top="438" left="781" width="9" height="9" font="6">C</text>
<text top="442" left="790" width="10" height="7" font="11">W</text>
<text top="430" left="810" width="9" height="9" font="6">))</text>
<text top="458" left="489" width="345" height="12" font="3">Since this is homogeneous execution, the probe phase can be</text>
<text top="473" left="475" width="359" height="12" font="3">modeled in the same way as the build phase but now using the probe</text>
<text top="489" left="475" width="81" height="12" font="3">table variables.</text>
<text top="524" left="509" width="9" height="9" font="6">R</text>
<text top="528" left="518" width="24" height="7" font="11">Bprb</text>
<text top="524" left="546" width="22" height="9" font="6">= R</text>
<text top="528" left="567" width="26" height="7" font="11">W prb</text>
<text top="524" left="598" width="9" height="9" font="6">=</text>
<text top="510" left="610" width="11" height="5" font="6"></text>
<text top="519" left="610" width="11" height="5" font="6"></text>
<text top="538" left="610" width="11" height="5" font="6"></text>
<text top="511" left="686" width="13" height="9" font="6">IS</text>
<text top="515" left="699" width="16" height="7" font="11">prb</text>
<text top="511" left="729" width="22" height="9" font="6">if IS</text>
<text top="515" left="751" width="16" height="7" font="11">prb</text>
<text top="511" left="771" width="21" height="9" font="6">&lt; L</text>
<text top="523" left="636" width="14" height="9" font="6">(N</text>
<text top="526" left="650" width="8" height="7" font="11">B</text>
<text top="523" left="661" width="21" height="9" font="6">+ N</text>
<text top="526" left="683" width="10" height="7" font="11">W</text>
<text top="523" left="694" width="13" height="9" font="6">)L</text>
<text top="538" left="629" width="14" height="9" font="6">(N</text>
<text top="542" left="644" width="8" height="7" font="11">B</text>
<text top="538" left="655" width="21" height="9" font="6">+ N</text>
<text top="542" left="676" width="10" height="7" font="11">W</text>
<text top="537" left="691" width="23" height="10" font="6">− 1)</text>
<text top="530" left="729" width="41" height="9" font="6">otherwise</text>
<text top="554" left="489" width="329" height="12" font="3">And similarly, the CPU bandwidth during the probe phase is:</text>
<text top="589" left="490" width="8" height="9" font="6">U</text>
<text top="593" left="499" width="24" height="7" font="11">Bprb</text>
<text top="589" left="526" width="21" height="9" font="6">= U</text>
<text top="593" left="547" width="26" height="7" font="11">W prb</text>
<text top="589" left="578" width="9" height="9" font="6">=</text>
<text top="575" left="590" width="11" height="5" font="6"></text>
<text top="584" left="590" width="11" height="5" font="6"></text>
<text top="603" left="590" width="11" height="5" font="6"></text>
<text top="576" left="727" width="5" height="9" font="6">I</text>
<text top="576" left="747" width="22" height="9" font="6">if IS</text>
<text top="580" left="770" width="16" height="7" font="11">prb</text>
<text top="576" left="789" width="21" height="9" font="6">&lt; L</text>
<text top="588" left="616" width="14" height="9" font="6">(N</text>
<text top="591" left="630" width="8" height="7" font="11">B</text>
<text top="588" left="641" width="21" height="9" font="6">+ N</text>
<text top="591" left="663" width="10" height="7" font="11">W</text>
<text top="588" left="674" width="13" height="9" font="6">)L</text>
<text top="603" left="609" width="14" height="9" font="6">(N</text>
<text top="607" left="623" width="8" height="7" font="11">B</text>
<text top="603" left="635" width="21" height="9" font="6">+ N</text>
<text top="607" left="656" width="10" height="7" font="11">W</text>
<text top="603" left="671" width="23" height="10" font="6">− 1)</text>
<text top="595" left="698" width="19" height="10" font="6">÷ S</text>
<text top="599" left="717" width="16" height="7" font="11">prb</text>
<text top="595" left="747" width="41" height="9" font="6">otherwise</text>
<text top="619" left="489" width="347" height="12" font="3">Like the build phase, we can now calculate the probe phase re-</text>
<text top="635" left="475" width="330" height="12" font="3">sponse time and the probe phase cluster energy consumption.</text>
<text top="663" left="562" width="7" height="9" font="6">T</text>
<text top="667" left="569" width="16" height="7" font="11">prb</text>
<text top="663" left="589" width="9" height="9" font="6">=</text>
<text top="655" left="645" width="42" height="9" font="6">P rb × S</text>
<text top="659" left="687" width="16" height="7" font="11">prb</text>
<text top="671" left="603" width="14" height="9" font="6">(N</text>
<text top="675" left="617" width="8" height="7" font="11">B</text>
<text top="671" left="626" width="9" height="9" font="6">R</text>
<text top="675" left="635" width="24" height="7" font="11">Bprb</text>
<text top="671" left="659" width="33" height="9" font="6">) + (N</text>
<text top="675" left="693" width="10" height="7" font="11">W</text>
<text top="671" left="704" width="9" height="9" font="6">R</text>
<text top="675" left="713" width="26" height="7" font="11">W prb</text>
<text top="671" left="741" width="5" height="9" font="6">)</text>
<text top="695" left="486" width="9" height="9" font="6">E</text>
<text top="698" left="495" width="16" height="7" font="11">prb</text>
<text top="695" left="515" width="20" height="9" font="6">= T</text>
<text top="698" left="534" width="16" height="7" font="11">prb</text>
<text top="694" left="553" width="26" height="10" font="6">× (N</text>
<text top="698" left="580" width="8" height="7" font="11">B</text>
<text top="695" left="588" width="6" height="9" font="6">f</text>
<text top="698" left="594" width="8" height="7" font="11">B</text>
<text top="695" left="603" width="14" height="9" font="6">(G</text>
<text top="698" left="617" width="8" height="7" font="11">B</text>
<text top="695" left="629" width="9" height="9" font="6">+</text>
<text top="687" left="642" width="8" height="9" font="6">U</text>
<text top="691" left="650" width="24" height="7" font="11">Bprb</text>
<text top="702" left="650" width="9" height="9" font="6">C</text>
<text top="706" left="658" width="8" height="7" font="11">B</text>
<text top="695" left="677" width="29" height="9" font="6">) + N</text>
<text top="698" left="705" width="10" height="7" font="11">W</text>
<text top="695" left="717" width="6" height="9" font="6">f</text>
<text top="698" left="723" width="10" height="7" font="11">W</text>
<text top="695" left="734" width="14" height="9" font="6">(G</text>
<text top="698" left="748" width="10" height="7" font="11">W</text>
<text top="695" left="763" width="9" height="9" font="6">+</text>
<text top="687" left="776" width="8" height="9" font="6">U</text>
<text top="691" left="785" width="26" height="7" font="11">W prb</text>
<text top="702" left="784" width="9" height="9" font="6">C</text>
<text top="706" left="793" width="10" height="7" font="11">W</text>
<text top="695" left="813" width="9" height="9" font="6">))</text>
<text top="722" left="489" width="346" height="12" font="3">With these two phases modeled, the total response time is simply</text>
<text top="737" left="475" width="8" height="12" font="3">T</text>
<text top="742" left="483" width="14" height="8" font="5">bld</text>
<text top="737" left="501" width="22" height="12" font="3">+ T</text>
<text top="742" left="523" width="16" height="8" font="5">prb</text>
<text top="738" left="540" width="197" height="12" font="3">, and the total energy consumed is E</text>
<text top="742" left="737" width="14" height="8" font="5">bld</text>
<text top="737" left="755" width="24" height="12" font="3">+ E</text>
<text top="742" left="779" width="16" height="8" font="5">prb</text>
<text top="738" left="796" width="3" height="12" font="3">.</text>
<text top="753" left="489" width="345" height="12" font="3">Heterogeneous Execution: When the Wimpy nodes can not</text>
<text top="769" left="475" width="359" height="12" font="3">store the hash join hash table in memory (H is false), P-store uses</text>
<text top="785" left="475" width="359" height="12" font="3">the Wimpy nodes as scan and ﬁlter nodes and only the Beefy nodes</text>
<text top="800" left="475" width="359" height="12" font="3">build the hash tables. Our model accounts for this by calculating the</text>
<text top="816" left="475" width="359" height="12" font="3">rates at which predicate-passing tuples are delivered to the Beefy</text>
<text top="832" left="475" width="359" height="12" font="3">nodes. In the same spirit as the above model for the homogeneous</text>
<text top="847" left="475" width="359" height="12" font="3">execution, the key factors are whether or not we are disk bound</text>
<text top="863" left="475" width="359" height="12" font="3">or network bound. However, since a smaller set of Beefy nodes</text>
<text top="879" left="475" width="361" height="12" font="3">need to receive the data from the entire cluster, in addition to out-</text>
<text top="894" left="475" width="359" height="12" font="3">bound network limitations from nodes sending data, there is an</text>
<text top="910" left="475" width="359" height="12" font="3">ingestion network limitation at the Beefy nodes, which becomes</text>
<text top="926" left="475" width="359" height="12" font="3">a performance bottleneck ﬁrst. That is, the Beefy nodes that are</text>
<text top="942" left="475" width="359" height="12" font="3">building the hash tables can only receive data at the network’s</text>
<text top="957" left="475" width="359" height="12" font="3">capacity even though there may be many Wimpy nodes trying to</text>
<text top="973" left="475" width="359" height="12" font="3">send data to them at a higher rate. For heterogeneous execution, we</text>
<text top="989" left="475" width="360" height="12" font="3">take this problem into account in our model. In the interest of space,</text>
<text top="1004" left="475" width="192" height="12" font="3">we omit this model from this paper.</text>
<text top="1030" left="479" width="33" height="14" font="9">5.3.1</text>
<text top="1030" left="529" width="114" height="14" font="9">Model Validation</text>
<text top="1051" left="489" width="345" height="12" font="3">Next, we present validation of our P-store model using the real</text>
<text top="1067" left="475" width="359" height="12" font="3">observed data of the 2 Beefy/2 Wimpy cluster in Section 5.2. Since</text>
</page>
<page number="10" position="absolute" top="0" left="0" height="1188" width="918">
<text top="260" left="263" width="2" height="10" font="4"> </text>
<text top="221" left="93" width="17" height="10" font="4">0.00</text>
<text top="191" left="93" width="17" height="10" font="4">0.25</text>
<text top="161" left="93" width="17" height="10" font="4">0.50</text>
<text top="132" left="93" width="17" height="10" font="4">0.75</text>
<text top="102" left="93" width="17" height="10" font="4">1.00</text>
<text top="233" left="123" width="26" height="9" font="4">O 10%,</text>
<text top="244" left="128" width="17" height="9" font="4">L 1%</text>
<text top="233" left="158" width="26" height="9" font="4">O 10%,</text>
<text top="244" left="161" width="22" height="9" font="4">L 10%</text>
<text top="233" left="194" width="26" height="9" font="4">O 10%,</text>
<text top="244" left="196" width="22" height="9" font="4">L 50%</text>
<text top="233" left="229" width="26" height="9" font="4">O 10%,</text>
<text top="244" left="229" width="26" height="9" font="4">L 100%</text>
<text top="221" left="88" width="0" height="10" font="6">N</text>
<text top="214" left="88" width="0" height="10" font="6">o</text>
<text top="209" left="88" width="0" height="10" font="6">rma</text>
<text top="192" left="88" width="0" height="10" font="6">liz</text>
<text top="183" left="88" width="0" height="10" font="6">ed</text>
<text top="173" left="88" width="0" height="10" font="6"> R</text>
<text top="165" left="88" width="0" height="10" font="6">esp</text>
<text top="151" left="88" width="0" height="10" font="6">o</text>
<text top="145" left="88" width="0" height="10" font="6">n</text>
<text top="140" left="88" width="0" height="10" font="6">se </text>
<text top="128" left="88" width="0" height="10" font="6">Time</text>
<text top="107" left="88" width="0" height="10" font="6"> </text>
<text top="255" left="158" width="77" height="10" font="6">Table Selectivities </text>
<text top="90" left="112" width="49" height="10" font="4">Obs RT Ratio</text>
<text top="90" left="180" width="59" height="10" font="4">Model RT Ratio</text>
<text top="260" left="443" width="2" height="10" font="4"> </text>
<text top="221" left="273" width="17" height="10" font="4">0.00</text>
<text top="191" left="273" width="17" height="10" font="4">0.25</text>
<text top="161" left="273" width="17" height="10" font="4">0.50</text>
<text top="132" left="273" width="17" height="10" font="4">0.75</text>
<text top="102" left="273" width="17" height="10" font="4">1.00</text>
<text top="233" left="303" width="26" height="9" font="4">O 10%,</text>
<text top="244" left="307" width="17" height="9" font="4">L 1%</text>
<text top="233" left="338" width="26" height="9" font="4">O 10%,</text>
<text top="244" left="340" width="22" height="9" font="4">L 10%</text>
<text top="233" left="374" width="26" height="9" font="4">O 10%,</text>
<text top="244" left="376" width="22" height="9" font="4">L 50%</text>
<text top="233" left="409" width="26" height="9" font="4">O 10%,</text>
<text top="244" left="409" width="26" height="9" font="4">L 100%</text>
<text top="235" left="268" width="0" height="10" font="6">N</text>
<text top="228" left="268" width="0" height="10" font="6">o</text>
<text top="223" left="268" width="0" height="10" font="6">rm</text>
<text top="211" left="268" width="0" height="10" font="6">al</text>
<text top="203" left="268" width="0" height="10" font="6">iz</text>
<text top="197" left="268" width="0" height="10" font="6">e</text>
<text top="192" left="268" width="0" height="10" font="6">d</text>
<text top="186" left="268" width="0" height="10" font="6"> E</text>
<text top="179" left="268" width="0" height="10" font="6">n</text>
<text top="174" left="268" width="0" height="10" font="6">e</text>
<text top="169" left="268" width="0" height="10" font="6">rgy </text>
<text top="153" left="268" width="0" height="10" font="6">Co</text>
<text top="142" left="268" width="0" height="10" font="6">n</text>
<text top="137" left="268" width="0" height="10" font="6">su</text>
<text top="127" left="268" width="0" height="10" font="6">mp</text>
<text top="113" left="268" width="0" height="10" font="6">tio</text>
<text top="102" left="268" width="0" height="10" font="6">n</text>
<text top="97" left="268" width="0" height="10" font="6"> </text>
<text top="255" left="337" width="77" height="10" font="6">Table Selectivities </text>
<text top="90" left="279" width="66" height="10" font="4">Obs Energy Ratio</text>
<text top="90" left="357" width="76" height="10" font="4">Model Energy Ratio</text>
<text top="274" left="166" width="15" height="12" font="3">(a)</text>
<text top="274" left="339" width="16" height="12" font="3">(b)</text>
<text top="292" left="81" width="359" height="12" font="3">Figure 9: Performance and Energy model validation for the 2</text>
<text top="307" left="81" width="177" height="12" font="3">Beefy/2 Wimpy case with 10%</text>
<text top="309" left="262" width="44" height="9" font="6">ORDERS</text>
<text top="307" left="309" width="130" height="12" font="3">selectivity and varying</text>
<text top="325" left="81" width="53" height="9" font="6">LINEITEM</text>
<text top="323" left="138" width="284" height="12" font="3">selectivity against observed data from Figure 7(b)</text>
<text top="356" left="81" width="359" height="12" font="3">the results in Section 5.2 were from warm-cache (some of the table</text>
<text top="372" left="81" width="360" height="12" font="3">data resides in memory and disk I/O may be necessary) hash joins,</text>
<text top="387" left="80" width="359" height="12" font="3">we changed the input parameters of our model to account for such</text>
<text top="403" left="81" width="359" height="12" font="3">behavior. For example, we changed the scan rate of the build phase</text>
<text top="419" left="81" width="232" height="12" font="3">to that of the maximum CPU bandwidth C</text>
<text top="423" left="312" width="10" height="8" font="5">W</text>
<text top="419" left="328" width="33" height="12" font="3">and C</text>
<text top="423" left="361" width="8" height="8" font="5">B</text>
<text top="419" left="371" width="70" height="12" font="3">. In this way,</text>
<text top="434" left="81" width="359" height="12" font="3">the time it takes to ﬁnish the build phase is equal to the time it takes</text>
<text top="450" left="81" width="359" height="12" font="3">the CPU to process the build table at maximum speed plus the time</text>
<text top="466" left="81" width="279" height="12" font="3">to send the ﬁlter qualifying tuples over the network.</text>
<text top="481" left="94" width="347" height="12" font="3">For our model, we used the following hardware parameter set-</text>
<text top="497" left="81" width="30" height="12" font="3">tings:</text>
<text top="499" left="117" width="11" height="9" font="6">M</text>
<text top="503" left="128" width="8" height="7" font="11">B</text>
<text top="499" left="142" width="61" height="10" font="6">= 31000, M</text>
<text top="503" left="203" width="10" height="7" font="11">W</text>
<text top="499" left="219" width="53" height="10" font="6">= 7000, N</text>
<text top="503" left="272" width="8" height="7" font="11">B</text>
<text top="499" left="286" width="23" height="9" font="6">= N</text>
<text top="503" left="309" width="10" height="7" font="11">W</text>
<text top="499" left="325" width="113" height="10" font="6">= 2, I = 270, L = 95</text>
<text top="497" left="438" width="3" height="12" font="3">.</text>
<text top="513" left="81" width="359" height="12" font="3">Since our experiments used a different Beefy node (based on 2</text>
<text top="528" left="81" width="281" height="12" font="3">L5630 Xeon CPUs) than the cluster-V nodes, the f</text>
<text top="533" left="361" width="8" height="8" font="5">B</text>
<text top="528" left="374" width="65" height="12" font="3">function for</text>
<text top="544" left="81" width="236" height="12" font="3">node power is given by 79.006 × (100 ∗ u)</text>
<text top="541" left="316" width="31" height="8" font="5">0.2451</text>
<text top="544" left="351" width="19" height="12" font="3">and</text>
<text top="546" left="374" width="9" height="9" font="6">C</text>
<text top="550" left="383" width="8" height="7" font="11">B</text>
<text top="546" left="395" width="36" height="9" font="6">= 4034</text>
<text top="544" left="431" width="3" height="12" font="3">.</text>
<text top="560" left="94" width="346" height="12" font="3">Our validation results of our model against the 2 Beefy/2 Wimpy</text>
<text top="576" left="81" width="359" height="12" font="3">cluster results from Section 5.2 are shown in Figures 8 and 9. In</text>
<text top="591" left="81" width="361" height="12" font="3">Figure 8(a) and (b), we validate the response time and energy con-</text>
<text top="607" left="81" width="250" height="12" font="3">sumption results of our model against the 1%</text>
<text top="609" left="334" width="41" height="9" font="6">ORDERS</text>
<text top="607" left="379" width="62" height="12" font="3">table selec-</text>
<text top="623" left="81" width="359" height="12" font="3">tivity joins presented in Figure 7(a). The execution plans for the</text>
<text top="638" left="80" width="18" height="12" font="3">1%</text>
<text top="640" left="101" width="41" height="9" font="6">ORDERS</text>
<text top="638" left="146" width="293" height="12" font="3">selectivity were homogeneous across all the nodes. In</text>
<text top="654" left="81" width="361" height="12" font="3">Figure 8, our model provided relative response time behavior and rel-</text>
<text top="670" left="81" width="250" height="12" font="3">ative energy consumption behavior to the 100%</text>
<text top="672" left="334" width="49" height="9" font="6">LINEITEM</text>
<text top="670" left="386" width="54" height="12" font="3">selectivity</text>
<text top="685" left="81" width="360" height="12" font="3">result within 5% error compared to the observed data. Similarly,</text>
<text top="701" left="81" width="359" height="12" font="3">in Figure 9(a) and (b), we validated the relative response time and</text>
<text top="717" left="81" width="313" height="12" font="3">energy consumption results from our model for the 10%</text>
<text top="719" left="398" width="41" height="9" font="6">ORDERS</text>
<text top="732" left="81" width="359" height="12" font="3">selectivity joins from Figure 7(b). Here the error rate was within</text>
<text top="748" left="80" width="360" height="12" font="3">10% compared to the observed data. The execution plans here were</text>
<text top="764" left="81" width="359" height="12" font="3">heterogeneous, with the Wimpy nodes only scanning and ﬁltering</text>
<text top="780" left="81" width="135" height="12" font="3">data for the Beefy nodes.</text>
<text top="795" left="94" width="345" height="12" font="3">With our model validated, we now explore a wider range of cluster</text>
<text top="811" left="81" width="361" height="12" font="3">designs beyond four nodes while also varying the query parame-</text>
<text top="827" left="81" width="359" height="12" font="3">ters, such as predicate selectivity. Our results reveal interesting</text>
<text top="842" left="81" width="259" height="12" font="3">opportunities for energy-efﬁcient cluster design.</text>
<text top="872" left="81" width="22" height="16" font="1">5.4</text>
<text top="872" left="121" width="318" height="16" font="1">Exploring Query and Cluster Parameters</text>
<text top="894" left="94" width="345" height="12" font="3">In this section, we explore what happens to query performance</text>
<text top="910" left="81" width="359" height="12" font="3">and energy consumption as we change the cluster design (the ratio</text>
<text top="926" left="81" width="359" height="12" font="3">of Beefy to Wimpy nodes) and query characteristics (the selectivity</text>
<text top="941" left="81" width="359" height="12" font="3">of build and probe tables), while executing the hash join query on</text>
<text top="957" left="81" width="284" height="12" font="3">P-store. This hash join is between a 700GB TPC-H</text>
<text top="959" left="368" width="41" height="9" font="6">ORDERS</text>
<text top="957" left="413" width="27" height="12" font="3">table</text>
<text top="973" left="81" width="103" height="12" font="3">and 2.8TB TPC-H</text>
<text top="975" left="188" width="49" height="9" font="6">LINEITEM</text>
<text top="973" left="242" width="198" height="12" font="3">table. We join these tables on their</text>
<text top="988" left="81" width="72" height="12" font="3">join attribute</text>
<text top="990" left="158" width="57" height="9" font="6">ORDERKEY</text>
<text top="988" left="215" width="225" height="12" font="3">. For our model, we used the following</text>
<text top="1004" left="81" width="159" height="12" font="3">hardware parameter settings:</text>
<text top="1006" left="246" width="11" height="9" font="6">M</text>
<text top="1010" left="257" width="8" height="7" font="11">B</text>
<text top="1006" left="270" width="61" height="10" font="6">= 47000, M</text>
<text top="1010" left="331" width="10" height="7" font="11">W</text>
<text top="1006" left="347" width="94" height="10" font="6">= 7000, I = 1200,</text>
<text top="1022" left="81" width="42" height="9" font="6">L = 100</text>
<text top="1020" left="123" width="317" height="12" font="3">. The memory settings correspond to those of our cluster-V</text>
<text top="1035" left="81" width="359" height="12" font="3">nodes (Table 1, Section 3) and Laptop B (Table 2). We model the</text>
<text top="1051" left="81" width="359" height="12" font="3">IO subsystem of our nodes as if they each had four of the Crucial</text>
<text top="1067" left="81" width="359" height="12" font="3">256GB SSDs that we used in Section 5.2, as well as the 1Gbps</text>
<text top="266" left="651" width="2" height="10" font="4"> </text>
<text top="99" left="516" width="26" height="9" font="5">8B,0W </text>
<text top="115" left="516" width="26" height="9" font="5">7B,1W </text>
<text top="130" left="516" width="26" height="9" font="5">6B,2W </text>
<text top="145" left="516" width="26" height="9" font="5">5B,3W </text>
<text top="161" left="516" width="26" height="9" font="5">4B,4W </text>
<text top="176" left="516" width="26" height="9" font="5">3B,5W </text>
<text top="191" left="516" width="26" height="9" font="5">2B,6W </text>
<text top="207" left="516" width="26" height="9" font="5">1B,7W </text>
<text top="222" left="516" width="26" height="9" font="5">0B,8W </text>
<text top="241" left="488" width="11" height="9" font="5">0.0</text>
<text top="227" left="488" width="11" height="9" font="5">0.1</text>
<text top="212" left="488" width="11" height="9" font="5">0.2</text>
<text top="198" left="488" width="11" height="9" font="5">0.3</text>
<text top="184" left="488" width="11" height="9" font="5">0.4</text>
<text top="170" left="488" width="11" height="9" font="5">0.5</text>
<text top="156" left="488" width="11" height="9" font="5">0.6</text>
<text top="142" left="488" width="11" height="9" font="5">0.7</text>
<text top="127" left="488" width="11" height="9" font="5">0.8</text>
<text top="113" left="488" width="11" height="9" font="5">0.9</text>
<text top="99" left="488" width="11" height="9" font="5">1.0</text>
<text top="252" left="630" width="16" height="9" font="5">0.70</text>
<text top="252" left="586" width="16" height="9" font="5">0.80</text>
<text top="252" left="543" width="16" height="9" font="5">0.90</text>
<text top="252" left="499" width="16" height="9" font="5">1.00</text>
<text top="237" left="483" width="0" height="11" font="6">No</text>
<text top="224" left="483" width="0" height="11" font="6">rmaliz</text>
<text top="198" left="483" width="0" height="11" font="6">ed</text>
<text top="187" left="483" width="0" height="11" font="6"> En</text>
<text top="174" left="483" width="0" height="11" font="6">er</text>
<text top="165" left="483" width="0" height="11" font="6">gy</text>
<text top="155" left="483" width="0" height="11" font="6"> C</text>
<text top="147" left="483" width="0" height="11" font="6">on</text>
<text top="135" left="483" width="0" height="11" font="6">sump</text>
<text top="111" left="483" width="0" height="11" font="6">tion</text>
<text top="94" left="483" width="0" height="11" font="6"> </text>
<text top="261" left="515" width="114" height="11" font="6">Normalized  Performance </text>
<text top="84" left="506" width="121" height="11" font="6">ORDERS 1%, LINEITEM 10% </text>
<text top="266" left="831" width="2" height="10" font="4"> </text>
<text top="129" left="675" width="26" height="9" font="5">8B,0W </text>
<text top="145" left="694" width="26" height="9" font="5">7B,1W </text>
<text top="119" left="712" width="26" height="9" font="5">6B,2W </text>
<text top="146" left="731" width="26" height="9" font="5">5B,3W </text>
<text top="126" left="750" width="26" height="9" font="5">4B,4W </text>
<text top="138" left="769" width="26" height="9" font="5">3B,5W </text>
<text top="189" left="788" width="26" height="9" font="5">2B,6W </text>
<text top="241" left="668" width="11" height="9" font="5">0.9</text>
<text top="145" left="668" width="11" height="9" font="5">1.0</text>
<text top="252" left="810" width="16" height="9" font="5">0.25</text>
<text top="252" left="766" width="16" height="9" font="5">0.50</text>
<text top="252" left="723" width="16" height="9" font="5">0.75</text>
<text top="252" left="679" width="16" height="9" font="5">1.00</text>
<text top="245" left="663" width="0" height="11" font="6">No</text>
<text top="232" left="663" width="0" height="11" font="6">rmaliz</text>
<text top="206" left="663" width="0" height="11" font="6">ed</text>
<text top="195" left="663" width="0" height="11" font="6"> En</text>
<text top="182" left="663" width="0" height="11" font="6">er</text>
<text top="173" left="663" width="0" height="11" font="6">gy</text>
<text top="163" left="663" width="0" height="11" font="6"> C</text>
<text top="155" left="663" width="0" height="11" font="6">on</text>
<text top="143" left="663" width="0" height="11" font="6">sump</text>
<text top="119" left="663" width="0" height="11" font="6">tion</text>
<text top="102" left="663" width="0" height="11" font="6"> </text>
<text top="261" left="687" width="111" height="11" font="6">Normalized Performance </text>
<text top="84" left="686" width="126" height="11" font="6">ORDERS 10%, LINEITEM 10% </text>
<text top="280" left="561" width="15" height="12" font="3">(a)</text>
<text top="280" left="733" width="16" height="12" font="3">(b)</text>
<text top="298" left="475" width="359" height="12" font="3">Figure 10: Modeled P-store dual-shufﬂe hash join performance</text>
<text top="314" left="475" width="359" height="12" font="3">and energy efﬁciency of an 8 node cluster made of various Beefy</text>
<text top="329" left="475" width="359" height="12" font="3">and Wimpy nodes. (a) Parallel execution is homogeneous: the</text>
<text top="345" left="475" width="360" height="12" font="3">Wimpy and Beefy nodes can build in-memory hash tables. (b)</text>
<text top="361" left="475" width="361" height="12" font="3">Parallel execution is heterogeneous: Wimpy nodes scan and ﬁl-</text>
<text top="377" left="475" width="359" height="12" font="3">ter their local data before shufﬂing it to the Beefy nodes for</text>
<text top="392" left="475" width="359" height="12" font="3">further processing. A constant EDP relative to the all Beefy</text>
<text top="408" left="475" width="198" height="12" font="3">cluster is shown by the dotted line.</text>
<text top="439" left="475" width="359" height="12" font="3">network interconnect of that experiment. We kept the remaining</text>
<text top="455" left="475" width="278" height="12" font="3">CPU parameters the same as those listed in Table 3.</text>
<text top="471" left="489" width="345" height="12" font="3">We have already presented one of these results in Section 1. In</text>
<text top="486" left="475" width="359" height="12" font="3">Figure 1(b), we showed that increasing the ratio of Wimpy to Beefy</text>
<text top="502" left="475" width="359" height="12" font="3">nodes results in more energy-efﬁcient conﬁgurations compared to</text>
<text top="518" left="475" width="359" height="12" font="3">the homogeneous cluster design consisting of only beefy nodes. In</text>
<text top="533" left="475" width="359" height="12" font="3">that ﬁgure, we used the model that we described in Section 5.3 to</text>
<text top="549" left="475" width="359" height="12" font="3">compare the energy consumption vs. performance trade-off for the</text>
<text top="565" left="475" width="159" height="12" font="3">hash join between the TPC-H</text>
<text top="567" left="638" width="41" height="9" font="6">ORDERS</text>
<text top="565" left="683" width="69" height="12" font="3">table and the</text>
<text top="567" left="755" width="49" height="9" font="6">LINEITEM</text>
<text top="565" left="808" width="26" height="12" font="3">table</text>
<text top="580" left="475" width="210" height="12" font="3">at 10% and 1% selectivity respectively.</text>
<text top="596" left="489" width="345" height="12" font="3">In Figure 10(a), we show that the best cluster design point, when</text>
<text top="612" left="475" width="178" height="12" font="3">executing a hash join between an</text>
<text top="614" left="657" width="41" height="9" font="6">ORDERS</text>
<text top="612" left="701" width="133" height="12" font="3">table with 1% selectivity</text>
<text top="627" left="475" width="31" height="12" font="3">and a</text>
<text top="630" left="511" width="49" height="9" font="6">LINEITEM</text>
<text top="627" left="566" width="269" height="12" font="3">table with 10% selectivity, is to use all Wimpy</text>
<text top="643" left="475" width="359" height="12" font="3">nodes. In this case, since a 1% selectivity on the hash join build</text>
<text top="659" left="475" width="359" height="12" font="3">table means that each node only needs at least 875MB of memory to</text>
<text top="675" left="475" width="359" height="12" font="3">build in-memory hash tables, the parallel execution across all nodes</text>
<text top="690" left="475" width="359" height="12" font="3">is homogeneous. Since we have modeled the Wimpy and the Beefy</text>
<text top="706" left="475" width="359" height="12" font="3">nodes to have the same IO and network capabilities, we should not</text>
<text top="722" left="475" width="359" height="12" font="3">expect any performance degradation as we replace Beefy nodes</text>
<text top="737" left="475" width="359" height="12" font="3">with Wimpy nodes (i.e., the network and disk bottlenecks mask the</text>
<text top="753" left="475" width="359" height="12" font="3">performance limitations of the Wimpy nodes). This is shown in</text>
<text top="769" left="475" width="359" height="12" font="3">Figure 10(a) as the performance ratio remains 1.0 throughout all the</text>
<text top="784" left="475" width="360" height="12" font="3">conﬁgurations. Consequently, since performance does not degrade,</text>
<text top="800" left="475" width="359" height="12" font="3">we see that the energy consumed by the hash join drops by almost</text>
<text top="816" left="475" width="359" height="12" font="3">90% because a Wimpy node power footprint is almost 10% of the</text>
<text top="831" left="475" width="359" height="12" font="3">Beefy node power footprint. In the interest of space, we omit the</text>
<text top="847" left="475" width="116" height="12" font="3">similar results for 1%</text>
<text top="849" left="595" width="41" height="9" font="6">ORDERS</text>
<text top="847" left="639" width="41" height="12" font="3">and 1%</text>
<text top="849" left="683" width="49" height="9" font="6">LINEITEM</text>
<text top="847" left="736" width="57" height="12" font="3">selectivity.</text>
<text top="863" left="489" width="345" height="12" font="3">In Figure 10(b), the best cluster conﬁguration for a hash join when</text>
<text top="879" left="475" width="16" height="12" font="3">the</text>
<text top="881" left="495" width="41" height="9" font="6">ORDERS</text>
<text top="879" left="539" width="295" height="12" font="3">table has the same 10% selectivity as in Figure 1(b) and</text>
<text top="894" left="475" width="16" height="12" font="3">the</text>
<text top="896" left="494" width="49" height="9" font="6">LINEITEM</text>
<text top="894" left="547" width="289" height="12" font="3">table also has 10% selectivity is to use all Beefy nodes.</text>
<text top="910" left="475" width="359" height="12" font="3">The Wimpy nodes do not have the 8.8GB of main memory that is</text>
<text top="926" left="475" width="359" height="12" font="3">needed to build the in-memory hash table, so we model them to scan</text>
<text top="941" left="475" width="359" height="12" font="3">and ﬁlter data for the Beefy nodes; i.e., we have a heterogeneous</text>
<text top="957" left="475" width="359" height="12" font="3">parallel execution. We varied the cluster design from the all Beefy</text>
<text top="973" left="475" width="359" height="12" font="3">to 2 Beefy and 6 Wimpy cases, after which, the aggregate Beefy</text>
<text top="988" left="475" width="359" height="12" font="3">memory cannot store the in-memory hash table. Here the results</text>
<text top="1004" left="475" width="359" height="12" font="3">stand in stark contrast to the results shown in Figure 10(a), because</text>
<text top="1020" left="475" width="359" height="12" font="3">there is not a signiﬁcant energy savings when we use Wimpy nodes</text>
<text top="1035" left="475" width="359" height="12" font="3">in the cluster. The reason is because with a 10% selectivity predicate</text>
<text top="1051" left="475" width="359" height="12" font="3">on the tables, the server’s IO subsystem has enough bandwidth to</text>
<text top="1067" left="475" width="359" height="12" font="3">saturate the network interconnect, and the network becomes the</text>
</page>
<page number="11" position="absolute" top="0" left="0" height="1188" width="918">
<text top="280" left="384" width="3" height="13" font="3"> </text>
<text top="238" left="321" width="22" height="12" font="8">EDP </text>
<text top="101" left="196" width="35" height="12" font="7">7B,1W </text>
<text top="125" left="218" width="35" height="12" font="8">6B,2W </text>
<text top="103" left="244" width="35" height="12" font="8">5B,3W </text>
<text top="126" left="266" width="35" height="12" font="8">4B,4W </text>
<text top="105" left="297" width="35" height="12" font="8">3B,5W </text>
<text top="112" left="335" width="35" height="12" font="8">2B,6W </text>
<text top="127" left="331" width="42" height="12" font="7">   LI 10% </text>
<text top="143" left="334" width="28" height="12" font="8">LI 8% </text>
<text top="166" left="323" width="28" height="12" font="8">LI 6% </text>
<text top="196" left="297" width="28" height="12" font="8">LI 4% </text>
<text top="103" left="158" width="35" height="12" font="8">8B,0W </text>
<text top="234" left="255" width="28" height="12" font="8">LI 2% </text>
<text top="245" left="158" width="15" height="12" font="8">0.4</text>
<text top="203" left="158" width="15" height="12" font="8">0.6</text>
<text top="160" left="158" width="15" height="12" font="8">0.8</text>
<text top="118" left="158" width="15" height="12" font="7">1.0</text>
<text top="260" left="360" width="15" height="12" font="8">0.2</text>
<text top="260" left="269" width="15" height="12" font="8">0.6</text>
<text top="260" left="177" width="15" height="12" font="8">1.0</text>
<text top="274" left="203" width="138" height="13" font="3">Normalized Performance </text>
<text top="85" left="190" width="158" height="14" font="2">Hash Join: Orders 10% Sel. </text>
<text top="263" left="151" width="0" height="13" font="3">N</text>
<text top="254" left="151" width="0" height="13" font="3">o</text>
<text top="247" left="151" width="0" height="13" font="3">rm</text>
<text top="232" left="151" width="0" height="13" font="3">ali</text>
<text top="220" left="151" width="0" height="13" font="3">zed </text>
<text top="198" left="151" width="0" height="13" font="3">Energ</text>
<text top="167" left="151" width="0" height="13" font="3">y </text>
<text top="158" left="151" width="0" height="13" font="3">Co</text>
<text top="144" left="151" width="0" height="13" font="3">n</text>
<text top="137" left="151" width="0" height="13" font="3">sumptio</text>
<text top="93" left="151" width="0" height="13" font="3">n</text>
<text top="86" left="151" width="0" height="13" font="3"> </text>
<text top="297" left="81" width="359" height="12" font="3">Figure 11: Modeled P-store dual-shufﬂe hash join performance</text>
<text top="313" left="81" width="359" height="12" font="3">and energy efﬁciency of an 8 node cluster made of Beefy and</text>
<text top="329" left="81" width="277" height="12" font="3">Wimpy nodes. The join is between the TPC-H</text>
<text top="331" left="363" width="44" height="9" font="6">ORDERS</text>
<text top="329" left="411" width="28" height="12" font="3">table</text>
<text top="344" left="80" width="85" height="12" font="3">(10% sel.) and</text>
<text top="347" left="169" width="53" height="9" font="6">LINEITEM</text>
<text top="344" left="226" width="213" height="12" font="3">table (2-10% sel.). Parallel execution</text>
<text top="360" left="81" width="359" height="12" font="3">is heterogeneous across cluster nodes. A constant EDP relative</text>
<text top="376" left="81" width="335" height="12" font="3">to the all Beefy cluster is shown by the straight dotted line.</text>
<text top="404" left="81" width="361" height="12" font="3">bottleneck. Speciﬁcally, as we decrease the number of Beefy nodes –</text>
<text top="420" left="81" width="359" height="12" font="3">they are responsible for building and probing the hash tables – each</text>
<text top="436" left="81" width="359" height="12" font="3">Beefy node becomes more network bottlenecked ingesting data</text>
<text top="451" left="81" width="359" height="12" font="3">from all the other nodes in the cluster. Consequently, we see that</text>
<text top="467" left="81" width="359" height="12" font="3">the performance degrades severely, while the energy consumption</text>
<text top="483" left="81" width="341" height="12" font="3">does not drop below 95% of the 8B,0W cluster reference point.</text>
<text top="498" left="94" width="345" height="12" font="3">This last result is interesting because we saw that for another</text>
<text top="514" left="81" width="286" height="12" font="3">heterogeneous execution plan in Figure 1(b), a 1%</text>
<text top="516" left="372" width="49" height="9" font="6">LINEITEM</text>
<text top="514" left="426" width="16" height="12" font="3">se-</text>
<text top="530" left="81" width="359" height="12" font="3">lectivity, saw signiﬁcant wins in trading performance for energy</text>
<text top="545" left="81" width="361" height="12" font="3">savings. Naturally, we wanted to understand why we saw these dif-</text>
<text top="561" left="81" width="359" height="12" font="3">ferent results when we only change the selectivities of the predicate</text>
<text top="577" left="81" width="33" height="12" font="3">on the</text>
<text top="579" left="117" width="49" height="9" font="6">LINEITEM</text>
<text top="577" left="170" width="30" height="12" font="3">table.</text>
<text top="592" left="94" width="345" height="12" font="3">In Figure 11, we show that as we increase the selectivities of the</text>
<text top="608" left="81" width="83" height="12" font="3">predicate on the</text>
<text top="610" left="167" width="49" height="9" font="6">LINEITEM</text>
<text top="608" left="219" width="222" height="12" font="3">table from 10% to 2% (in 2% increments),</text>
<text top="624" left="81" width="224" height="12" font="3">given a 10% selectivity predicate on the</text>
<text top="626" left="309" width="41" height="9" font="6">ORDERS</text>
<text top="624" left="354" width="85" height="12" font="3">table, we begin</text>
<text top="639" left="81" width="359" height="12" font="3">to trade less performance for greater energy savings. Each curve</text>
<text top="655" left="81" width="115" height="12" font="3">represents a different</text>
<text top="657" left="199" width="49" height="9" font="6">LINEITEM</text>
<text top="655" left="251" width="188" height="12" font="3">selectivity, and as the curve moves</text>
<text top="671" left="81" width="359" height="12" font="3">to the right, each dot indicates more Wimpy nodes in the 8 node</text>
<text top="687" left="81" width="359" height="12" font="3">cluster. Again, we do not use fewer than 2 Beefy nodes because</text>
<text top="702" left="80" width="360" height="12" font="3">1 Beefy node cannot build the entire hash table in memory. The</text>
<text top="718" left="81" width="250" height="12" font="3">dashed line indicates the constant EDP metric.</text>
<text top="734" left="94" width="292" height="12" font="3">We notice that as we gradually decrease the number of</text>
<text top="736" left="390" width="49" height="9" font="6">LINEITEM</text>
<text top="749" left="81" width="276" height="12" font="3">tuples passing the selection ﬁlter (i.e., increase the</text>
<text top="751" left="360" width="49" height="9" font="6">LINEITEM</text>
<text top="749" left="413" width="27" height="12" font="3">table</text>
<text top="765" left="81" width="361" height="12" font="3">selectivity from 10% to 2%), the results start to trend downward be-</text>
<text top="781" left="81" width="359" height="12" font="3">low the EDP line. More interestingly, we notice that the results start</text>
<text top="796" left="81" width="359" height="12" font="3">to trend downward in a way such that the knee in the curves moves</text>
<text top="812" left="81" width="359" height="12" font="3">lower towards the cluster designs with more Wimpy nodes (right</text>
<text top="828" left="81" width="359" height="12" font="3">ends of the result curves). To the right of the knee, the heterogeneous</text>
<text top="844" left="81" width="359" height="12" font="3">parallel plans saturate the Beefy node network ingestion during the</text>
<text top="859" left="81" width="64" height="12" font="3">probe phase</text>
<text top="859" left="145" width="294" height="12" font="3">. To the left of the knee, the nodes delivering data to the</text>
<text top="875" left="81" width="359" height="12" font="3">Beefy nodes are sending data as fast as their IO subsystem (and table</text>
<text top="891" left="81" width="278" height="12" font="3">selectivity) can sustain. As the amount of probe (</text>
<text top="893" left="358" width="49" height="9" font="6">LINEITEM</text>
<text top="891" left="408" width="32" height="12" font="3">) data</text>
<text top="906" left="81" width="359" height="12" font="3">passing the selection ﬁlter decreases (the gradually lighter-shaded</text>
<text top="922" left="81" width="359" height="12" font="3">curves in Figure 11), the number of Wimpy nodes that are needed</text>
<text top="938" left="81" width="360" height="12" font="3">to saturate the inbound network port at the Beefy nodes increases,</text>
<text top="953" left="81" width="323" height="12" font="3">so the knee moves to the right end with more Wimpy nodes.</text>
<text top="981" left="81" width="22" height="16" font="1">5.5</text>
<text top="981" left="121" width="76" height="16" font="1">Summary</text>
<text top="1004" left="94" width="347" height="12" font="3">In this section, we have shown that there is an interesting inter-</text>
<text top="1020" left="81" width="359" height="12" font="3">play between the most energy-efﬁcient cluster design (the ratio of</text>
<text top="1035" left="80" width="359" height="12" font="3">Wimpy to Beefy nodes) and the query parameters such as predicate</text>
<text top="1051" left="81" width="361" height="12" font="3">selectivity (Figure 11) for a simple parallel hash join query. Further-</text>
<text top="1067" left="81" width="359" height="12" font="3">more, heterogeneous cluster designs can trade proportionally less</text>
<text top="214" left="535" width="111" height="11" font="6">Normalized Performance </text>
<text top="198" left="500" width="0" height="11" font="6">N</text>
<text top="191" left="500" width="0" height="11" font="6">o</text>
<text top="185" left="500" width="0" height="11" font="6">rmal</text>
<text top="165" left="500" width="0" height="11" font="6">iz</text>
<text top="159" left="500" width="0" height="11" font="6">ed</text>
<text top="148" left="500" width="0" height="11" font="6"> E</text>
<text top="140" left="500" width="0" height="11" font="6">n</text>
<text top="135" left="500" width="0" height="11" font="6">erg</text>
<text top="121" left="500" width="0" height="11" font="6">y </text>
<text top="186" left="513" width="0" height="11" font="6">Co</text>
<text top="174" left="513" width="0" height="11" font="6">n</text>
<text top="169" left="513" width="0" height="11" font="6">su</text>
<text top="159" left="513" width="0" height="11" font="6">mp</text>
<text top="145" left="513" width="0" height="11" font="6">ti</text>
<text top="139" left="513" width="0" height="11" font="6">o</text>
<text top="133" left="513" width="0" height="11" font="6">n</text>
<text top="128" left="513" width="0" height="11" font="6"> </text>
<text top="92" left="576" width="22" height="17" font="9">(a) </text>
<text top="116" left="535" width="98" height="12" font="8">8N  6N  4N  2N </text>
<text top="214" left="699" width="111" height="11" font="6">Normalized Performance </text>
<text top="93" left="740" width="22" height="17" font="9">(b) </text>
<text top="116" left="697" width="90" height="12" font="8">8N  6N  4N  2N </text>
<text top="244" left="564" width="34" height="12" font="8">8B,0W </text>
<text top="273" left="610" width="34" height="12" font="8">6B,2W </text>
<text top="291" left="629" width="34" height="12" font="8">4B,4W </text>
<text top="317" left="658" width="34" height="12" font="8">2B,6W </text>
<text top="246" left="630" width="34" height="12" font="8">6B,0W </text>
<text top="247" left="682" width="34" height="12" font="8">4B,0W </text>
<text top="276" left="729" width="34" height="12" font="8">2B,0W </text>
<text top="343" left="565" width="15" height="12" font="8">0.2</text>
<text top="321" left="565" width="15" height="12" font="8">0.4</text>
<text top="299" left="565" width="15" height="12" font="8">0.6</text>
<text top="277" left="565" width="15" height="12" font="8">0.8</text>
<text top="255" left="565" width="15" height="12" font="8">1.0</text>
<text top="358" left="758" width="15" height="12" font="8">0.2</text>
<text top="358" left="671" width="15" height="12" font="8">0.6</text>
<text top="358" left="583" width="15" height="12" font="8">1.0</text>
<text top="341" left="547" width="0" height="11" font="6">N</text>
<text top="335" left="547" width="0" height="11" font="6">o</text>
<text top="329" left="547" width="0" height="11" font="6">rmal</text>
<text top="309" left="547" width="0" height="11" font="6">iz</text>
<text top="303" left="547" width="0" height="11" font="6">ed</text>
<text top="292" left="547" width="0" height="11" font="6"> E</text>
<text top="284" left="547" width="0" height="11" font="6">n</text>
<text top="278" left="547" width="0" height="11" font="6">erg</text>
<text top="265" left="547" width="0" height="11" font="6">y </text>
<text top="329" left="560" width="0" height="11" font="6">Co</text>
<text top="318" left="560" width="0" height="11" font="6">n</text>
<text top="313" left="560" width="0" height="11" font="6">su</text>
<text top="303" left="560" width="0" height="11" font="6">mp</text>
<text top="289" left="560" width="0" height="11" font="6">ti</text>
<text top="283" left="560" width="0" height="11" font="6">o</text>
<text top="277" left="560" width="0" height="11" font="6">n</text>
<text top="272" left="560" width="0" height="11" font="6"> </text>
<text top="368" left="607" width="111" height="11" font="6">Normalized Performance </text>
<text top="230" left="566" width="189" height="13" font="3">Hash Join: Orders 10% Lineitem 2% </text>
<text top="232" left="520" width="21" height="17" font="9">(c) </text>
<text top="205" left="697" width="18" height="12" font="8">1.0 </text>
<text top="205" left="798" width="18" height="12" font="8">0.2 </text>
<text top="206" left="533" width="18" height="12" font="8">1.0 </text>
<text top="206" left="635" width="18" height="12" font="8">0.2 </text>
<text top="199" left="515" width="18" height="12" font="8">0.2 </text>
<text top="126" left="514" width="18" height="12" font="8">1.0 </text>
<text top="198" left="677" width="18" height="12" font="8">0.2 </text>
<text top="126" left="676" width="18" height="12" font="8">1.0 </text>
<text top="206" left="585" width="18" height="12" font="8">0.6 </text>
<text top="205" left="746" width="18" height="12" font="8">0.6 </text>
<text top="173" left="542" width="47" height="10" font="4">Best Design </text>
<text top="184" left="542" width="22" height="10" font="4">Point </text>
<text top="173" left="704" width="47" height="10" font="4">Best Design </text>
<text top="184" left="704" width="22" height="10" font="4">Point </text>
<text top="294" left="696" width="58" height="10" font="4">Homogeneous </text>
<text top="305" left="696" width="69" height="10" font="4">Best Design Point </text>
<text top="326" left="598" width="61" height="10" font="4">Heterogeneous </text>
<text top="337" left="598" width="69" height="10" font="4">Best Design Point </text>
<text top="198" left="662" width="0" height="11" font="6">N</text>
<text top="191" left="662" width="0" height="11" font="6">o</text>
<text top="185" left="662" width="0" height="11" font="6">rmal</text>
<text top="165" left="662" width="0" height="11" font="6">iz</text>
<text top="159" left="662" width="0" height="11" font="6">ed</text>
<text top="148" left="662" width="0" height="11" font="6"> E</text>
<text top="140" left="662" width="0" height="11" font="6">n</text>
<text top="135" left="662" width="0" height="11" font="6">erg</text>
<text top="121" left="662" width="0" height="11" font="6">y </text>
<text top="186" left="675" width="0" height="11" font="6">Co</text>
<text top="174" left="675" width="0" height="11" font="6">n</text>
<text top="169" left="675" width="0" height="11" font="6">su</text>
<text top="159" left="675" width="0" height="11" font="6">mp</text>
<text top="145" left="675" width="0" height="11" font="6">ti</text>
<text top="139" left="675" width="0" height="11" font="6">o</text>
<text top="133" left="675" width="0" height="11" font="6">n</text>
<text top="128" left="675" width="0" height="11" font="6"> </text>
<text top="399" left="475" width="361" height="12" font="3">Figure 12: Query scalability characterizations and energy-</text>
<text top="415" left="475" width="359" height="12" font="3">efﬁcient design points when the target query performance is</text>
<text top="430" left="475" width="361" height="12" font="3">40% of an eight Beefy node conﬁguration, i.e., the target nor-</text>
<text top="446" left="475" width="361" height="12" font="3">malized performance is 0.6: (a) A highly scalable parallel work-</text>
<text top="462" left="475" width="361" height="12" font="3">load: Use all available nodes, since the highest performing de-</text>
<text top="477" left="475" width="361" height="12" font="3">sign point is also the most energy efﬁcient. (b) A parallel work-</text>
<text top="493" left="475" width="359" height="12" font="3">load with some scalability bottleneck (e.g., network I/O): Use</text>
<text top="509" left="475" width="361" height="12" font="3">the fewest nodes such that performance limits are still met.</text>
<text top="524" left="475" width="361" height="12" font="3">(c) Using fewer nodes reduces energy consumption on bottle-</text>
<text top="540" left="475" width="359" height="12" font="3">necked hash join but adding Wimpy nodes to supplement Beefy</text>
<text top="556" left="475" width="359" height="12" font="3">nodes can provide a more energy-efﬁcient design point. The</text>
<text top="571" left="475" width="359" height="12" font="3">dashed EDP curve provides a reference for equal performance</text>
<text top="587" left="475" width="117" height="12" font="3">vs energy trade-offs.</text>
<text top="619" left="475" width="359" height="12" font="3">performance for greater energy savings (i.e., they lie below the EDP</text>
<text top="634" left="475" width="263" height="12" font="3">line) compared to a homogeneous cluster design.</text>
<text top="668" left="475" width="13" height="16" font="1">6.</text>
<text top="668" left="507" width="271" height="16" font="1">CLUSTER DESIGN PRINCIPLES</text>
<text top="690" left="489" width="345" height="12" font="3">In this section we summarize guiding principles for building</text>
<text top="706" left="475" width="359" height="12" font="3">energy-efﬁcient data processing clusters. Figure 12 outlines the</text>
<text top="722" left="475" width="315" height="12" font="3">summary of our ﬁndings, which we discuss in this section.</text>
<text top="737" left="489" width="347" height="12" font="3">First, consider a query that is being run on a parallel data pro-</text>
<text top="753" left="475" width="359" height="12" font="3">cessing system. Using initial hardware calibration data and query</text>
<text top="769" left="475" width="359" height="12" font="3">optimizer information, consider the case when the query is deemed</text>
<text top="784" left="475" width="359" height="12" font="3">to be highly scalable. That is, the energy/performance model for</text>
<text top="800" left="475" width="359" height="12" font="3">the query looks like Figure 12(a). (We have seen empirical results</text>
<text top="816" left="475" width="359" height="12" font="3">like this, in Figures 2(a) and (b).) For such queries, the best cluster</text>
<text top="831" left="475" width="359" height="12" font="3">design point is to use the most resources (nodes) to ﬁnish the query</text>
<text top="847" left="475" width="359" height="12" font="3">as soon as possible. So, in Figure 12(a), we ﬁnd that the largest</text>
<text top="863" left="475" width="166" height="12" font="3">cluster is the best design point.</text>
<text top="879" left="489" width="347" height="12" font="3">However, if the query is not scalable (potentially due to bottle-</text>
<text top="894" left="475" width="359" height="12" font="3">necks), then the highest performing cluster design may not be the</text>
<text top="910" left="475" width="360" height="12" font="3">most energy-efﬁcient design. (The results shown in Figures 1(a), 3,</text>
<text top="926" left="475" width="359" height="12" font="3">and 4 are examples of this case.) For such queries, reducing the</text>
<text top="941" left="475" width="359" height="12" font="3">cluster size decreases the query energy consumption, although at</text>
<text top="957" left="475" width="359" height="12" font="3">the cost of performance. In such situations, one should reduce the</text>
<text top="973" left="475" width="359" height="12" font="3">performance to meet any required target (e.g., performance targets</text>
<text top="988" left="475" width="359" height="12" font="3">speciﬁed in SLAs in cloud environments). Then, the system can</text>
<text top="1004" left="475" width="359" height="12" font="3">reduce the server resource allocation accordingly. Thus, as we show</text>
<text top="1020" left="475" width="359" height="12" font="3">in Figure 12(b), if the acceptable performance loss is 40%, then</text>
<text top="1035" left="475" width="318" height="12" font="3">using 4 nodes is the best cluster design point for this query.</text>
<text top="1051" left="489" width="345" height="12" font="3">Finally, these previous design principles assume a homogeneous</text>
<text top="1067" left="475" width="359" height="12" font="3">cluster. For queries that are not scalable, a heterogeneous cluster</text>
</page>
<page number="12" position="absolute" top="0" left="0" height="1188" width="918">
<text top="87" left="81" width="360" height="12" font="3">may provide an interesting design point. As before, in this case,</text>
<text top="102" left="81" width="359" height="12" font="3">to pick a good cluster design point, we start with an acceptable</text>
<text top="118" left="81" width="359" height="12" font="3">target performance. Then, heterogeneous cluster conﬁgurations may</text>
<text top="134" left="81" width="361" height="12" font="3">provide a better cluster design point compared to the best homoge-</text>
<text top="149" left="81" width="359" height="12" font="3">neous cluster conﬁguration. As an example, consider the P-store</text>
<text top="165" left="81" width="359" height="12" font="3">dual-shufﬂe hash join query in Figure 12(c), and an acceptable</text>
<text top="181" left="81" width="361" height="12" font="3">performance loss of 40% relative to an eight “Beefy” node homo-</text>
<text top="196" left="81" width="359" height="12" font="3">geneous cluster design (labeled as 8B in the Figure). Here, the 5B</text>
<text top="212" left="81" width="359" height="12" font="3">conﬁguration is the best homogeneous cluster design point. But if</text>
<text top="228" left="80" width="362" height="12" font="3">we substitute some of the Beefy nodes with lower-powered “Wimpy”</text>
<text top="243" left="81" width="359" height="12" font="3">nodes then with two Beefy nodes and six Wimpy nodes we consume</text>
<text top="259" left="81" width="361" height="12" font="3">less energy than the 5B case and also have better query performance.</text>
<text top="275" left="81" width="359" height="12" font="3">Notice that the heterogeneous design points are below the EDP</text>
<text top="291" left="81" width="359" height="12" font="3">curve, which means that in these designs one proportionally saved</text>
<text top="306" left="81" width="359" height="12" font="3">more energy than the proportional performance loss (compared</text>
<text top="322" left="81" width="359" height="12" font="3">to the 8B case). Thus, for non-scalable queries, a heterogeneous</text>
<text top="338" left="81" width="359" height="12" font="3">cluster conﬁguration may provide a better design point, both from</text>
<text top="353" left="81" width="359" height="12" font="3">the energy efﬁciency and performance perspective, compared to</text>
<text top="369" left="81" width="161" height="12" font="3">homogeneous cluster designs.</text>
<text top="385" left="94" width="345" height="12" font="3">Note, the work in this paper has focused on single queries. We</text>
<text top="400" left="81" width="359" height="12" font="3">acknowledge that to make these results more meaningful, we need</text>
<text top="416" left="81" width="359" height="12" font="3">to expand the study to include entire workloads, and to consider</text>
<text top="432" left="81" width="359" height="12" font="3">the overall cost of using only part of a cluster for a portion of the</text>
<text top="447" left="80" width="359" height="12" font="3">workload. In other words, we acknowledge that additional work is</text>
<text top="463" left="81" width="359" height="12" font="3">needed to produce a complete practical solution. But, we hope the</text>
<text top="479" left="81" width="359" height="12" font="3">insights in this paper provide a good starting point to seed future</text>
<text top="494" left="81" width="111" height="12" font="3">research in this area.</text>
<text top="527" left="81" width="13" height="16" font="1">7.</text>
<text top="527" left="112" width="316" height="16" font="1">CONCLUSIONS AND FUTURE WORK</text>
<text top="550" left="94" width="347" height="12" font="3">In this paper, we have studied the trade-offs between the per-</text>
<text top="565" left="81" width="359" height="12" font="3">formance and the energy consumption characteristics of analytical</text>
<text top="581" left="81" width="359" height="12" font="3">queries, for various cluster designs. We have found that the query</text>
<text top="597" left="81" width="361" height="12" font="3">scalability properties have a key impact in determining the interac-</text>
<text top="613" left="81" width="359" height="12" font="3">tion between the query performance and its energy consumption</text>
<text top="628" left="81" width="359" height="12" font="3">characteristics. We have summarized our ﬁndings (in Section 6) as</text>
<text top="644" left="81" width="361" height="12" font="3">initial guiding principles for building energy-efﬁcient data process-</text>
<text top="660" left="81" width="65" height="12" font="3">ing clusters.</text>
<text top="675" left="94" width="347" height="12" font="3">There are a number of directions for future work, including ex-</text>
<text top="691" left="81" width="361" height="12" font="3">panding this work to consider entire workloads, exploring heteroge-</text>
<text top="707" left="81" width="360" height="12" font="3">neous execution plans to take advantage of heterogeneous clusters,</text>
<text top="722" left="81" width="359" height="12" font="3">examining the impact of data skew, and investigating the impact of</text>
<text top="738" left="81" width="232" height="12" font="3">dynamically varying multi-user workloads.</text>
<text top="771" left="81" width="13" height="16" font="1">8.</text>
<text top="771" left="112" width="209" height="16" font="1">ACKNOWLEDGEMENTS</text>
<text top="793" left="94" width="347" height="12" font="3">We thank David DeWitt, Jeffrey Naughton, Alan Halverson, Spy-</text>
<text top="809" left="81" width="359" height="12" font="3">ros Blanas, and Avrilia Floratou for their valuable input on this</text>
<text top="825" left="80" width="359" height="12" font="3">work. Part of this work was completed while Willis Lang, Stavros</text>
<text top="840" left="81" width="359" height="12" font="3">Harizopoulos, and Mehul Shah worked at HP Labs. This research</text>
<text top="856" left="80" width="361" height="12" font="3">was supported in part by a grant from the Microsoft Jim Gray Sys-</text>
<text top="872" left="81" width="361" height="12" font="3">tems Lab and by the National Science Foundation under grant IIS-</text>
<text top="888" left="81" width="50" height="12" font="3">0963993.</text>
<text top="920" left="81" width="13" height="16" font="1">9.</text>
<text top="920" left="112" width="121" height="16" font="1">REFERENCES</text>
<text top="938" left="86" width="289" height="9" font="6">[1] http://www.oracle.com/us/products/database/</text>
<text top="950" left="105" width="278" height="8" font="6">exadata-database-machine/overview/index.html</text>
<text top="950" left="383" width="3" height="9" font="6">.</text>
<text top="963" left="86" width="160" height="9" font="6">[2] http://www.netezza.com.</text>
<text top="977" left="86" width="160" height="9" font="6">[3] http://www.vertica.com.</text>
<text top="990" left="86" width="279" height="9" font="6">[4] http://www.actian.com/products/vectorwise.</text>
<text top="1003" left="86" width="289" height="9" font="6">[5] http://h18013.www1.hp.com/products/servers/</text>
<text top="1016" left="105" width="163" height="8" font="6">management/remotemgmt.html</text>
<text top="1015" left="268" width="3" height="9" font="6">.</text>
<text top="1029" left="86" width="347" height="9" font="6">[6] A. Abouzeid, K. Bajda-Pawlikowski, D. Abadi, A. Silberschatz, and A. Rasin.</text>
<text top="1041" left="105" width="318" height="9" font="6">Hadoopdb: an architectural hybrid of mapreduce and dbms technologies for</text>
<text top="1053" left="105" width="227" height="9" font="6">analytical workloads. In VLDB, pages 922–933, 2009.</text>
<text top="89" left="480" width="332" height="9" font="6">[7] H. Amur, J. Cipar, V. Gupta, G. R. Ganger, M. A. Kozuch, and K. Schwan.</text>
<text top="101" left="499" width="335" height="9" font="6">Robust and ﬂexible power-proportional storage. In SoCC, pages 217–228, 2010.</text>
<text top="112" left="480" width="319" height="9" font="6">[8] D. G. Andersen, J. Franklin, M. Kaminsky, A. Phanishayee, L. Tan, and</text>
<text top="124" left="499" width="329" height="9" font="6">V. Vasudevan. Fawn: a fast array of wimpy nodes. In SOSP, pages 1–14, 2009.</text>
<text top="137" left="480" width="337" height="9" font="6">[9] L. A. Barroso and U. H¨olzle. The Case for Energy-Proportional Computing.</text>
<text top="149" left="499" width="67" height="9" font="6">IEEE Computer</text>
<text top="149" left="566" width="91" height="9" font="6">, 40(12):33–37, 2007.</text>
<text top="162" left="475" width="359" height="9" font="6">[10] L. A. Barroso and U. Holzle. The Datacenter as a Computer: An Introduction to</text>
<text top="174" left="499" width="315" height="9" font="6">the Design of Warehouse-Scale Machines. Synthesis Lectures on Computer</text>
<text top="187" left="499" width="51" height="9" font="6">Architecture</text>
<text top="186" left="550" width="29" height="9" font="6">, 2009.</text>
<text top="200" left="475" width="322" height="9" font="6">[11] Y. Chen, S. Alspaugh, D. Borthakur, and R. Katz. Energy efﬁciency for</text>
<text top="212" left="499" width="304" height="9" font="6">large-scale mapreduce workloads with signiﬁcant interactive analysis. In</text>
<text top="224" left="499" width="34" height="9" font="6">EuroSys</text>
<text top="224" left="533" width="87" height="9" font="6">, pages 45–56, 2012.</text>
<text top="237" left="475" width="320" height="9" font="6">[12] D. DeWitt and J. Gray. Parallel Database Systems: The Future of High</text>
<text top="249" left="499" width="262" height="9" font="6">Performance Database Processing. CACM, 35(6):85–98, 1992.</text>
<text top="263" left="475" width="275" height="9" font="6">[13] Google Inc. Efﬁciency measurements - Google Datacenters.</text>
<text top="275" left="499" width="270" height="8" font="6">http://www.google.com/corporate/datacenter/</text>
<text top="287" left="499" width="176" height="8" font="6">efficiency-measurements.html</text>
<text top="287" left="676" width="3" height="9" font="6">.</text>
<text top="300" left="475" width="359" height="9" font="6">[14] G. Graefe. Database Servers Tailored to Improve Energy Efﬁciency. In Software</text>
<text top="312" left="499" width="201" height="9" font="6">Engineering for Tailor-made Data Management</text>
<text top="312" left="700" width="29" height="9" font="6">, 2008.</text>
<text top="325" left="475" width="344" height="9" font="6">[15] J. Hamilton. Where Does the Power go in DCs &amp; How to get it Back. In Foo</text>
<text top="337" left="499" width="300" height="9" font="6">Camp, http://www.mvdirona.com/jrh/TalksAndPapers/</text>
<text top="350" left="499" width="220" height="8" font="6">JamesRH_DCPowerSavingsFooCamp08.ppt</text>
<text top="349" left="719" width="29" height="9" font="6">, 2008.</text>
<text top="363" left="475" width="352" height="9" font="6">[16] S. Harizopoulos, V. Liang, D. J. Abadi, and S. Madden. Performance tradeoffs</text>
<text top="375" left="499" width="257" height="9" font="6">in read-optimized databases. In VLDB, pages 487–498, 2006.</text>
<text top="388" left="475" width="307" height="9" font="6">[17] S. Harizopoulos and S. Papadimitriou. A Case for Micro-cellstores:</text>
<text top="400" left="499" width="313" height="9" font="6">Energy-Efﬁcient Data Management on Recycled Smartphones. In DaMoN,</text>
<text top="412" left="499" width="81" height="9" font="6">pages 50–55, 2011.</text>
<text top="426" left="475" width="354" height="9" font="6">[18] S. Harizopoulos, M. A. Shah, J. Meza, and P. Ranganathan. Energy Efﬁciency:</text>
<text top="437" left="499" width="318" height="9" font="6">The New Holy Grail of Database Management Systems Research. In CIDR,</text>
<text top="449" left="499" width="24" height="9" font="6">2009.</text>
<text top="463" left="475" width="307" height="9" font="6">[19] J. G. Koomey. Growth in Data Center Electricity Use 2005 to 2010.</text>
<text top="475" left="499" width="289" height="8" font="6">http://www.mediafire.com/file/zzqna34282frr2f/</text>
<text top="487" left="499" width="276" height="8" font="6">koomeydatacenterelectuse2011finalversion.pdf</text>
<text top="487" left="776" width="29" height="9" font="6">, 2011.</text>
<text top="500" left="475" width="345" height="9" font="6">[20] A. Krioukov, C. Goebel, S. Alspaugh, Y. Chen, D. E. Culler, and R. H. Katz.</text>
<text top="512" left="499" width="313" height="9" font="6">Integrating renewable energy using data analytics systems: Challenges and</text>
<text top="524" left="499" width="232" height="9" font="6">opportunities. IEEE Data Eng. Bull., 34(1):3–11, 2011.</text>
<text top="538" left="475" width="358" height="9" font="6">[21] W. Lang, R. Kandhan, and J. M. Patel. Rethinking Query Processing for Energy</text>
<text top="550" left="499" width="336" height="9" font="6">Efﬁciency: Slowing Down to Win the Race. IEEE Data Eng. Bull., 34(1):12–23,</text>
<text top="562" left="499" width="24" height="9" font="6">2011.</text>
<text top="575" left="475" width="359" height="9" font="6">[22] W. Lang and J. M. Patel. Towards Eco-friendly Database Management Systems.</text>
<text top="587" left="499" width="64" height="9" font="6">In CIDR, 2009.</text>
<text top="600" left="475" width="336" height="9" font="6">[23] W. Lang and J. M. Patel. Energy Management for MapReduce Clusters. In</text>
<text top="612" left="499" width="26" height="9" font="6">VLDB</text>
<text top="612" left="525" width="97" height="9" font="6">, pages 129–139, 2010.</text>
<text top="626" left="475" width="328" height="9" font="6">[24] W. Lang, J. M. Patel, and J. F. Naughton. On Energy Management, Load</text>
<text top="638" left="499" width="274" height="9" font="6">Balancing and Replication. SIGMOD Record, 38(4):35–42, 2009.</text>
<text top="651" left="475" width="333" height="9" font="6">[25] W. Lang, J. M. Patel, and S. Shankar. Wimpy Node Clusters: What About</text>
<text top="663" left="499" width="240" height="9" font="6">Non-Wimpy Workloads? In DaMoN, pages 47–55, 2010.</text>
<text top="677" left="475" width="347" height="9" font="6">[26] J. Larkby-Lahet, G. Santhanakrishnan, A. Amer, and P. K. Chrysanthis. Step:</text>
<text top="689" left="499" width="281" height="9" font="6">Self-tuning energy-safe predictors. In MDM, pages 125–133, 2005.</text>
<text top="702" left="475" width="350" height="9" font="6">[27] J. Leverich and C. Kozyrakis. On the energy (in)efﬁciency of hadoop clusters.</text>
<text top="714" left="499" width="103" height="9" font="6">SIGOPS Oper. Syst. Rev.</text>
<text top="714" left="602" width="86" height="9" font="6">, 44(1):61–65, 2010.</text>
<text top="727" left="475" width="349" height="9" font="6">[28] J. Meza, M. A. Shah, P. Ranganathan, M. Fitzner, and J. Veazay. Tracking the</text>
<text top="739" left="499" width="318" height="9" font="6">power in an enterprise decision support system. In ISLPED, pages 261–266,</text>
<text top="751" left="499" width="24" height="9" font="6">2009.</text>
<text top="765" left="475" width="348" height="9" font="6">[29] R. Mueller, J. Teubner, and G. Alonso. Data Processing on FPGAs. In VLDB,</text>
<text top="777" left="499" width="92" height="9" font="6">pages 910–921, 2009.</text>
<text top="790" left="475" width="320" height="9" font="6">[30] D. A. Patteron. Latency Lags Bandwidth. CACM, 47(10):71–75, 2004.</text>
<text top="804" left="475" width="334" height="9" font="6">[31] A. Pavlo, E. Paulson, A. Rasin, D. J. Abadi, D. J. DeWitt, S. Madden, and</text>
<text top="816" left="499" width="334" height="9" font="6">M. Stonebraker. A Comparison of Approaches to Large-Scale Data Analysis. In</text>
<text top="828" left="499" width="40" height="9" font="6">SIGMOD</text>
<text top="828" left="539" width="97" height="9" font="6">, pages 165–178, 2009.</text>
<text top="841" left="475" width="355" height="9" font="6">[32] R. Raghavendra, P. Ranganathan, V. Talwar, Z. Wang, and X. Zhu. No ”power”</text>
<text top="853" left="499" width="306" height="9" font="6">struggles: coordinated multi-level power management for the data center.</text>
<text top="865" left="499" width="103" height="9" font="6">SIGOPS Oper. Syst. Rev.</text>
<text top="865" left="602" width="86" height="9" font="6">, 42(2):48–59, 2008.</text>
<text top="878" left="475" width="328" height="9" font="6">[33] A. S. Szalay, G. Bell, H. H. Huang, A. Terzis, and A. White. Low-Power</text>
<text top="890" left="499" width="323" height="9" font="6">Amdahl-Balanced Blades for Data Intensive Computing. SIGOPS Oper. Syst.</text>
<text top="902" left="499" width="17" height="9" font="6">Rev.</text>
<text top="902" left="516" width="86" height="9" font="6">, 44(1):71–75, 2010.</text>
<text top="916" left="475" width="317" height="9" font="6">[34] N. Tolia, Z. Wang, M. Marwah, C. Bash, P. Ranganathan, and X. Zhu.</text>
<text top="928" left="499" width="317" height="9" font="6">Delivering Energy Proportionality with Non Energy-Proportional Systems -</text>
<text top="940" left="499" width="194" height="9" font="6">Optimizing the Ensemble. In HotPower, 2008.</text>
<text top="953" left="475" width="328" height="9" font="6">[35] D. Tsirogiannis, S. Harizopoulos, and M. A. Shah. Analyzing the energy</text>
<text top="965" left="499" width="279" height="9" font="6">efﬁciency of a database server. In SIGMOD, pages 231–242, 2010.</text>
<text top="978" left="475" width="348" height="9" font="6">[36] V. Vasudevan, D. Andersen, M. Kaminsky, L. Tan, J. Franklin, and I. Moraru.</text>
<text top="990" left="499" width="326" height="9" font="6">Energy-efﬁcient cluster computing with fawn: workloads and implications. In</text>
<text top="1002" left="499" width="38" height="9" font="6">e-Energy</text>
<text top="1002" left="537" width="97" height="9" font="6">, pages 195–204, 2010.</text>
<text top="1016" left="475" width="356" height="9" font="6">[37] V. Vasudevan, J. Franklin, D. Andersen, A. Phanishayee, L. Tan, M. Kaminsky,</text>
<text top="1028" left="499" width="316" height="9" font="6">and I. Moraru. FAWNdamentally Power-efﬁcient Clusters. In HotOS, 2009.</text>
<text top="1041" left="475" width="336" height="9" font="6">[38] Z. Xu, Y.-C. Tu, and X. Wang. Exploring Power-Performance Tradeoffs in</text>
<text top="1053" left="499" width="214" height="9" font="6">Database Systems. In ICDE, pages 485–496, 2010.</text>
</page>
</pdf2xml>
